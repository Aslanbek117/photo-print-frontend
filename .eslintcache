[{"/Users/aslan/solution/src/reportWebVitals.js":"1","/Users/aslan/solution/src/index.tsx":"2","/Users/aslan/solution/src/serviceWorker.ts":"3","/Users/aslan/solution/src/App.tsx":"4","/Users/aslan/solution/src/components/sidebar/Sidebar.tsx":"5","/Users/aslan/solution/src/components/sidebar/product/Product.tsx":"6","/Users/aslan/solution/src/components/menu/Wrapper.tsx":"7","/Users/aslan/solution/src/actions/get.tsx":"8","/Users/aslan/solution/src/utils/Notifications.tsx":"9","/Users/aslan/solution/src/components/modsls/ProductModal.tsx":"10","/Users/aslan/solution/src/http/http.ts":"11","/Users/aslan/solution/src/components/income/Income.tsx":"12","/Users/aslan/solution/src/components/modsls/IncomeModal.tsx":"13","/Users/aslan/solution/src/components/storage/Storage.tsx":"14","/Users/aslan/solution/src/components/modsls/StorageModal.tsx":"15","/Users/aslan/solution/src/components/consumption/Consumption.tsx":"16","/Users/aslan/solution/src/components/login/Login.tsx":"17","/Users/aslan/solution/src/components/objects/Object.tsx":"18","/Users/aslan/solution/src/components/modsls/ObjectModal.tsx":"19","/Users/aslan/solution/src/components/accounting/Accounting.tsx":"20","/Users/aslan/solution/src/components/cash/Cash.tsx":"21","/Users/aslan/halyk/solution/src/index.tsx":"22","/Users/aslan/halyk/solution/src/serviceWorker.ts":"23","/Users/aslan/halyk/solution/src/App.tsx":"24","/Users/aslan/halyk/solution/src/components/header/Header.tsx":"25","/Users/aslan/halyk/solution/src/components/header/HeaderContent.tsx":"26","/Users/aslan/halyk/solution/src/components/header/HeaderSearchInput.tsx":"27","/Users/aslan/halyk/solution/src/components/mainPage/MainPage.tsx":"28","/Users/aslan/halyk/solution/src/components/backend-api/api.tsx":"29","/Users/aslan/halyk/solution/src/http/http.ts":"30","/Users/aslan/halyk/solution/src/components/header-temp/HeaderTemp.tsx":"31","/Users/aslan/halyk/solution/src/components/search/Search.tsx":"32","/Users/aslan/halyk/solution/src/components/category/Category.tsx":"33","/Users/aslan/halyk/solution/src/components/tree-nav/TreeNav.tsx":"34","/Users/aslan/halyk/solution/src/components/tree-content/TreeContent.tsx":"35","/Users/aslan/halyk/solution/src/components/item-list/ItemList.tsx":"36","/Users/aslan/halyk/solution/src/components/search-dropdown/SearchDrodown.tsx":"37","/Users/aslan/halyk/solution/src/components/article/Article.tsx":"38","/Users/aslan/halyk/solution/src/components/conditions/Conditions.tsx":"39","/Users/aslan/halyk/solution/src/components/process/Process.tsx":"40","/Users/aslan/halyk/solution/src/components/steps/Steps.tsx":"41","/Users/aslan/halyk/solution/src/components/departments/Department.tsx":"42","/Users/aslan/halyk/solution/src/components/modals/DepartmentModal.tsx":"43","/Users/aslan/halyk/solution/src/components/articlePage.tsx/ArticlePage.tsx":"44"},{"size":362,"mtime":1610017410515,"results":"45","hashOfConfig":"46"},{"size":503,"mtime":1610018387026,"results":"47","hashOfConfig":"46"},{"size":5295,"mtime":1610018344520,"results":"48","hashOfConfig":"46"},{"size":869,"mtime":1610199080360,"results":"49","hashOfConfig":"46"},{"size":2600,"mtime":1610271768155,"results":"50","hashOfConfig":"46"},{"size":3635,"mtime":1610270305020,"results":"51","hashOfConfig":"46"},{"size":1342,"mtime":1610271761692,"results":"52","hashOfConfig":"46"},{"size":6530,"mtime":1610269343622,"results":"53","hashOfConfig":"46"},{"size":742,"mtime":1610023684045,"results":"54","hashOfConfig":"46"},{"size":2560,"mtime":1610261154502,"results":"55","hashOfConfig":"46"},{"size":255,"mtime":1610197735504,"results":"56","hashOfConfig":"46"},{"size":7147,"mtime":1610269985952,"results":"57","hashOfConfig":"46"},{"size":3332,"mtime":1610064937702,"results":"58","hashOfConfig":"46"},{"size":5897,"mtime":1610270273033,"results":"59","hashOfConfig":"46"},{"size":3609,"mtime":1610204592129,"results":"60","hashOfConfig":"46"},{"size":7205,"mtime":1610270115326,"results":"61","hashOfConfig":"46"},{"size":2455,"mtime":1610201163349,"results":"62","hashOfConfig":"46"},{"size":3170,"mtime":1610204455186,"results":"63","hashOfConfig":"46"},{"size":1871,"mtime":1610202737104,"results":"64","hashOfConfig":"46"},{"size":7095,"mtime":1610268141796,"results":"65","hashOfConfig":"46"},{"size":8785,"mtime":1610272602016,"results":"66","hashOfConfig":"46"},{"size":503,"mtime":1610018387026,"results":"67","hashOfConfig":"68"},{"size":5295,"mtime":1610018344520,"results":"69","hashOfConfig":"68"},{"size":977,"mtime":1611130097367,"results":"70","hashOfConfig":"68"},{"size":1053,"mtime":1610522634480,"results":"71","hashOfConfig":"68"},{"size":2193,"mtime":1610521872307,"results":"72","hashOfConfig":"68"},{"size":1600,"mtime":1610523871261,"results":"73","hashOfConfig":"68"},{"size":6400,"mtime":1611147801587,"results":"74","hashOfConfig":"68"},{"size":3172,"mtime":1611213455216,"results":"75","hashOfConfig":"68"},{"size":254,"mtime":1610560564724,"results":"76","hashOfConfig":"68"},{"size":796,"mtime":1610536635316,"results":"77","hashOfConfig":"68"},{"size":3479,"mtime":1611127202814,"results":"78","hashOfConfig":"68"},{"size":4509,"mtime":1610805812311,"results":"79","hashOfConfig":"68"},{"size":13738,"mtime":1611029856475,"results":"80","hashOfConfig":"68"},{"size":8784,"mtime":1611213410372,"results":"81","hashOfConfig":"68"},{"size":3907,"mtime":1611128935846,"results":"82","hashOfConfig":"68"},{"size":1281,"mtime":1610889403133,"results":"83","hashOfConfig":"68"},{"size":3259,"mtime":1611154639354,"results":"84","hashOfConfig":"68"},{"size":807,"mtime":1611144075282,"results":"85","hashOfConfig":"68"},{"size":1506,"mtime":1611144127914,"results":"86","hashOfConfig":"68"},{"size":2984,"mtime":1611213650687,"results":"87","hashOfConfig":"68"},{"size":3370,"mtime":1611141510372,"results":"88","hashOfConfig":"68"},{"size":1234,"mtime":1611140970233,"results":"89","hashOfConfig":"68"},{"size":4648,"mtime":1610780871230,"results":"90","hashOfConfig":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ksrdtt",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"95"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"95"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"95"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"95"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"95"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"95"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"95"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"95"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"95"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"95"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"95"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"95"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"95"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"95"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},"sm964x",{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"154"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"163"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"154"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"179"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"154"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"154"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"154"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"154"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"154"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"154"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"154"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"154"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"154"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"154"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/aslan/solution/src/reportWebVitals.js",[],"/Users/aslan/solution/src/index.tsx",[],["217","218"],"/Users/aslan/solution/src/serviceWorker.ts",[],"/Users/aslan/solution/src/App.tsx",["219","220"],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Sidebar } from './components/sidebar/Sidebar';\nimport \"antd/dist/antd.css\";\nimport 'ant-design-pro/dist/ant-design-pro.css'; // Import whole style\nimport { Login } from './components/login/Login';\nimport {\n  BrowserRouter as Router,\n  Link,\n  Switch,\n  Route\n} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n\n        <div>\n          <div className=\"wrapper\">\n            <Switch>\n              <Route exact path=\"/\" component={Sidebar} />\n\n              <div className=\"auth-wrapper\">\n                <div className=\"auth-inner\">\n                  <Route exact path=\"/login\" component={Login} />\n                </div>\n              </div>\n            </Switch>\n          </div>\n        </div>\n      </div>\n    </Router>\n\n  );\n}\n\nexport default App;\n","/Users/aslan/solution/src/components/sidebar/Sidebar.tsx",["221","222"],"import React from 'react'\nimport { Layout, Menu } from 'antd';\nimport Icon, {\n  UserOutlined,\n  VideoCameraOutlined,\n  PlusOutlined,\n  MinusOutlined,\n  AppstoreOutlined,\n  AuditOutlined,\n  ShoppingCartOutlined,\n} from '@ant-design/icons';\nimport { Wrapper } from '../menu/Wrapper';\nconst { Header, Content, Footer, Sider } = Layout;\nconst SubMenu = Menu.SubMenu;\n\ninterface MenuState {\n  title: string;\n  state: number;\n}\n\n\nexport class Sidebar extends React.Component<{}, MenuState> {\n\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n        title: \"\", \n        state: 0,\n    }\n\n    this.handleMenuClick = this.handleMenuClick.bind(this);\n}\n\n\ncomponentDidMount() {\n  this.setState({\n      title: \"Товары\",\n      state: 1,\n  });\n}\n\nhandleMenuClick(event: any) {\n  console.log(event)\n  this.setState({\n    title: event.key,\n    state: parseInt(event.key, 10)\n  })\n\n  console.log(this.state);\n}\n\n\n  render() {\n    return (\n<Layout>\n    <Sider\n      style={{\n        overflow: 'auto',\n        height: '100vh',\n        position: 'fixed',\n        left: 0,\n      }}\n    >\n      <div className=\"logo\" />\n      <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['4']}   onClick={this.handleMenuClick}>\n        <Menu.Item key=\"1\" icon={<UserOutlined />}>\n          Товары\n        </Menu.Item>\n        <Menu.Item key=\"2\" icon={<PlusOutlined />}>\n          Приход\n        </Menu.Item>\n        <Menu.Item key=\"3\" icon={<MinusOutlined />}>\n          Расход\n        </Menu.Item>\n        <Menu.Item key=\"4\" icon={<AppstoreOutlined />}>\n          Склад\n        </Menu.Item>\n        <Menu.Item key=\"5\" icon={<ShoppingCartOutlined />}>\n          Точки\n        </Menu.Item>\n\n        <Menu.Item key=\"8\" icon={<ShoppingCartOutlined />}>\n          Касса\n        </Menu.Item>\n\n\n\n        <SubMenu key=\"sub1\" title={<span><AuditOutlined /><span>Учет</span></span>}>\n            <Menu.Item key=\"6\">Товары</Menu.Item>\n            <Menu.Item key=\"8\">Касса</Menu.Item>\n          </SubMenu>\n\n      </Menu>\n    </Sider>\n    <Layout className=\"site-layout\" style={{ marginLeft: 200 }}>\n      <Header className=\"site-layout-background\" style={{ padding: 0 }} >\n        \n      </Header>\n      <Content style={{ margin: '24px 16px 0', overflow: 'initial' }}>\n        <div className=\"site-layout-background\" style={{ padding: 24 }}>\n          <Wrapper state={this.state.state} title={this.state.title}/>              \n        </div>\n      </Content>\n      <Footer style={{ textAlign: 'center' }}>Villa © 2021 </Footer>\n    </Layout>\n  </Layout>\n    );\n  }\n}\n\n","/Users/aslan/solution/src/components/sidebar/product/Product.tsx",["223","224","225","226","227","228","229","230","231"],"import React, { FunctionComponent, useState, useEffect } from 'react'\nimport { Table, Tag, Space } from 'antd';\nimport { Button } from 'antd';\nimport { infoMessage, successMessage, errorMessage } from '../../../utils/Notifications';\nimport { CreateProduct, GetProductsList } from '../../../actions/get';\nimport { ProductFormModal } from '../../modsls/ProductModal';\nimport { CreateProductDTO } from '../../../dto/CreateProductDTO';\nimport CheckOutlined, { DeleteOutlined, CheckCircleOutlined, DownCircleTwoTone, CloseCircleTwoTone } from '@ant-design/icons';\nimport { User } from '../../../entities/User';\nimport { useLocation, useHistory } from 'react-router';\nimport { ProductEntity } from '../../../entities/Product';\n\nconst columns = [\n    {\n        title: 'Наименование',\n        dataIndex: 'title',\n        key: 'title',\n    },\n    {\n        title: 'Цена (тг.)',\n        dataIndex: \"price\",\n        key: 'price',\n        \n    },\n    {\n        title: 'Создано',\n        key: 'created',\n        render: (res: ProductEntity) => (new Date(res.created).toISOString().split('T')[0]\n        )\n    }\n];\n\n\n\ninterface ProductProps {\n    isModalVisible: boolean;\n}\n\n\nexport const Product: FunctionComponent<ProductProps> = (data: ProductProps) => {\n    const [visible, setVisible] = useState(false);\n    const [isLoading, setisLoading] = useState(true);\n    const [response, setResponse] = useState<any>(null)\n\n\n    const [user, setUser] = useState<User>();\n    let history = useHistory();\n    let location = useLocation();\n\n\n\n\n    const createNewProduct = async (productTitle: string, price: number) => {\n        setVisible(false);\n        infoMessage(\"Отправлен запрос на создании позиции\", \"\");\n        let response;\n\n        let createProductDTO: CreateProductDTO = {\n            title: productTitle,\n        };\n\n\n        let body = {\n            \"product\": {\n                \"title\": createProductDTO.title,\n                \"user_id\": user?.id,\n                \"price\": price\n            }\n        };\n\n        console.log(\"[CreateProductDTO] \", body)\n\n        response = await CreateProduct(user?.token!, body);\n\n        if (response) {\n            successMessage(\"Позиция успешно создана\", \"\");\n            // await this.getDirsList();\n        } else {\n            errorMessage(\"Произошла ошибка при создании позиции\", response.message);\n        }\n    }\n\n    useEffect(() => {\n        setisLoading(true);\n        async function fetchMyAPI() {\n            if (localStorage.hasOwnProperty(\"user\")) {\n                let user = JSON.parse(localStorage.getItem(\"user\") || {} as any);\n                setUser(user);\n            } else {\n                history.push('/login');\n            }\n\n            let resp = await GetProductsList(user?.token!);\n            setResponse(resp)\n            setisLoading(false);\n        }\n\n        fetchMyAPI()\n    \n    }, [])\n\n    return (\n\n        <div>\n            {isLoading ? \"loading\" : (\n                <div>\n\n                    <Button type=\"primary\" onClick={() => setVisible(true)}> Добавить позицию</Button>\n                    <ProductFormModal visible={visible} inputPlaceHolder=\"Кола\" onConfirm={(productTitle, price) => createNewProduct(productTitle, price)} onCancel={() => setVisible(false)} title=\"Создание позиции\" okText={\"Создать\"} />\n\n                    <div>\n                        <Table dataSource={response} columns={columns} />;\n                    </div>\n                </div>\n            )}\n\n        </div>\n    );\n}\n\n","/Users/aslan/solution/src/components/menu/Wrapper.tsx",["232"],"import React, { FunctionComponent } from 'react'\nimport { Product } from '../sidebar/product/Product';\nimport { Storage } from '../storage/Storage';\nimport { GetProductsList } from '../../actions/get';\nimport { Income } from '../income/Income';\nimport { Consumption } from '../consumption/Consumption';\nimport { ObjectComponent } from '../objects/Object';\nimport { Accounting } from '../accounting/Accounting';\nimport { Cash } from '../cash/Cash';\n\ninterface ContentProps {\n    state: number;\n    title: string;\n}\n\n\n\nexport const Wrapper: FunctionComponent<ContentProps> = (props: ContentProps) => {\n    let toDisplay;\n    if (props.state === 1) {\n        toDisplay = <Product isModalVisible={false}  />\n    } else if (props.state === 2) {\n        toDisplay = <Income isModalVisible={false} />\n    } else if (props.state === 3) {\n      toDisplay = <Consumption isModalVisible={false} />   \n    } else if (props.state === 4) {\n         toDisplay = <Storage isModalVisible={false} />\n    } else if (props.state === 5) {\n        toDisplay = <ObjectComponent isModalVisible={false} />\n    } else if (props.state === 6) {\n        toDisplay = <Accounting isModalVisible={false} />\n    } else if (props.state === 8) {\n        toDisplay = <Cash isModalVisible={false} />\n    }\n    return (\n        <div>\n            {toDisplay}\n        </div>\n    )\n}","/Users/aslan/solution/src/actions/get.tsx",["233"],"import { httpClient } from \"../http/http\";\n\nimport { User,  RegisterRequestBody, LoginRequestBody, UserObject } from '../entities/User';\n\n\n//Products List\nexport const GetProductsList = async (token: string): Promise<any> =>  {\n    try {\n        const response = await  (await (await httpClient(token))).get(\"product/list\")\n        return response.data;\n    } catch (err) {\n        return {} as any;\n    }\n}\n\n\n\nexport const CreateProduct = async(token: string, body: any): Promise<any> => {\n    console.log(\"HERE\");\n    try {\n\n        console.log(\"sending\", JSON.stringify(body))\n        const response = await (await (await httpClient(token))).post(\"product/create\", body)\n        return response.data;\n    } catch (err) {\n        console.log(err)\n        return {} as any;\n    }\n}\n\n//Objects\n\nexport const GetObjectList = async (token: string): Promise<any> =>  {\n    try {\n        const response = await  (await (await httpClient(token))).get(\"object/list\")\n        return response.data;\n    } catch (err) {\n        return {} as any;\n    }\n}\n\n\n\nexport const CreateObject = async(token: string, body: any): Promise<any> => {\n    console.log(\"HERE\");\n    try {\n\n        console.log(\"sending\", JSON.stringify(body))\n        const response = await (await (await httpClient(token))).post(\"object/create\", body)\n        return response.data;\n    } catch (err) {\n        console.log(err)\n        return {} as any;\n    }\n}\n\n//Storage list \nexport const GetStorageList = async (token: string): Promise<any> =>  {\n    try {\n        const response =  await (await httpClient(token)).get(\"storage/list\")\n        return response.data;\n    } catch (err) {\n        return {} as any;\n    }\n}\n\n//Storage list Filter\nexport const GetStorageListFilter = async (token: string, object_name: string): Promise<any> =>  {\n    try {\n        const response =  await (await httpClient(token)).get(\"storage/list/filter?object_name=\" +object_name)\n        return response.data;\n    } catch (err) {\n        return {} as any;\n    }\n}\n\n//Storage list \nexport const GetAccountingList = async (token: string, filter: string): Promise<any> =>  {\n    try {\n        const response =  await (await httpClient(token)).get(\"accounting/list?object_name=\" + filter)\n        return response.data;\n    } catch (err) {\n        return {} as any;\n    }\n}\n\n\n\n\nexport const CreateStorageItem = async(token: string, body: any): Promise<any> => {\n    try {\n\n        // let body: CreateProductModel = {\n        //     product: createProductDTO\n        // }\n\n        // console.log(JSON.stringify(body));\n        // let body = {\n        //     \"product\": {\n        //         \"title\": createProductDTO.title,\n        //         \"isAqua\": createProductDTO.isAqua,\n        //         \"isEat\": createProductDTO.isEat,\n        //         \"unit\": createProductDTO.unit\n        //     }\n        // };\n        \n        console.log(\"sending\", JSON.stringify(body))\n        const response = await  (await httpClient(token)).post(\"storage/create\", body)\n        return response.data;\n    } catch (err) {\n        console.log(err)\n        return {} as any;\n    }\n}\n\n\n\nexport const CreateIncomeArray = async(token: string, body: any): Promise<any> => {\n    console.log(\"HERE\");\n    try {\n\n        console.log(\"sending\", JSON.stringify(body))\n        const response = await (await httpClient(token)).post(\"income/create/array\", body)\n        return response.data;\n    } catch (err) {\n        console.log(err)\n        return {} as any;\n    }\n}\n\n\nexport const CreateConsumptionArray = async(token: string, body: any): Promise<any> => {\n    console.log(\"HERE\");\n    try {\n\n        console.log(\"sending\", JSON.stringify(body))\n        const response = await (await httpClient(token)).post(\"consumption/create/array\", body)\n        return response.data;\n    } catch (err) {\n        console.log(err)\n        return {} as any;\n    }\n}\n\n\n\n\n\nexport const getAll = async (token: string, users?: User[]) =>  {\n    try {\n        const response = await (await httpClient(token)).get(\"/api/user/users/all\");\n        const data = response.data;\n        return data;\n    } catch (err) {\n        throw err;\n    }\n}\n\n\nexport const createOne = async (token: string, registerRequestBody?: RegisterRequestBody): Promise<UserObject> => {\n    try {\n        const response = await (await httpClient(token)).post(\"/user/create\", registerRequestBody);\n        return response.data.user;\n    } catch (err) { \n        return null as any;\n    }\n}\n\nexport const login = async (loginRequestBody: LoginRequestBody): Promise<UserObject> => {\n    try {\n        const response = await (await httpClient(\"null\")).post(\"/user/login\", loginRequestBody);\n        console.log(\"login response data\", response.data.user);\n        return response.data.user;\n    } catch (err) {\n        console.log(\"error\", err);\n        return null as any;\n    }\n}\n\n\n export function getUserStorage(): UserObject {\n    let currentUser: UserObject;\n    if (localStorage.hasOwnProperty(\"user\")) {\n        let object  = JSON.parse(localStorage.getItem(\"user\") || {} as any);\n        currentUser = object;\n        console.log(\"current user\", currentUser)\n        return currentUser;\n    } else {\n        return null as any;\n    }\n}\n\n\nexport const loginByEmail = async (token: string, email: string): Promise<UserObject>  =>{\n    try {\n        const response = await (await httpClient(token)).get(\"/user/\"+ email);\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n        return response.data;\n    } catch (err) {\n        return null as any;\n    }\n}\n\n\nexport const getUserState= async (token: string, email: string): Promise<UserObject> => {\n   const user = await  loginByEmail(token, email);\n   return await getUserStorage();\n}\n\n\nexport const uploadPhoto = async (token: string, formData: any) => {\n    try {\n        \n        const response = await (await httpClient(token)).post(\"/user/photo/upload\", formData)\n        return response.data;\n    } catch (err) {\n        return null as any;\n    }\n}\n\nexport const setAvatar = async (token: string, formData: any, userId: string) => {\n    try {\n        const response = await uploadPhoto(token, formData);\n\n        if (response != null) {\n            const payload = {\n                \"photo\": {\n                    \"userId\": userId,\n                    \"imageUrl\": response.url\n                }\n            }\n            const s = await (await httpClient(token)).post(\"user/photo/set\", payload );\n            return s.data\n        }\n    } catch (err) {\n        return null as any;\n    }\n}","/Users/aslan/solution/src/utils/Notifications.tsx",[],"/Users/aslan/solution/src/components/modsls/ProductModal.tsx",["234","235","236","237","238","239","240","241","242","243"],"import React, { useState } from 'react';\nimport { Button, Modal, Form, Input, Radio, InputNumber } from 'antd';\nimport { Checkbox } from 'antd';\n\nimport { Select } from 'antd';\n\nconst { Option } = Select;\n\n\ninterface Values {\n    title: string;\n    description: string;\n    modifier: string;\n}\n\ninterface ProductFormModalProps {\n    visible: boolean;\n    title: string;\n    // isAqua: boolean;\n    // isEat: boolean;\n    // unit: string;\n    inputPlaceHolder: string;\n    okText: string;\n    //   onConfirm: (values: Values) => void;\n    onConfirm: (productTitle: string, price: number) => void;\n    onCancel: () => void;\n}\n\nexport const ProductFormModal: React.FC<ProductFormModalProps> = ({\n    visible,\n    onConfirm,\n    onCancel,\n    title,\n    inputPlaceHolder,\n    okText\n}) => {\n    const [form] = Form.useForm();\n\n    function onChangeAqua(e) {\n        setIsAqua(e.target.checked);\n        \n    }\n\n    function onChangeEat(e) {\n        setIsEat(e.target.checked);\n    }\n\n    function handleChange(value) {\n        \n    }\n\n    const [isAqua, setIsAqua] = useState(false);\n    const [isEat, setIsEat] = useState(false);\n\n    return (\n        <Modal\n            visible={visible}\n            title={title}\n            okText={okText}\n            cancelText=\"Отменить\"\n            onCancel={onCancel}\n            onOk={() => {\n                \n                form\n                    .validateFields()\n                    .then((values) => {\n                        form.resetFields();\n                        console.log(values);\n                        onConfirm(values.title, values.price);\n                    })\n                    .catch(info => {\n                    });\n            }}\n        >\n            <Form\n                form={form}\n                layout=\"vertical\"\n                name=\"form_in_modal\"\n                initialValues={{ modifier: 'public' }}\n            >\n                <Form.Item\n                    name=\"title\"\n                    label=\"Название\"\n                    rules={[\n                        { required: true, type: 'string' }]}\n                >\n                    <Input placeholder={inputPlaceHolder} />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"price\"\n                    label=\"Цена за единицу\"\n                    rules={[\n                        { required: true, type: 'number' }]}\n                >\n                    <InputNumber />\n                </Form.Item>\n              \n            </Form>\n\n\n        </Modal>\n    );\n};","/Users/aslan/solution/src/http/http.ts",[],"/Users/aslan/solution/src/components/income/Income.tsx",["244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265"],"import React, { FunctionComponent, useState, useEffect } from 'react'\nimport { Table, Tag, Space, Select } from 'antd';\nimport { Button } from 'antd';\nimport { infoMessage, successMessage, errorMessage } from '../../utils/Notifications';\nimport { CreateProduct, GetProductsList, CreateIncomeArray, GetStorageList, GetStorageListFilter, GetObjectList } from '../../actions/get';\nimport { IncomeModal } from '../modsls/IncomeModal';\nimport { AddIncomeBody, CreateIncomeBody } from '../../entities/Income';\nimport { Input, InputNumber, Popconfirm, Form, Typography } from 'antd';\nimport { StorageEntity } from '../../entities/Storage';\nimport { ProductEntity } from '../../entities/Product';\nimport { User } from '../../entities/User';\nimport { useLocation, useHistory } from 'react-router';\nimport { ColumnProps } from \"antd/lib/table\";\nimport { DatePicker } from 'antd';\nimport locale from 'antd/es/date-picker/locale/ru_RU';\nimport moment from 'moment';\nimport { ObjectEntity } from '../../entities/Object';\n\nconst { Option } = Select;\n\nconst dateFormat = 'YYYY/MM/DD';\n\ninterface IncomeProps {\n    isModalVisible: boolean;\n}\n\n\nexport const Income: FunctionComponent<IncomeProps> = (props: IncomeProps) => {\n    const [visible, setVisible] = useState(false);\n    const [isLoading, setisLoading] = useState(true);\n    const [storage, setStorage] = useState<StorageEntity[]>([])\n\n    const [income, setIncome] = useState<AddIncomeBody[]>([])\n\n    const [objects, setObjects] = useState<ObjectEntity[]>([]);\n    const [objectName, setObjectName] = useState();\n\n    const [form] = Form.useForm();\n\n\n\n    const [user, setUser] = useState<User>();\n    let history = useHistory();\n    let location = useLocation();\n\n\n    useEffect(() => {\n        setisLoading(true);\n        async function fetchMyAPI() {\n            if (localStorage.hasOwnProperty(\"user\")) {\n                let user = JSON.parse(localStorage.getItem(\"user\") || {} as any);\n                setUser(user);\n            } else {\n                history.push('/login');\n            }\n\n\n            let resp = await GetStorageList(user?.token!);\n            setStorage(resp)\n\n            let objects = await GetObjectList(user?.token!);\n\n            setObjects(objects);\n            setisLoading(false);\n        }\n\n        fetchMyAPI()\n\n    }, [])\n\n\n    function handleChange(product_title: string, amount: number) {\n        let income: AddIncomeBody = {\n            product_id: 0,\n            amount: amount,\n            product_title: product_title\n        };\n        setIncome(result => [...result, income]);\n    }\n\n    async function handleChangeObject(value) {\n        setObjectName(value);\n        let resp: StorageEntity[] = [];\n        if (value == \"all\") {\n            resp = await GetStorageList(user?.token!);\n        }\n        else {\n            resp = await GetStorageListFilter(user?.token!, value);\n        }\n        setStorage(resp)\n    }\n\n\n\n    // function saveIncome() {\n    //     storage.map(p => {\n\n    //         income.map(i => {\n    //             if (p. === i.product_title) {\n    //                 i.product_id = p.id;\n    //             }\n    //         })\n    //     })\n\n    // }\n\n\n    const onInputChange = (key, index) => (\n        e: React.ChangeEvent<HTMLInputElement>\n    ) => {\n        const newData = [...storage];\n        console.log(key, index);\n        newData[index][key] = Number(e.target.value);\n        newData[index][\"date\"] = new Date().toISOString();\n        setStorage(newData);\n    };\n\n    const onConfirm = () => {\n        const toSave: CreateIncomeBody[] = [];\n\n        storage.forEach(st => {\n            if (st.income != undefined && st.income > 0) {\n                let obj: CreateIncomeBody = {\n                    product_id: st.product.id,\n                    user_id: user?.id!,\n                    storage_id: st.id,\n                    amount: st.income,\n                    date: st.date,\n                };\n\n                toSave.push(obj);\n            }\n        })\n\n        let body = {\n            \"incomes\": toSave\n        }\n        console.log(\"SAVING\", body);\n\n        CreateIncomeArray(user?.token!, body);\n\n\n    };\n\n    function onChange(index, date, dateString) {\n        console.log(date, dateString);\n        const newData = [...storage]\n        newData[index][\"date\"] = date._i;\n        setStorage(newData);\n    }\n\n    const columns: ColumnProps<StorageEntity>[] = [\n        {\n            title: \"Наименование\",\n            key: \"id\",\n            render: (storage: StorageEntity) => (\n                storage.product.title\n            )\n        },\n        {\n            title: \"Точка\",\n            render: (storage: StorageEntity) => (\n                storage.object?.name || \"отсутствует на складе\"\n            )\n        },\n        {\n            title: \"Количество на складе\",\n            dataIndex: \"current_amount\",\n            width: \"15%\",\n            key: \"storage.amount\",\n        },\n        {\n            title: \"Приход\",\n            key: \"income\",\n            width: \"15%\",\n            render: (text, record, index) => (\n                <Input value={record.income} onChange={onInputChange(\"income\", index)} />\n            )\n        },\n        {\n            title: \"Дата\",\n            key: \"date\",\n            width: \"30%\",\n            render: (text, record, index) => (\n                <DatePicker\n                    defaultValue={moment()} format={dateFormat}\n                    onChange={(a) => onChange(index, a, dateFormat)} picker=\"week\" locale={locale} size={'middle'}\n                    disabled={true} />\n            )\n        },\n        {\n            dataIndex: \"total\",\n            title: \"Итого\",\n            width: \"20%\",\n            key: \"amount\",\n            render: (text, record, index) => <h4>{Number.isInteger(record.current_amount + record.income) ? record.current_amount + record.income : record.current_amount}</h4>\n        }\n    ];\n\n    return (\n        <div style={{ padding: 20 }}>\n            <h1>\n                Создание прихода\n\n            <Form\n                form={form}\n                layout=\"inline\"\n                name=\"form_in_modal\"\n                initialValues={{ modifier: 'public' }}\n            >\n                <Form.Item\n                label={\"Выберите точку\"}\n                >\n                    <Select style={{ width: 120 }} onChange={handleChangeObject}>\n                        {objects.map(p => (\n                            <Option value={p.name} > {p.name} </Option>\n                        ))}\n                        <Option value={\"all\"} > Все </Option>\n                    </Select>\n                </Form.Item>\n            </Form>\n            </h1>\n\n\n            <Table\n                rowKey=\"id\"\n                columns={columns}\n                dataSource={storage}\n                pagination={false}\n            />\n            <div className=\"action-btn\">\n                <Button type=\"primary\" onClick={onConfirm}>\n                    Сохранить изменения\n            </Button>\n            </div>\n        </div>\n    );\n}","/Users/aslan/solution/src/components/modsls/IncomeModal.tsx",["266","267","268","269","270","271","272","273","274","275"],"import React, { useState } from 'react';\nimport { Button, Modal, Form, Input, Radio } from 'antd';\nimport { DatePicker, Space } from 'antd';\n\n// import 'moment/locale/ru';\nimport locale from 'antd/es/date-picker/locale/ru_RU';\nimport moment from 'moment';\n\nimport { Select } from 'antd';\n\nconst { Option } = Select;\n\nconst dateFormat = 'YYYY/MM/DD';\n\n\n\ninterface Values {\n    title: string;\n    description: string;\n    modifier: string;\n}\n\ninterface IncomeFormModalProps {\n    visible: boolean;\n    title: string;\n    // isAqua: boolean;\n    // isEat: boolean;\n    // unit: string;\n    inputPlaceHolder: string;\n    okText: string;\n    products: any;\n    //   onConfirm: (values: Values) => void;\n    onConfirm: (product_title: string, amount: number) => void;\n    onCancel: () => void;\n}\n\nexport const IncomeModal: React.FC<IncomeFormModalProps> = ({\n    visible,\n    onConfirm,\n    onCancel,\n    title,\n    inputPlaceHolder,\n    okText, \n    products\n}) => {\n    const [form] = Form.useForm();\n\n    function onChangeAqua(e) {\n        setIsAqua(e.target.checked);\n        \n    }\n\n    function onChangeEat(e) {\n        setIsEat(e.target.checked);\n    }\n\n    function handleChange(value) {\n        setProductTitle(value);\n    }\n\n    const [isAqua, setIsAqua] = useState(false);\n    const [isEat, setIsEat] = useState(false);\n\n    const [productTitle, setProductTitle] = useState(\"\");\n    const [productId, setProductid] = useState(0);\n\n    function onChange(date, dateString) {\n        console.log(date, dateString);\n      }\n\n    return (\n        <Modal\n            visible={visible}\n            title={title}\n            okText={okText}\n            cancelText=\"Отменить\"\n            onCancel={onCancel}\n            onOk={() => {\n                \n                form\n                    .validateFields()\n                    .then((values) => {\n                        form.resetFields();\n                        console.log(values);\n                        onConfirm(productTitle, values.amount);\n                    })\n                    .catch(info => {\n                    });\n            }}\n        >\n            <Form\n                form={form}\n                layout=\"vertical\"\n                name=\"form_in_modal\"\n                initialValues={{ modifier: 'public' }}\n            >\n                <Form.Item\n                    name=\"product\"\n                    label=\"Продукт\"\n                >\n                     <Select style={{ width: 120 }} onChange={handleChange}>\n                        {products.map(p => (\n                            <Option value={p.title} > {p.title} </Option>\n                        ))}\n                    </Select>\n                </Form.Item>\n\n                <Form.Item\n                    name=\"amount\"\n                    label=\"Количество\"\n                >\n                    <Input placeholder={inputPlaceHolder} />\n\n                </Form.Item>\n\n                <Form.Item \n                name=\"date\"\n                label=\"Дата\"\n                \n                >\n                <DatePicker \n                 defaultValue={moment('2015/01/01')} format={dateFormat}\n                onChange={onChange} picker=\"week\" locale={locale} size={'middle'}/>\n                </Form.Item>\n\n              \n            </Form>\n\n\n        </Modal>\n    );\n};",["276","277"],"/Users/aslan/solution/src/components/storage/Storage.tsx",["278","279","280","281","282","283","284","285","286","287","288","289","290","291"],"import React, { FunctionComponent, useState, useEffect } from 'react'\nimport { Table, Tag, Space, Form, Select } from 'antd';\nimport { Button } from 'antd';\nimport CheckOutlined, { DeleteOutlined, CheckCircleOutlined, DownCircleTwoTone, CloseCircleTwoTone } from '@ant-design/icons';\nimport { GetStorageList, CreateStorageItem, GetProductsList, GetObjectList, GetStorageListFilter } from '../../actions/get';\nimport { StorageEntity } from '../../entities/Storage';\nimport { infoMessage, successMessage, errorMessage } from '../../utils/Notifications';\nimport { StorageFormModal } from '../modsls/StorageModal';\nimport { User } from '../../entities/User';\nimport { useLocation, useHistory } from 'react-router';\nimport { ObjectEntity } from '../../entities/Object';\nconst { Option } = Select;\n\n\nconst columns = [\n    {\n        title: 'Наименование',\n        key: \"product.title\",\n        render: (res: StorageEntity) => (res.product.title )\n    },\n    {\n        title:\"Количество\",\n        dataIndex: \"current_amount\",\n        key:\"current_amount\",\n    },\n    {\n        title: 'Минимальный лимит',\n        // dataIndex: \"created\",\n        key: 'min_limit',\n        render: (res: StorageEntity) => (res.min_limit)\n    },\n    {\n        title: 'Точка',\n        // dataIndex: \"created\",\n        key: 'created',\n        render: (res: StorageEntity) => (res.object?.name || \"отсутствует\")\n    },\n    {\n        title: 'Создано',\n        // dataIndex: \"created\",\n        key: 'created',\n        render: (res: StorageEntity) => (new Date(res.created).toISOString().split('T')[0]\n        )\n    },\n];\n\n\n\ninterface StorageProps {\n    isModalVisible: boolean;\n}\n\n\nexport const Storage: FunctionComponent<StorageProps> = (data: StorageProps) => {\n    const [isLoading, setisLoading] = useState(true);\n    const [visible, setVisible] = useState(false);\n\n    const [response, setResponse] = useState<any>(null)\n\n    const [products, setProducts] = useState<any[]>([])\n\n    const [objects, setObjects] = useState<ObjectEntity[]>([]);\n\n    const [objectName, setObjectName] = useState();\n\n    const [user, setUser] = useState<User>();\n    let history = useHistory();\n    let location = useLocation();\n\n    async function handleChangeObject(value) {\n        setObjectName(value);\n        let resp: StorageEntity[] = [];\n        if (value == \"all\") {\n            resp = await GetStorageList(user?.token!);\n        }\n        else {\n            resp = await GetStorageListFilter(user?.token!, value);\n        }\n        setResponse(resp)\n    }\n\n\n\n    const createNewStorageItem = async (product_title: string, amount: number, min_limit: number, object_name: string) => {\n        let product_id;\n        products.forEach(p => {\n            if (p.title == product_title) {\n                product_id = p.id;\n            }\n        })\n\n        let object_id; \n\n        objects.forEach(o => {\n            if (o.name == object_name) {\n                object_id = o.id;\n            }\n        })\n        setVisible(false);\n        infoMessage(\"Отправлен запрос на создании позиции в складе\", \"\");\n        let response;\n\n        let createStorageDTO = {\n            product_id: product_id,\n            amount: amount,\n        };\n\n        let body = {\n            \"storage\": {\n                \"product_id\": createStorageDTO.product_id,\n                \"amount\": createStorageDTO.amount,\n                \"user_id\": user?.id!,\n                \"min_limit\": min_limit,\n                \"object_id\": object_id,\n            }\n        };\n\n        console.log(\"[CreateProductDTO] \", body)\n\n        response = await CreateStorageItem(user?.token!, body);\n\n        if (response) {\n            successMessage(\"Позиция в складе успешно создана\", \"\");\n            // await this.getDirsList();\n        } else {\n            errorMessage(\"Произошла ошибка при создании позиции в складе\", response.message);\n        }\n    }\n\n    useEffect(() => {\n        setisLoading(true);\n        async function fetchMyAPI() {\n            if (localStorage.hasOwnProperty(\"user\")) {\n                let user = JSON.parse(localStorage.getItem(\"user\") || {} as any);\n                setUser(user);\n            } else {\n                history.push('/login');\n            }\n\n            let resp = await GetStorageList(user?.token!);\n            setResponse(resp)\n            let products = await GetProductsList(user?.token!);\n            setProducts(products);\n            let objResp = await GetObjectList(user?.token!);\n            setObjects(objResp);\n            setisLoading(false);\n        }\n\n        fetchMyAPI()\n    \n    }, [])\n\n\n\n    return (\n\n        <div>\n            {isLoading ? \"loading\" : (\n                <div>\n                    <Button type=\"primary\" onClick={() => setVisible(true)}> Добавить позицию на склад</Button>\n                    <StorageFormModal objects={objects} products={products}  visible={visible} inputPlaceHolder=\"30\" onConfirm={(product_id, number, min_limit, object_name) => createNewStorageItem(product_id, number, min_limit, object_name)} onCancel={() => setVisible(false)} title=\"Создание позиции в складе\" okText={\"Создать\"} />\n                    \n                     <Select style={{ width: 120, float: 'right' }} onChange={handleChangeObject}>\n                        {objects.map(p => (\n                            <Option value={p.name} > {p.name} </Option>\n                        ))}\n                        <Option value={\"all\"} > Все </Option>\n                    </Select>\n                    \n\n                    <div>\n                        <Table dataSource={response} columns={columns} />;\n                    </div>\n                </div>\n            )}\n\n        </div>\n    );\n}\n\n","/Users/aslan/solution/src/components/modsls/StorageModal.tsx",["292","293","294","295"],"import React, { useState } from 'react';\nimport { Button, Modal, Form, Input, Radio } from 'antd';\nimport { Checkbox } from 'antd';\nimport { ProductEntity } from '../../entities/Product';\nimport { Select } from 'antd';\nimport { ObjectEntity } from '../../entities/Object';\n\nconst { Option } = Select;\n\n\ninterface Values {\n    title: string;\n    description: string;\n    modifier: string;\n}\n\ninterface StorageFormModalProps {\n    visible: boolean;\n    title: string;\n    // isAqua: boolean;\n    // isEat: boolean;\n    // unit: string;\n    inputPlaceHolder: string;\n    okText: string;\n    products: ProductEntity[];\n    objects: ObjectEntity[];\n    //   onConfirm: (values: Values) => void;\n    onConfirm: (product_title: string, amount: number, min_limit: number, object_name: string) => void;\n    onCancel: () => void;\n}\n\nexport const StorageFormModal: React.FC<StorageFormModalProps> = ({\n    visible,\n    onConfirm,\n    onCancel,\n    title,\n    inputPlaceHolder,\n    okText,\n    products,\n    objects\n}) => {\n    const [form] = Form.useForm();\n    const [productTitle, setProductTitle] = useState(\"\");\n    const [objectName, setObjectName] = useState(\"\");\n\n    function handleChange(value) {\n        setProductTitle(value);\n    }\n\n    function handleChangeObject(value) {\n        setObjectName(value);\n    }\n\n\n    return (\n        <Modal\n            visible={visible}\n            title={title}\n            okText={okText}\n            cancelText=\"Отменить\"\n            onCancel={onCancel}\n            onOk={() => {\n\n                form\n                    .validateFields()\n                    .then((values) => {\n                        form.resetFields();\n                        console.log(values);\n                        onConfirm(productTitle, values.amount, values.min_limit,  objectName);\n                    })\n                    .catch(info => {\n                    });\n            }}\n        >\n            <Form\n                form={form}\n                layout=\"vertical\"\n                name=\"form_in_modal\"\n                initialValues={{ modifier: 'public' }}\n            >\n                <Form.Item\n                    name=\"product\"\n                    label=\"Продукт\"\n                >\n                    <Select style={{ width: 120 }} onChange={handleChange}>\n                        {products.map(p => (\n                            <Option value={p.title} > {p.title} </Option>\n                        ))}\n                    </Select>\n                </Form.Item>\n\n                <Form.Item\n                    name=\"amount\"\n                    label=\"Количество\"\n                    rules={[\n                        { required: true, type: 'string' }]}\n                >\n                    <Input placeholder={inputPlaceHolder} />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"min_limit\"\n                    label=\"Минимальный лимит\"\n                    rules={[\n                        { required: true, type: 'string' }]}\n                >\n                    <Input placeholder={inputPlaceHolder} />\n                </Form.Item>\n\n\n\n                <Form.Item\n                name=\"object\"\n                label=\"Точка\"\n                >\n\n                    \n                 <Select style={{ width: 120 }} onChange={handleChangeObject}>\n                        {objects.map(p => (\n                            <Option value={p.name} > {p.name} </Option>\n                        ))}\n                    </Select>\n                </Form.Item>\n\n            </Form>\n\n\n        </Modal>\n    );\n};",["296","297"],"/Users/aslan/solution/src/components/consumption/Consumption.tsx",["298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320"],"import React, { FunctionComponent, useState, useEffect } from 'react'\nimport { Table, Tag, Space, Select } from 'antd';\nimport { Button } from 'antd';\nimport { infoMessage, successMessage, errorMessage } from '../../utils/Notifications';\nimport { CreateProduct, GetProductsList, CreateIncomeArray, GetStorageList, CreateConsumptionArray, GetObjectList, GetStorageListFilter } from '../../actions/get';\nimport { IncomeModal } from '../modsls/IncomeModal';\nimport { AddIncomeBody, CreateIncomeBody } from '../../entities/Income';\nimport { Input, InputNumber, Popconfirm, Form, Typography } from 'antd';\nimport { StorageEntity } from '../../entities/Storage';\nimport { ProductEntity } from '../../entities/Product';\nimport { User } from '../../entities/User';\nimport { useLocation, useHistory } from 'react-router';\nimport { ColumnProps } from \"antd/lib/table\";\nimport { DatePicker } from 'antd';\nimport locale from 'antd/es/date-picker/locale/ru_RU';\nimport moment from 'moment';\nimport { ObjectEntity } from '../../entities/Object';\n\nconst { Option } = Select;\n\nconst dateFormat = 'YYYY/MM/DD';\n\ninterface ConsumptionProps {\n    isModalVisible: boolean;\n}\n\n\nexport const Consumption: FunctionComponent<ConsumptionProps> = (props: ConsumptionProps) => {\n    const [visible, setVisible] = useState(false);\n    const [isLoading, setisLoading] = useState(true);\n    const [storage, setStorage] = useState<StorageEntity[]>([])\n\n    const [income, setIncome] = useState<AddIncomeBody[]>([])\n\n    const [objects, setObjects] = useState<ObjectEntity[]>([]);\n    const [objectName, setObjectName] = useState();\n\n    const [form] = Form.useForm();\n    \n\n\n    const [user, setUser] = useState<User>();\n    let history = useHistory();\n    let location = useLocation();\n\n\n    useEffect(() => {\n        setisLoading(true);\n        async function fetchMyAPI() {\n            if (localStorage.hasOwnProperty(\"user\")) {\n                let user = JSON.parse(localStorage.getItem(\"user\") || {} as any);\n                setUser(user);\n            } else {\n                history.push('/login');\n            }\n\n\n            let resp = await GetStorageList(user?.token!);\n            setStorage(resp)\n\n            let objects = await GetObjectList(user?.token!);\n\n            setObjects(objects);\n\n            \n            setisLoading(false);\n        }\n\n        fetchMyAPI()\n\n    }, [])\n\n\n    function handleChange(product_title: string, amount: number) {\n        let income: AddIncomeBody = {\n            product_id: 0,\n            amount: amount,\n            product_title: product_title\n        };\n        setIncome(result => [...result, income]);\n    }\n\n\n    // function saveIncome() {\n    //     storage.map(p => {\n\n    //         income.map(i => {\n    //             if (p. === i.product_title) {\n    //                 i.product_id = p.id;\n    //             }\n    //         })\n    //     })\n\n    // }\n\n\n    const onInputChange = (key, index) => (\n        e: React.ChangeEvent<HTMLInputElement>\n      ) => {\n        const newData = [...storage];\n        console.log(key, index);\n        newData[index][key] = Number(e.target.value);\n        newData[index][\"date\"] = new Date().toISOString();\n        setStorage(newData);\n      };\n    \n      const onConfirm = () => {\n        const toSave: CreateIncomeBody[] = [];\n\n        storage.forEach(st => {\n            if (st.income != undefined && st.income > 0) {\n                let obj: CreateIncomeBody = {\n                    product_id: st.product.id,\n                    user_id: user?.id!,\n                    storage_id: st.id, \n                    amount: st.income,\n                    date: st.date,\n                };\n                \n                toSave.push(obj);\n            }\n        })\n\n        let body = {\n            \"incomes\": toSave\n        }\n        console.log(\"SAVING\", body);\n\n         CreateConsumptionArray(user?.token!, body);\n\n        \n      };\n\n      async function handleChangeObject(value) {\n        setObjectName(value);\n        let resp: StorageEntity[] = [];\n        if (value == \"all\") {\n            resp = await GetStorageList(user?.token!);\n        }\n        else {\n            resp = await GetStorageListFilter(user?.token!, value);\n        }\n        setStorage(resp)\n    }\n\n\n\n      function onChange(index, date, dateString) {\n        console.log(date, dateString);\n        const newData = [...storage]\n        newData[index][\"date\"] = date._i;\n        setStorage(newData);\n    }\n    \n      const columns: ColumnProps<StorageEntity>[] = [\n        {\n            title:\"Наименование\",\n          key: \"id\",\n          render: (storage: StorageEntity) => (\n              storage.product.title\n          )\n        },\n        {\n            title:\"Точка\",\n          render: (storage: StorageEntity) => (\n              storage.object?.name || \"отсутствует на складе\"\n          )\n        },\n        {\n          title:\"Количество на складе\",\n          dataIndex: \"current_amount\",\n          width: \"15%\",\n          key: \"storage.amount\",\n        },\n        {\n          title: \"расход\",\n          key: \"income\",\n          width: \"15%\",\n          render: (text, record, index) => (\n            <Input value={record.income} onChange={onInputChange(\"income\", index)} />\n          )\n        },\n        {\n            title: \"Дата\",\n            key: \"date\",\n            width: \"30%\",\n            render: (text, record, index) => (\n                <DatePicker\n                        defaultValue={moment()} format={dateFormat}\n                        onChange={(a) => onChange(index, a, dateFormat)} picker=\"week\" locale={locale} size={'middle'} \n                        disabled={true}/>\n            )\n          },\n        {\n          dataIndex: \"total\",\n          title: \"Итого\",\n          width: \"20%\",\n          key:\"amount\",\n          render: (text, record, index) => <h4>{Number.isInteger(record.current_amount + record.income) ? record.current_amount - record.income : record.current_amount}</h4>\n        }\n      ];\n    \n      return (\n        <div style={{ padding: 20 }}>\n            <h1>\n                Создание расхода\n\n                <Form\n                form={form}\n                layout=\"inline\"\n                name=\"form_in_modal\"\n                initialValues={{ modifier: 'public' }}\n            >\n                <Form.Item\n                label={\"Выберите точку\"}\n                >\n                    <Select style={{ width: 120 }} onChange={handleChangeObject}>\n                        {objects.map(p => (\n                            <Option value={p.name} > {p.name} </Option>\n                        ))}\n                        <Option value={\"all\"} > Все </Option>\n                    </Select>\n                </Form.Item>\n            </Form>\n            </h1>\n          <Table\n            rowKey=\"id\"\n            columns={columns}\n            dataSource={storage}\n            pagination={false}\n          />\n          <div className=\"action-btn\">\n            <Button type=\"primary\" onClick={onConfirm}>\n              Сохранить изменения\n            </Button>\n          </div>\n        </div>\n      );\n}","/Users/aslan/solution/src/components/login/Login.tsx",["321","322"],"import React, { Component } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { UserObject, Credentials } from '../../entities/User';\nimport { login } from '../../actions/get';\n\nexport  class Login extends Component<RouteComponentProps, Credentials> {\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      error: \"\"\n    }\n  }\n\n\n  async handleFormSubmit(e: any) {\n    e.preventDefault();\n    const payload = {\n      \"user\": {\n        \"username\": this.state.email,\n        \"password\": this.state.password\n      }\n    }\n    const user = await login(payload);\n\n    if (user == null) {\n      // this.setState({ error: \"логин или пароль не совпадают. Попробуйте еще раз\" })\n    //   openNotification(\"bottomRight\", 'Логин или пароль не совпадают. Попробуйте еще раз.', true)\n    } else {\n      const userStorage: UserObject = user;\n      localStorage.setItem(\"user\", JSON.stringify(user))\n\n      this.props.history.push(\"/\");\n    }\n  }\n\n  handleEmailChange(event: any) {\n    this.setState({ email: event.target.value });\n  }\n\n  handlePasswordChange(event: any) {\n    this.setState({ password: event.target.value });\n  }\n\n  render() {\n    return (\n\n      <form>\n        <h3>Авторизация</h3>\n\n        <div className=\"form-group\">\n          <label>Email</label>\n          <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" onChange={(event) => this.handleEmailChange(event)} />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Пароль</label>\n          <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" value={this.state.password} onChange={(event) => this.handlePasswordChange(event)} />\n        </div>\n\n        <div className=\"form-group\">\n          <div className=\"custom-control custom-checkbox\">\n            <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\n            <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Запомнить меня</label>\n          </div>\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-primary btn-block\" onClick={(event) => this.handleFormSubmit(event)}>Вход</button>\n        <p className=\"forgot-password text-right\">\n          Забыли <a href=\"#\">пароль?</a>\n        </p>\n      </form>\n    )\n  }\n}\n\n\n\n","/Users/aslan/solution/src/components/objects/Object.tsx",["323","324","325","326","327","328"],"import React, { FunctionComponent, useState, useEffect } from 'react'\nimport { Table, Tag, Space } from 'antd';\nimport { Button } from 'antd';\nimport { infoMessage, successMessage, errorMessage } from '../../utils/Notifications';\nimport { GetObjectList, CreateObject } from '../../actions/get';\nimport { CreateObjectDTO, ObjectEntity } from '../../entities/Object';\nimport { User } from '../../entities/User';\nimport { useLocation, useHistory } from 'react-router';\nimport { ObjectModal } from '../modsls/ObjectModal';\n\nconst columns = [\n    {\n        title: 'Наименование',\n        dataIndex: 'name',\n        key: 'name',\n    },\n    {\n        title: 'Создано',\n        // dataIndex: \"created\",\n        key: 'created',\n        render: (res: ObjectEntity) => (new Date(res.created).toISOString().split('T')[0]\n        )\n    } \n];\n\n\n\ninterface ObjectProps {\n    isModalVisible: boolean;\n}\n\n\nexport const ObjectComponent: FunctionComponent<ObjectProps> = (data: ObjectProps) => {\n    const [visible, setVisible] = useState(false);\n    const [isLoading, setisLoading] = useState(true);\n    const [response, setResponse] = useState<any>(null)\n\n\n    const [user, setUser] = useState<User>();\n    let history = useHistory();\n    let location = useLocation();\n\n\n\n\n    const createNewObject = async (name: string) => {\n\n        let product_id;\n\n        setVisible(false);\n        infoMessage(\"Отправлен запрос на создании позиции\", \"\");\n        let response;\n\n\n\n        let body = {\n            \"object\": {\n                \"name\": name,\n                \"user_id\": user?.id,\n            }\n        };\n\n        console.log(\"[CreateObjectDTO] \", body)\n\n        response = await CreateObject(user?.token!, body);\n\n        if (response) {\n            successMessage(\"Позиция успешно создана\", \"\");\n            // await this.getDirsList();\n        } else {\n            errorMessage(\"Произошла ошибка при создании позиции\", response.message);\n        }\n    }\n\n    useEffect(() => {\n        setisLoading(true);\n        async function fetchMyAPI() {\n            if (localStorage.hasOwnProperty(\"user\")) {\n                let user = JSON.parse(localStorage.getItem(\"user\") || {} as any);\n                setUser(user);\n            } else {\n                history.push('/login');\n            }\n\n            let resp = await GetObjectList(user?.token!);\n            setResponse(resp)\n            setisLoading(false);\n        }\n\n        fetchMyAPI()\n    \n    }, [])\n\n    return (\n\n        <div>\n            {isLoading ? \"loading\" : (\n                <div>\n\n                    <Button type=\"primary\" onClick={() => setVisible(true)}> Добавить точку</Button>\n                    <ObjectModal visible={visible} inputPlaceHolder=\"Кола\" onConfirm={(name) => createNewObject(name)} onCancel={() => setVisible(false)} title=\"Создание точки\" okText={\"Создать\"} />\n\n                    <div>\n                        <Table dataSource={response} columns={columns} />;\n                    </div>\n                </div>\n            )}\n\n        </div>\n    );\n}\n\n","/Users/aslan/solution/src/components/modsls/ObjectModal.tsx",["329","330","331","332","333","334","335"],"import React, { useState } from 'react';\nimport { Button, Modal, Form, Input, Radio } from 'antd';\nimport { Checkbox } from 'antd';\n\nimport { Select } from 'antd';\n\nconst { Option } = Select;\n\n\ninterface Values {\n    title: string;\n    description: string;\n    modifier: string;\n}\n\ninterface ProductFormModalProps {\n    visible: boolean;\n    title: string;\n    // isAqua: boolean;\n    // isEat: boolean;\n    // unit: string;\n    inputPlaceHolder: string;\n    okText: string;\n    //   onConfirm: (values: Values) => void;\n    onConfirm: (name: string) => void;\n    onCancel: () => void;\n}\n\nexport const ObjectModal: React.FC<ProductFormModalProps> = ({\n    visible,\n    onConfirm,\n    onCancel,\n    title,\n    inputPlaceHolder,\n    okText\n}) => {\n    const [form] = Form.useForm();\n\n    function handleChange(value) {\n        \n    }\n\n\n    return (\n        <Modal\n            visible={visible}\n            title={title}\n            okText={okText}\n            cancelText=\"Отменить\"\n            onCancel={onCancel}\n            onOk={() => {\n                \n                form\n                    .validateFields()\n                    .then((values) => {\n                        form.resetFields();\n                        console.log(values);\n                        onConfirm(values.title);\n                    })\n                    .catch(info => {\n                    });\n            }}\n        >\n            <Form\n                form={form}\n                layout=\"vertical\"\n                name=\"form_in_modal\"\n                initialValues={{ modifier: 'public' }}\n            >\n                <Form.Item\n                    name=\"title\"\n                    label=\"Название\"\n                >\n                    <Input placeholder={inputPlaceHolder} />\n                </Form.Item>\n              \n            </Form>\n\n\n        </Modal>\n    );\n};","/Users/aslan/solution/src/components/accounting/Accounting.tsx",["336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358"],"import React, { FunctionComponent, useState, useEffect } from 'react'\nimport { Table, Tag, Space, Select, Form } from 'antd';\nimport { Button } from 'antd';\nimport CheckOutlined, { DeleteOutlined, CheckCircleOutlined, DownCircleTwoTone, CloseCircleTwoTone } from '@ant-design/icons';\nimport { GetStorageList, CreateStorageItem, GetProductsList, GetObjectList, GetAccountingList } from '../../actions/get';\nimport { StorageEntity } from '../../entities/Storage';\nimport { infoMessage, successMessage, errorMessage } from '../../utils/Notifications';\nimport { StorageFormModal } from '../modsls/StorageModal';\nimport { User } from '../../entities/User';\nimport { useLocation, useHistory } from 'react-router';\nimport { ObjectEntity } from '../../entities/Object';\nimport { AccountingEntity } from '../../entities/Accounting';\nimport { Typography } from 'antd';\nconst { Option } = Select;\nconst { Text } = Typography;\n\n\n\n\nfunction formatMoney(number) {\n    return number.toLocaleString('ru-RU', { style: 'currency', currency: 'RUB' });\n}\n\n\nconst columns = [\n    {\n        title: 'Наименование',\n        dataIndex: \"title\",\n        key: \"title\",\n    },\n    {\n        title: 'Цена (шт.)',\n        dataIndex: \"price\",\n        key: \"price\",\n    },\n    {\n        title: 'Количество',\n        dataIndex: \"initial_amount\",\n        key: \"initial_amount\",\n    },\n    {\n        title: 'Приход',\n        dataIndex: \"income\",\n        key: \"income\",\n    },\n    {\n        title: 'Расход',\n        dataIndex: \"outcome\",\n        key: \"outcome\",\n    },\n    {\n        title: 'Остаток',\n        dataIndex: \"current_amount\",\n        key: \"current_amount\",\n    },\n    {\n        title: 'Сумма (тг.)',\n        key: \"sum\",\n        render: (rec: AccountingEntity) => (\n            Intl.NumberFormat(\"ru\").format(rec.current_amount * rec.price)\n        )\n    },\n];\n\n\n\ninterface AccountingProps {\n    isModalVisible: boolean;\n}\n\n\nexport const Accounting: FunctionComponent<AccountingProps> = (data: AccountingProps) => {\n    const [isLoading, setisLoading] = useState(true);\n    const [visible, setVisible] = useState(false);\n\n    const [accounting, setAccounting] = useState<AccountingEntity[]>([]);\n\n    const [objects, setObjects] = useState<ObjectEntity[]>([]);\n\n    const [objectName, setObjectName] = useState('');\n    const [form] = Form.useForm();\n\n\n    const [user, setUser] = useState<User>();\n    let history = useHistory();\n\n    async function handleChangeObject(value) {\n        setObjectName(value);\n\n        let resp = await GetAccountingList(user?.token!, value);\n        setAccounting(resp);\n\n    }\n\n\n\n    useEffect(() => {\n        setisLoading(true);\n        async function fetchMyAPI() {\n            if (localStorage.hasOwnProperty(\"user\")) {\n                let user = JSON.parse(localStorage.getItem(\"user\") || {} as any);\n                setUser(user);\n            } else {\n                history.push('/login');\n            }\n\n\n\n            let resp = await GetAccountingList(user?.token!, '');\n            setAccounting(resp);\n\n            let objResp = await GetObjectList(user?.token!);\n            setObjects(objResp);\n\n            setisLoading(false);\n        }\n\n        fetchMyAPI()\n\n    }, [])\n\n\n\n    return (\n\n        <div>\n            {isLoading ? \"loading\" : (\n                <div>\n                    {/* <Button type=\"primary\" onClick={() => setVisible(true)}> Добавить позицию</Button>\n                    <StorageFormModal objects={objects} products={products}  visible={visible} inputPlaceHolder=\"30\" onConfirm={(product_id, number, min_limit, object_name) => createNewStorageItem(product_id, number, min_limit, object_name)} onCancel={() => setVisible(false)} title=\"Создание позиции в складе\" okText={\"Создать\"} /> */}\n\n\n                    <Form\n                        form={form}\n                        layout=\"horizontal\"\n                        name=\"form_in_modal\"\n                        initialValues={{ modifier: 'public' }}\n                    >\n                        <Form.Item\n                            name=\"title\"\n                            label=\"Точка\"\n                        >\n                            <Select style={{ width: 120 }} onChange={handleChangeObject}>\n                                {objects.map(p => (\n                                    <Option value={p.name} > {p.name} </Option>\n                                ))}\n                            </Select>\n                        </Form.Item>\n\n                    </Form>\n\n\n                    <div>\n                        <Table\n                            dataSource={accounting}\n                            columns={columns}\n                            bordered\n                            summary={rec => {\n\n                                let amountBefore  = 0 ;\n                                let incomeSum = 0 ;\n                                let outcomeSum = 0;\n                                let amountAfter = 0 ;\n                                let sum = 0 ;\n                                \n                                rec.forEach(r => {\n                                    amountBefore += r.initial_amount;\n                                    incomeSum += r.income;\n                                    outcomeSum += r.outcome;\n                                    amountAfter += r.current_amount;\n                                    sum += (r.current_amount * r.price);\n                                })\n\n\n                                \n                                return (\n                                    <Table.Summary.Row style={{background: 'lightgreen'}}>\n                                        <Table.Summary.Cell index={0}>Итого</Table.Summary.Cell>\n                                        <Table.Summary.Cell index={1}></Table.Summary.Cell>\n                                        <Table.Summary.Cell index={2}>\n                                        {amountBefore}\n                                        </Table.Summary.Cell>\n\n                                        <Table.Summary.Cell index={3}>\n                                        {incomeSum}\n                                        </Table.Summary.Cell>\n\n                                        <Table.Summary.Cell index={4}>\n                                        {outcomeSum}\n                                        </Table.Summary.Cell>\n\n                                        <Table.Summary.Cell index={5}>\n                                        {amountAfter}\n                                        </Table.Summary.Cell>\n\n                                        <Table.Summary.Cell index={6} >\n                                        {Intl.NumberFormat(\"ru\").format(sum)}\n                                        </Table.Summary.Cell>\n\n                                    </Table.Summary.Row>\n                                )\n\n                            }}\n                        />\n                    </div>\n                </div>\n            )}\n\n        </div>\n    );\n}\n\n","/Users/aslan/solution/src/components/cash/Cash.tsx",["359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384"],"import React, { FunctionComponent, useState, useEffect } from 'react'\nimport { Table, Tag, Space, Select } from 'antd';\nimport { Button } from 'antd';\nimport { infoMessage, successMessage, errorMessage } from '../../utils/Notifications';\nimport { CreateProduct, GetProductsList, CreateIncomeArray, GetStorageList, GetStorageListFilter, GetObjectList } from '../../actions/get';\nimport { IncomeModal } from '../modsls/IncomeModal';\nimport { AddIncomeBody, CreateIncomeBody } from '../../entities/Income';\nimport { Input, InputNumber, Popconfirm, Form, Typography } from 'antd';\nimport { StorageEntity } from '../../entities/Storage';\nimport { ProductEntity } from '../../entities/Product';\nimport { User } from '../../entities/User';\nimport { useLocation, useHistory } from 'react-router';\nimport { ColumnProps } from \"antd/lib/table\";\nimport { DatePicker } from 'antd';\nimport locale from 'antd/es/date-picker/locale/ru_RU';\nimport moment from 'moment';\nimport { ObjectEntity } from '../../entities/Object';\nimport Checkbox from 'antd/lib/checkbox/Checkbox';\nimport { TimePicker } from 'antd';\n\nconst { Option } = Select;\n\nconst dateFormat = 'YYYY/MM/DD';\n\nconst timeFormat = 'HH:mm';\n\n\ninterface CashProps {\n    isModalVisible: boolean;\n}\n\n\nexport const Cash: FunctionComponent<CashProps> = (props: CashProps) => {\n    const [visible, setVisible] = useState(false);\n    const [isLoading, setisLoading] = useState(true);\n    const [storage, setStorage] = useState<StorageEntity[]>([])\n\n    const [income, setIncome] = useState<AddIncomeBody[]>([])\n\n    const [objects, setObjects] = useState<ObjectEntity[]>([]);\n    const [objectName, setObjectName] = useState();\n\n    const [form] = Form.useForm();\n\n\n\n    const [user, setUser] = useState<User>();\n    let history = useHistory();\n    let location = useLocation();\n\n\n    useEffect(() => {\n        setisLoading(true);\n        async function fetchMyAPI() {\n            if (localStorage.hasOwnProperty(\"user\")) {\n                let user = JSON.parse(localStorage.getItem(\"user\") || {} as any);\n                setUser(user);\n            } else {\n                history.push('/login');\n            }\n\n\n            let resp = await GetStorageList(user?.token!);\n            setStorage(resp)\n\n            let objects = await GetObjectList(user?.token!);\n\n            setObjects(objects);\n            setisLoading(false);\n        }\n\n        fetchMyAPI()\n\n    }, [])\n\n\n    function handleChange(product_title: string, amount: number) {\n        let income: AddIncomeBody = {\n            product_id: 0,\n            amount: amount,\n            product_title: product_title\n        };\n        setIncome(result => [...result, income]);\n    }\n\n    async function handleChangeObject(value) {\n        setObjectName(value);\n        let resp: StorageEntity[] = [];\n        if (value == \"all\") {\n            resp = await GetStorageList(user?.token!);\n        }\n        else {\n            resp = await GetStorageListFilter(user?.token!, value);\n        }\n        setStorage(resp)\n    }\n\n\n\n    // function saveIncome() {\n    //     storage.map(p => {\n\n    //         income.map(i => {\n    //             if (p. === i.product_title) {\n    //                 i.product_id = p.id;\n    //             }\n    //         })\n    //     })\n\n    // }\n\n\n    const onInputChange = (key, index) => (\n        e: React.ChangeEvent<HTMLInputElement>\n    ) => {\n        const newData = [...storage];\n        console.log(key, index);\n        newData[index][key] = Number(e.target.value);\n        newData[index][\"date\"] = new Date().toISOString();\n        setStorage(newData);\n    };\n\n    const onConfirm = () => {\n        const toSave: CreateIncomeBody[] = [];\n\n        storage.forEach(st => {\n            if (st.income != undefined && st.income > 0) {\n                let obj: CreateIncomeBody = {\n                    product_id: st.product.id,\n                    user_id: user?.id!,\n                    storage_id: st.id,\n                    amount: st.income,\n                    date: st.date,\n                };\n\n                toSave.push(obj);\n            }\n        })\n\n        let body = {\n            \"incomes\": toSave\n        }\n        console.log(\"SAVING\", body);\n\n        CreateIncomeArray(user?.token!, body);\n\n\n    };\n\n    function onChange(index, date, dateString) {\n        console.log(date, dateString);\n        const newData = [...storage]\n        newData[index][\"date\"] = date._i;\n        setStorage(newData);\n    }\n\n    const columns: ColumnProps<StorageEntity>[] = [\n        {\n            title: '#',\n            key: 'index',\n            render: (text, record, index) => index + 1,\n        },\n        {\n            title: \"Муж\",\n            key: \"male\",\n            render: (text, record, index) => (\n                <Checkbox value={record.income} />\n            )\n        },\n        {\n            title: \"Жен\",\n            key: \"female\",\n            render: (text, record, index) => (\n                <Checkbox value={record.income} />\n            )\n        },\n        {\n            title: \"Дет\",\n            key: \"child\",\n            render: (text, record, index) => (\n                <Checkbox value={record.income} />\n            )\n        },\n        {\n            title: \"Пенс\",\n            key: \"retired\",\n            render: (text, record, index) => (\n                <Checkbox value={record.income} />\n            )\n        },\n        {\n            title: \"Время\",\n            key: \"time\",\n            width: \"10%\",\n            render: (text, record, index) => (\n                <TimePicker defaultValue={moment('12:08', timeFormat)} format={timeFormat} />\n            )\n        },\n        {\n            title: \"# ключа\",\n            key: \"key_number\",\n            width: '5%',\n            render: (text, record, index) => (\n                <Input value={record.income} onChange={onInputChange(\"income\", index)} />\n            )\n        },\n        {\n            title: \"Сейф\",\n            key: \"storage_number\",\n            render: (text, record, index) => (\n                <Checkbox value={record.income} />\n            )\n        },\n        {\n            title: \"Халат\",\n            key: \"robe\",\n            render: (text, record, index) => (\n                <Checkbox value={record.income} />\n            )\n        },\n        {\n            title: \"Полотен\",\n            key: \"towel\",\n            render: (text, record, index) => (\n                <Checkbox value={record.income} />\n            )\n        },\n        {\n            title: \"Про-ня\",\n            key: \"sheet\",\n            render: (text, record, index) => (\n                <Checkbox value={record.income} />\n            )\n        },\n        {\n            title: \"Сланцы\",\n            key: \"shale\",\n            render: (text, record, index) => (\n                <Checkbox value={record.income} />\n            )\n        },\n        {\n            title: \"Нал\",\n            key: \"by_cash\",\n            render: (text, record, index) => (\n                <Input value={record.income} onChange={onInputChange(\"income\", index)} />\n            )\n        },\n        {\n            title: \"Каспи\",\n            key: \"by_kaspi\",\n            render: (text, record, index) => (\n                <Input value={record.income} onChange={onInputChange(\"income\", index)} />\n            )\n        },\n        {\n            title: \"Терм\",\n            key: \"by_terminal\",\n            render: (text, record, index) => (\n                <Input value={record.income} onChange={onInputChange(\"income\", index)} />\n            )\n        },\n    ];\n\n    return (\n        <div style={{ padding: 20 }}>\n            <h1>\n                Внесение данных по кассе\n\n            <Form\n                form={form}\n                layout=\"inline\"\n                name=\"form_in_modal\"\n                initialValues={{ modifier: 'public' }}\n            >\n                <Form.Item\n                label={\"Выберите точку\"}\n                >\n                    <Select style={{ width: 120 }} onChange={handleChangeObject}>\n                        {objects.map(p => (\n                            <Option value={p.name} > {p.name} </Option>\n                        ))}\n                        <Option value={\"all\"} > Все </Option>\n                    </Select>\n                </Form.Item>\n            </Form>\n            </h1>\n\n\n            <Table\n                rowKey=\"id\"\n                columns={columns}\n                dataSource={storage}\n                pagination={false}\n            />\n            <div className=\"action-btn\">\n                <Button type=\"primary\" onClick={onConfirm}>\n                    Сохранить изменения\n            </Button>\n            </div>\n        </div>\n    );\n}\n","/Users/aslan/halyk/solution/src/index.tsx",[],["385","386"],"/Users/aslan/halyk/solution/src/serviceWorker.ts",[],"/Users/aslan/halyk/solution/src/App.tsx",["387","388","389","390","391","392"],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport \"antd/dist/antd.css\";\nimport 'ant-design-pro/dist/ant-design-pro.css'; // Import whole style\nimport {\n  BrowserRouter as Router,\n  Link,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport Header from './components/header/Header';\n// import './styles/index.scss';\nimport { MainPage } from './components/mainPage/MainPage';\nimport HeaderTemp from './components/header-temp/HeaderTemp';\nimport { TreeView } from './components/tree-nav/TreeNav';\nimport { ArticlePage } from './components/articlePage.tsx/ArticlePage';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={MainPage} />\n        <Route path=\"/nav/search=:search\" component={(props) => <MainPage {...props} key={window.location.pathname}/>}/>\n\n        {/* <Route exact path=\"/nav/:search/:article\" component={ArticlePage} /> */}\n      </Switch>\n    </Router>\n\n  );\n}\n\nexport default App;\n","/Users/aslan/halyk/solution/src/components/header/Header.tsx",["393","394","395","396","397","398"],"import React, { useState, useEffect } from 'react';\nimport HeaderContent from './HeaderContent';\nimport HalykLogo from './halyk-logo.png';\nimport { MainPage } from '../mainPage/MainPage';\nexport interface HeaderProps {\n    user:  null,\n    cityId: number\n}\n\nconst Header = (props: HeaderProps) => {\n    // const router = useRouter();\n    const abortCtrl = typeof(window) !== 'undefined' ? new AbortController() : null;\n    const signal = abortCtrl?.signal;\n    const [announcement, setAnnouncement] = useState<string>('');\n    const [cityId, setCityId] = useState<number>(props.cityId ? props.cityId : 2);\n\n\n    // All stuff that invokes after the component is mounted\n    useEffect(() => {\n        // fetchAnnouncement()\n\n        if (props.cityId) setCityId(props.cityId)\n\n\n        return () => {\n            abortCtrl?.abort()\n        }\n    }, [])\n\n    return (\n        <div className=\"header\">\n\n\n            <HeaderContent\n                user={props.user}\n                cityId={cityId}\n          />\n\n        </div>\n    )\n}\n\nexport default Header;\n",["399","400"],"/Users/aslan/halyk/solution/src/components/header/HeaderContent.tsx",["401","402","403","404","405","406"],"import React, { useState, useEffect } from 'react';\nimport HeaderSearchInput from './HeaderSearchInput';\nimport {\n    BrowserRouter as Router,\n    Link,\n    Route,\n    Switch,\n  } from 'react-router-dom';\n\n  import HalykLogo from './halyk-logo.png';\nexport interface HeaderContentProps {\n    user: null,\n    cityId: number\n}\n\nconst HeaderContent = (props: HeaderContentProps) => {\n    // const router = useRouter();\n    const [visible, setVisible] = useState<boolean>(false);\n    const [searchBar, setSearchBar] = useState<boolean>(false);\n    const [search, setSearch] = useState<string>('');\n\n    const handleOnSearch = (_search: string) => {\n        const _query = _search ? _search : search;\n        if (!searchBar && !_search) setSearchBar(true)\n        // else router.push(`/search?query=${encodeURIComponent(_query)}`)\n    }\n\n    const handleSearch = (value: string) => {\n        setSearch(value);\n    }\n\n    const handleAuthModalInvoke = () => setVisible(true);\n\n    const handleSearchClose = () => {\n        setSearchBar(false)\n        setSearch('')\n    }\n\n    useEffect(() => {\n        // if (router.pathname === '/search') setSearchBar(true)\n        document.addEventListener('authmodal', handleAuthModalInvoke, false)\n\n        return () => document.removeEventListener('authmodal', handleAuthModalInvoke, false)\n    }, [])\n\n    return (\n        <>\n            \n            <div className=\"container\">\n\n            <Link href=\"/\">\n                    <a className=\"header-logo\">\n                        <img \n                            alt=\"Kino.kz\"\n                            src={HalykLogo}/>\n                    </a>\n                </Link>\n\n\n                <div className=\"header-btns hide-xs\">\n\n                <HeaderSearchInput\n                            value={search}\n                            onAction={handleOnSearch}\n                            onChange={handleSearch}\n                            onClose={handleSearchClose}\n                            />\n\n                <button className=\"header-button1\" >\n                    Филиалы\n                </button>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default HeaderContent;\n","/Users/aslan/halyk/solution/src/components/header/HeaderSearchInput.tsx",["407"],"/Users/aslan/halyk/solution/src/components/mainPage/MainPage.tsx",["408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437"],"import React, { useState, useEffect } from 'react';\n\nimport { Form, Input, Button, AutoComplete, Space } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { Search, GetAllDirs, GetArticleInfo } from '../backend-api/api';\nimport { SearchResponseDTO, SearchModel } from '../../models/search/Search';\nimport \"./main.css\";\nimport HeaderTemp from '../header-temp/HeaderTemp';\nimport { SearchTop } from '../search/Search';\nimport { Category } from '../category/Category';\nimport HalykLogo from './halyk-logo.png';\nimport { Layout, Menu, Breadcrumb, Typography } from 'antd';\nimport Title from 'antd/lib/typography/Title';\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { TreeView } from '../tree-nav/TreeNav';\nimport { TreeContent } from '../tree-content/TreeContent';\nimport { Modal } from 'antd';\nimport YandexMap  from '../departments/Department';\nimport { DepartmentModal } from '../modals/DepartmentModal';\nimport { Article } from '../article/Article';\nimport { Article as ArticleModel } from '../../models/search/Search';\nconst queryString = require('query-string')\n\nconst { Header, Content, Footer } = Layout;\nconst { Text, Link } = Typography;\n\n\nconst mockVal = (str: string[], repeat: number = 1) => {\n\n    return {\n        value: str[0] || \"\",\n    };\n};\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport const MainPage = (props: any) => {\n    let history = useHistory();\n    let location = useLocation();\n\n    const [loading, setLoading] = useState(true);\n\n    let [queryParam, setQueryParam] = useState<string>('');\n\n    let query = useQuery();\n\n    const [treeData, setTreeData] = useState<any[]>([]);\n\n\n    const [form] = Form.useForm();\n\n    const [value, setValue] = useState('');\n    const [options, setOptions] = useState<{ value: string }[]>([]);\n\n    const [suggest, setSuggest] = useState<SearchModel[]>([]);\n\n    const [articleId, setArticleId] = useState<number>();\n\n    const [article, setArticle] = useState<ArticleModel>();\n\n    const [articleFound, setArticleFound] = useState<boolean>(false);\n\n    const [isModalVisible, setIsModalVisible] = useState(false);\n\n    const [searchText, setSearchText] = useState('');\n\n    const handleOk = () => {\n        setIsModalVisible(false);\n    };\n\n    const handleCancel = () => {\n        setIsModalVisible(false);\n    };\n\n    const onSearchClick = (searchInput: string) => {\n        searchArticles(searchInput);\n        setSearchText(searchInput);\n    }\n\n    async function fetch() {\n        const response = await GetAllDirs(props.token, \"../\");\n        setTreeData(response.result)\n        console.log(\"FETCH FEtch \")\n        setLoading(false);\n    }\n\n    useEffect(() => {\n        fetch();\n        let query = location.pathname.slice(location.pathname.lastIndexOf(\"=\") + 1, location.pathname.length)\n        setQueryParam(query);\n        console.log(\"query\", query)\n        setSearchText(query)\n        // if (location.pathname='/')\n        if (location.pathname != \"/\" && query != \"empty\") {\n            console.log(\"search\")\n            searchArticles(query)\n        } else {\n            setLoading(false);\n        }\n\n    }, [])\n\n    const searchArticles = async (searchValue: string) => {\n        const resp: SearchResponseDTO = await Search(\"\", searchValue);\n        if (resp.result === null) {\n            setSuggest([]);\n        } else {\n            setSuggest(resp.result);\n            setArticleId(resp.result[0].article_id);\n            let resp2 = await GetArticleInfo(\"\", resp.result[0].article_id)\n            setArticle(resp2.result);\n            setArticleFound(true);\n            console.log(\"ARTICLE FOUND\")\n            setLoading(false);\n        }\n    }\n\n\n\n    return (\n        <>\n            {!loading ? (\n                <Layout className=\"layout\" style={{ backgroundColor: 'rgb(243,246,248)' }} >\n                    <Header style={{ background: '#fff', paddingLeft: 160, paddingRight: 160 }}>\n                        <div className=\"logo\" >\n                            <a href=\"/\">\n                                <img\n                                    alt=\"halyk-wiki\"\n                                    src={HalykLogo}\n\n                                />\n                            </a>\n                        </div>\n                        <Button type=\"primary\" shape=\"round\" size={'large'} style={{\n                            float: 'right', marginTop: '13px', backgroundColor: 'rgb(237,237,239)', color: 'black', fontFamily: 'Roboto',\n                            fontSize: '14px;',\n                            lineHeight: '18px;',\n                            border: 'none'\n                        }}\n                            onClick={() => setIsModalVisible(true)}\n                        >\n                            <Text strong>Филиалы</Text>\n                        </Button>\n                    </Header>\n                    <Content style={{ padding: '0 50px', paddingLeft: 160, paddingRight: 160 }}>\n                        <div className=\"site-layout-content\">\n\n                            {location.pathname == \"/\" ? (\n                                <>\n                                    <span className=\"title\">Добро пожаловать в \"Базу знаний\"</span>\n                                    <SearchTop onClick={(title) => onSearchClick(title)} />\n                                    <div style={{ paddingTop: \"50px\" }}>\n                                    </div>\n                                    <span className=\"title\">Поиск по категориям</span>\n\n                                    <div style={{ paddingTop: \"20px\" }}>\n                                    </div>\n                                    <Category />\n                                </>\n                            ) : (\n                                    <>\n                                        <TreeContent articleFound={articleFound} article={article} loading={loading} items={suggest} treeData={treeData} searchText={searchText} />\n                                    </>\n                                )}\n                        </div>\n                    </Content>\n                    <DepartmentModal title={\"Филиалы\"} isVisible={isModalVisible} onOk={handleOk} onCancel={handleCancel} />\n                </Layout>\n\n            ) : 'loading'}\n\n        </>\n    )\n}\n\n","/Users/aslan/halyk/solution/src/components/backend-api/api.tsx",[],"/Users/aslan/halyk/solution/src/http/http.ts",[],"/Users/aslan/halyk/solution/src/components/header-temp/HeaderTemp.tsx",["438","439","440","441"],"import React, { useState, useEffect } from 'react';\nimport HalykLogo from './halyk-logo.png';\nimport { MainPage } from '../mainPage/MainPage';\nimport \"./Header.css\";\nexport interface HeaderProps {\n    user:  null,\n    cityId: number\n}\n\nconst HeaderTemp = (props: HeaderProps) => {\n   \n    return (\n        <div className=\"header\">\n            <div className=\"header-logo\">\n                <a className=\"header-logo\">\n                        <img \n                            alt=\"Kino.kz\"\n                            src={HalykLogo}/>\n                    </a>\n            </div>\n\n            <button className=\"header-button\" >\n                    <strong>\n                    Филиалы\n                    </strong>\n             </button>\n        </div>\n    )\n}\n\nexport default HeaderTemp;\n",["442","443"],"/Users/aslan/halyk/solution/src/components/search/Search.tsx",["444","445","446","447","448","449","450","451","452","453","454","455","456","457"],"import React, { useState, useEffect } from 'react';\n\nimport { AutoComplete, Form, Select } from 'antd';\nimport { UserOutlined, LockOutlined, PropertySafetyOutlined } from '@ant-design/icons';\nimport { Search } from '../backend-api/api';\nimport { SearchResponseDTO, SearchModel } from '../../models/search/Search';\nimport HeaderTemp from '../header-temp/HeaderTemp';\nimport './search.css';\nimport { SearchDropdown } from '../search-dropdown/SearchDrodown';\nimport  SearchIcon  from './search-icon.png';\nimport { useHistory } from 'react-router-dom';\n\nconst mockVal = (str: string[], repeat: number = 1) => {\n\n    return {\n        value: str[0] || \"\",\n    };\n};\n\n\n\nconst items: any[] = [\n    {\n        id: 1,\n        text: \"first\"\n    },\n    {\n        id: 2,\n        text: \"second\"\n    },\n    {\n        id: 3,\n        text: \"third\"\n    },\n]\n\ninterface SearchProps {\n    onClick: (searchInput: string) => void;\n}\n\nexport const SearchTop = (props: SearchProps) => {\n\n    const history = useHistory()\n\n\n    const [form] = Form.useForm();\n\n    const [searchText, setSearchText] = useState<string>('');\n    const [searchValue, setSearchValue] = useState<string>('');\n    const [suggest, setSuggest] = useState<SearchModel[]>([]);\n\n    const onInputChange = async (event: any) => {\n        const response: SearchResponseDTO = await Search(\"\", event.target.value);\n        console.log(\"response\", response);\n        setSuggest(response.result);\n    }\n\n    const getSearchValue = (title: string) => {\n        console.log(\"FINALLY SEARCH VALUE\", title)\n        setSearchValue(title);\n    }\n\n    const handleKeyDown = (e) => {\n        if (e.key === 'Enter') {\n            history.push(\"/nav/search=\" + searchValue)\n        }\n    }\n\n\n\n    const filteredItems = () => {\n        // const response = await Search(\"\", searchText);\n        // console.log(\"response\", response);\n\n        // if (searchValue.length > 0) {\n        //     return items;\n        // } else {\n        //     return [];\n        // }\n\n        if (suggest !== null) {\n            if (suggest.length > 0) {\n                return suggest;\n            } else {\n                return [];\n            }\n        }\n\n        return [];\n    }\n\n    return (\n        <>\n            <div className=\"search-input\" style={{ boxShadow: filteredItems().length > 0 ? '0px 4px 20px rgba(0, 0, 0, 0.16)' : 'none' }}>\n                <i className=\"search-icon\">\n                    <img src={SearchIcon} />\n                </i>\n                <input className=\"search-input-field\" placeholder=\"Напишите вопрос или проблему\" value={searchValue} onChange={(event) => {\n                    if (event.target.value == \"\") {\n                        setSuggest([]);\n                    } else {\n                        onInputChange(event)\n                    }\n                    setSearchValue(event.target.value);\n                    \n                }}\n                onKeyDown={(event) => handleKeyDown(event)}\n                />\n                <SearchDropdown items={filteredItems()} onClick={(title) => getSearchValue(title)}/>\n                <button className=\"search-button\" onClick={() => {\n                    props.onClick(searchValue)\n                    history.push(\"/nav/search=\" + searchValue)\n                }} >\n                    <span className=\"search-button-text\">\n                        Поиск\n                    </span>\n                </button>\n            </div>\n        </>\n    )\n}\n\n","/Users/aslan/halyk/solution/src/components/category/Category.tsx",["458","459","460","461","462","463","464","465","466","467","468","469"],"import React, { useState } from 'react';\n\nimport { Form, Input, Button, AutoComplete, Avatar } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { Search } from '../backend-api/api';\nimport { SearchResponseDTO } from '../../models/search/Search';\nimport HeaderTemp from '../header-temp/HeaderTemp';\nimport { Card, Col, Row, Space, List } from 'antd';\nimport \"./category.css\";\n\nconst fakeData = [\n    {\n        id:1, \n        title: \"Экспресс кредиты\",\n        description: \"Экспресс кредиты\",\n        content: 5\n    }, \n    {\n        id: 2, \n        title: \"Кредитые карты\",\n        description: \"Кредитные карты\",\n        content: 5\n    }, \n    {\n        id: 3, \n        title: \"Halyk light\",\n        description: \"Halyk light\",\n        content: 5\n    }, \n]\n\nexport const Category = (props: any) => {\n\n    return (\n        <>\n            <div className=\"\">\n                <Row gutter={16}>\n                    <Col span={8}>\n                        <Card title={\n                            <span className=\"category-card-title\" >Кредиты</span>\n                        } bordered={false} style={{ backgroundColor: 'rgb(235,243,243)' }}\n                        bodyStyle={{paddingTop: \"0\"}}\n                        >\n                            <List\n                                 dataSource={fakeData}\n                                renderItem={item => (\n                                    <List.Item key={\"x\"}>\n                                        <List.Item.Meta\n                                            title={<span className=\"category-card-item\"> {item.title} </span>}\n                                        />\n                                <div>{item.content}</div>\n                                    </List.Item>\n                                )}\n                            >\n                            </List>\n                            <a href=\"/nav/empty\" >\n                                Все разделы\n                            </a>\n                         </Card>\n                    </Col>\n                    <Col span={8}>\n                    <Card title={\n                            <span className=\"category-card-title\" >Кредиты</span>\n                        } bordered={false} style={{ backgroundColor: 'rgb(235,243,243)' }}\n                        bodyStyle={{paddingTop: \"0\"}}\n                        >\n                            <List\n                                 dataSource={fakeData}\n                                renderItem={item => (\n                                    <List.Item key={\"x\"}>\n                                        <List.Item.Meta\n                                            title={<span className=\"category-card-item\"> {item.title} </span>}\n                                        />\n                                <div>{item.content}</div>\n                                    </List.Item>\n                                )}\n                            >\n                            </List>\n                            <a href=\"/nav\" >\n                                Все разделы\n                            </a>\n                         </Card>\n                    </Col>\n                    <Col span={8}>\n                    <Card title={\n                            <span className=\"category-card-title\" >Кредиты</span>\n                        } bordered={false} style={{ backgroundColor: 'rgb(235,243,243)' }}\n                        bodyStyle={{paddingTop: \"0\"}}\n                        >\n                            <List\n                                 dataSource={fakeData}\n                                renderItem={item => (\n                                    <List.Item key={\"x\"}>\n                                        <List.Item.Meta\n                                            title={<span className=\"category-card-item\"> {item.title} </span>}\n                                        />\n                                <div>{item.content}</div>\n                                    </List.Item>\n                                )}\n                            >\n                            </List>\n                            <a href=\"/nav\" >\n                                Все разделы\n                            </a>\n                         </Card>\n                    </Col>\n                </Row>\n            </div>\n        </>\n    )\n}\n\n","/Users/aslan/halyk/solution/src/components/tree-nav/TreeNav.tsx",["470","471","472","473","474","475","476","477","478","479","480","481","482"],"\nimport React, { Component, FunctionComponent, useState, useEffect } from 'react';\nimport { Tree, Popover, Tooltip, Layout } from 'antd';\nimport { DataNode } from 'antd/lib/tree';\nimport { GetAllDirs, GetAllDirs1 } from '../backend-api/api'\nimport './tree-nav.css'\n\n\n\n// const treeDate = [\n//     {\n//         \"title\": \"test-folder\",\n//         \"path\": \"/Users/aslan/test-folder\",\n//         \"key\": \"/Users/aslan/test-folder\",\n//         \"info\": {\n//             \"name\": \"test-folder\",\n//             \"original_name\": \"test-folder\",\n//             \"dir\": \"test-folder\",\n//             \"path\": \"test-folder/test-folder\",\n//             \"extension\": \"\",\n//             \"size\": 160,\n//             \"mod_time\": \"2021-01-16T22:03:39.856577067+06:00\",\n//             \"is_dir\": true,\n//             \"mime\": \"inode/directory\"\n//         },\n//         \"children\": [\n//             {\n//                 \"title\": \"three\",\n//                 \"path\": \"/Users/aslan/test-folder/three\",\n//                 \"key\": \"/Users/aslan/test-folder/three\",\n//                 \"info\": {\n//                     \"name\": \"three\",\n//                     \"original_name\": \"three\",\n//                     \"dir\": \"three\",\n//                     \"path\": \"three/three\",\n//                     \"extension\": \"\",\n//                     \"size\": 96,\n//                     \"mod_time\": \"2021-01-16T22:04:23.583764211+06:00\",\n//                     \"is_dir\": true,\n//                     \"mime\": \"inode/directory\"\n//                 },\n//                 \"children\": [\n//                     {\n//                         \"title\": \"three-three\",\n//                         \"path\": \"/Users/aslan/test-folder/three/three-three\",\n//                         \"key\": \"/Users/aslan/test-folder/three/three-three\",\n//                         \"info\": {\n//                             \"name\": \"three-three\",\n//                             \"original_name\": \"three-three\",\n//                             \"dir\": \"three-three\",\n//                             \"path\": \"three-three/three-three\",\n//                             \"extension\": \"\",\n//                             \"size\": 96,\n//                             \"mod_time\": \"2021-01-16T22:04:32.803636293+06:00\",\n//                             \"is_dir\": true,\n//                             \"mime\": \"inode/directory\"\n//                         },\n//                         \"children\": [\n//                             {\n//                                 \"title\": \"three-three-three\",\n//                                 \"path\": \"/Users/aslan/test-folder/three/three-three/three-three-three\",\n//                                 \"key\": \"/Users/aslan/test-folder/three/three-three/three-three-three\",\n//                                 \"info\": {\n//                                     \"name\": \"three-three-three\",\n//                                     \"original_name\": \"three-three-three\",\n//                                     \"dir\": \"three-three-three\",\n//                                     \"path\": \"three-three-three/three-three-three\",\n//                                     \"extension\": \"\",\n//                                     \"size\": 64,\n//                                     \"mod_time\": \"2021-01-16T22:04:32.803624907+06:00\",\n//                                     \"is_dir\": true,\n//                                     \"mime\": \"inode/directory\"\n//                                 },\n//                                 \"children\": []\n//                             }\n//                         ]\n//                     }\n//                 ]\n//             },\n//             {\n//                 \"title\": \"two\",\n//                 \"path\": \"/Users/aslan/test-folder/two\",\n//                 \"key\": \"/Users/aslan/test-folder/two\",\n//                 \"info\": {\n//                     \"name\": \"two\",\n//                     \"original_name\": \"two\",\n//                     \"dir\": \"two\",\n//                     \"path\": \"two/two\",\n//                     \"extension\": \"\",\n//                     \"size\": 96,\n//                     \"mod_time\": \"2021-01-16T22:04:07.9807106+06:00\",\n//                     \"is_dir\": true,\n//                     \"mime\": \"inode/directory\"\n//                 },\n//                 \"children\": [\n//                     {\n//                         \"title\": \"two-two\",\n//                         \"path\": \"/Users/aslan/test-folder/two/two-two\",\n//                         \"key\": \"/Users/aslan/test-folder/two/two-two\",\n//                         \"info\": {\n//                             \"name\": \"two-two\",\n//                             \"original_name\": \"two-two\",\n//                             \"dir\": \"two-two\",\n//                             \"path\": \"two-two/two-two\",\n//                             \"extension\": \"\",\n//                             \"size\": 96,\n//                             \"mod_time\": \"2021-01-16T22:04:12.408913596+06:00\",\n//                             \"is_dir\": true,\n//                             \"mime\": \"inode/directory\"\n//                         },\n//                         \"children\": [\n//                             {\n//                                 \"title\": \"two-two-two\",\n//                                 \"path\": \"/Users/aslan/test-folder/two/two-two/two-two-two\",\n//                                 \"key\": \"/Users/aslan/test-folder/two/two-two/two-two-two\",\n//                                 \"info\": {\n//                                     \"name\": \"two-two-two\",\n//                                     \"original_name\": \"two-two-two\",\n//                                     \"dir\": \"two-two-two\",\n//                                     \"path\": \"two-two-two/two-two-two\",\n//                                     \"extension\": \"\",\n//                                     \"size\": 64,\n//                                     \"mod_time\": \"2021-01-16T22:04:12.408901647+06:00\",\n//                                     \"is_dir\": true,\n//                                     \"mime\": \"inode/directory\"\n//                                 },\n//                                 \"children\": []\n//                             }\n//                         ]\n//                     }\n//                 ]\n//             },\n//             {\n//                 \"title\": \"one\",\n//                 \"path\": \"/Users/aslan/test-folder/one\",\n//                 \"key\": \"/Users/aslan/test-folder/one\",\n//                 \"info\": {\n//                     \"name\": \"one\",\n//                     \"original_name\": \"one\",\n//                     \"dir\": \"one\",\n//                     \"path\": \"one/one\",\n//                     \"extension\": \"\",\n//                     \"size\": 96,\n//                     \"mod_time\": \"2021-01-16T22:03:49.025996655+06:00\",\n//                     \"is_dir\": true,\n//                     \"mime\": \"inode/directory\"\n//                 },\n//                 \"children\": [\n//                     {\n//                         \"title\": \"one-one\",\n//                         \"path\": \"/Users/aslan/test-folder/one/one-one\",\n//                         \"key\": \"/Users/aslan/test-folder/one/one-one\",\n//                         \"info\": {\n//                             \"name\": \"one-one\",\n//                             \"original_name\": \"one-one\",\n//                             \"dir\": \"one-one\",\n//                             \"path\": \"one-one/one-one\",\n//                             \"extension\": \"\",\n//                             \"size\": 96,\n//                             \"mod_time\": \"2021-01-16T22:03:59.158950745+06:00\",\n//                             \"is_dir\": true,\n//                             \"mime\": \"inode/directory\"\n//                         },\n//                         \"children\": [\n//                             {\n//                                 \"title\": \"one-one-one\",\n//                                 \"path\": \"/Users/aslan/test-folder/one/one-one/one-one-one\",\n//                                 \"key\": \"/Users/aslan/test-folder/one/one-one/one-one-one\",\n//                                 \"info\": {\n//                                     \"name\": \"one-one-one\",\n//                                     \"original_name\": \"one-one-one\",\n//                                     \"dir\": \"one-one-one\",\n//                                     \"path\": \"one-one-one/one-one-one\",\n//                                     \"extension\": \"\",\n//                                     \"size\": 64,\n//                                     \"mod_time\": \"2021-01-16T22:03:59.158940599+06:00\",\n//                                     \"is_dir\": true,\n//                                     \"mime\": \"inode/directory\"\n//                                 },\n//                                 \"children\": []\n//                             }\n//                         ]\n//                     }\n//                 ]\n//             }\n//         ]\n//     }\n// ]\n\nconst treeDate = [\n    {\n        \"id\": 1,\n        \"title\": \"какая то сущность\",\n        \"key\": \"dddd\",\n        \"short_description\": \"Краткое описание\",\n        \"description\": \"Обычное описание\",\n        \"start_date\": \"2021-01-18T14:30:02.986056Z\",\n        \"end_date\": null,\n        \"children\": [\n            {\n                \"id\": 1,\n                \"title\": \"string\",\n                \"key\": \"1\",\n                \"short_description\": \"string\",\n                \"description\": \"Кредиты\",\n                \"start_date\": \"2021-01-18T15:05:05.880294Z\",\n                \"end_date\": null,\n                \"entity_history_id\": 1,\n                \"children\": [\n                    {\n                        \"id\": 1,\n                        \"title\": \"Кредиты подкатегория\",\n                        \"short_description\": \"string\",\n                        \"key\": \"1\",\n                        \"description\": \"Кредиты подкатегория\",\n                        \"start_date\": \"2021-01-18T15:10:02.222202Z\",\n                        \"end_date\": null,\n                        \"category_history_id\": 1,\n                        \"history_id\": 1\n                    }\n                ],\n                \"history_id\": 1\n            },\n            {\n                \"id\": 2,\n                \"title\": \"string\",\n                \"key\": \"2\",\n                \"short_description\": \"string\",\n                \"description\": \"Депозиты\",\n                \"start_date\": \"2021-01-18T15:08:29.465674Z\",\n                \"end_date\": null,\n                \"entity_history_id\": 1,\n                \"children\": [],\n                \"history_id\": 2\n            },\n            {\n                \"id\": 3,\n                \"title\": \"Депозиты\",\n                \"key\": \"3\",\n                \"short_description\": \"string\",\n                \"description\": \"Депозиты\",\n                \"start_date\": \"2021-01-18T15:08:44.049336Z\",\n                \"end_date\": null,\n                \"entity_history_id\": 1,\n                \"children\": [],\n                \"history_id\": 3\n            }\n        ],\n        \"history_id\": 1\n    }\n]\n\n\ninterface TreeViewProps {\n    onSelect: (selectedKeys: any, info: any) => void;\n    treeData: any[];\n    token: string;\n    items: any[];\n    loading: boolean;\n}\n\n\n//рекурсинвное решение отрицательно сказывается на памяти - в будущем требуется переписать. s\nconst renderTreeNodes = (data: any) =>\n    data.length >= 0 ? data.map((item: any) =>\n        item.children ? (\n            <Tree.TreeNode\n                title={item.title} key={item.path} style={{fontFamily: 'Roboto', fontSize: \"14px\", lineHeight: '20px !important', letterSpacing: \"-0.4px/\"}}\n            >\n                {renderTreeNodes(item.children)}\n            </Tree.TreeNode>\n        ) : 'xui'\n    ) : 'pizda';\n\nexport const TreeView: FunctionComponent<TreeViewProps> =  (props: TreeViewProps) => {\n    const [treeData, setTreeData] = useState(props.treeData);\n    const [int, setInt] = useState(0);\n\n    const [loading, setLoading] = useState(true);\n    function onLoadData(key: any, children: any) {\n        return new Promise(async resolve => {\n            if (children) {\n                resolve();\n                return;\n            }\n            let response: any;\n            console.log(\"ZEBAL\")\n            response = await GetAllDirs(props.token, \"\" + key.key);\n            \n            let sss = treeData;\n            var i = 0;\n            for (i = 0; i < treeData.length; i++) {\n                if (treeData[i].path == key.key) {\n                    sss[i].children = [];\n                    if (response.result != null) {\n                        response.result.forEach((r: any) => {\n                            sss[i].children!.push(r)\n                        })\n                    }\n                        \n                }\n            }\n            setTreeData(sss)\n\n            //only for force re-render \n            setInt(Math.random());\n            //************************ */\n            setLoading(false);\n            resolve();\n        });\n    }\n\n\n    async function fetch() {\n        const response = await GetAllDirs1(props.token, \"../\");\n        console.log(\"ZAEBAL\", response.result)\n        setTreeData(response.result)\n        setLoading(false);\n        console.log(response.result)\n    }\n    useEffect(() => {\n        fetch();\n        console.log(\"TREE\", treeData)\n    }, [])\n\n    return (\n        <>\n        \n        {loading == true ? 'loading' : (\n                <>\n              <Tree\n              showIcon={true}\n            //   loadData={onLoadData as any}\n              onSelect={props.onSelect}\n              treeData={treeData}\n          >\n              {/* {renderTreeNodes(treeData)} */}\n            </Tree>\n            </>\n        )}\n       \n        </>\n    )\n\n}","/Users/aslan/halyk/solution/src/components/tree-content/TreeContent.tsx",["483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499"],"import React, { useState, useEffect } from 'react';\n\nimport { Layout, Typography, Divider } from 'antd';\nimport Title from 'antd/lib/typography/Title';\nimport { TreeView } from '../tree-nav/TreeNav';\nimport { ItemList } from '../item-list/ItemList';\nimport { ArrowLeftOutlined } from '@ant-design/icons';\n\nimport { SearchModel, SubcategoryArticles, Article as ArticleModel } from '../../models/search/Search';\nimport \"./style.css\";\nimport ArrowLeft from './arrow-left.png';\nimport { GetArticlesBySubcategory, GetArticleInfo, GetArticlesByCategory, GetArticlesByEntity } from '../backend-api/api';\nimport { Article } from '../article/Article';\nconst { Content, Sider } = Layout;\n\nconst { Text } = Typography;\n\ninterface TreeContentProps {\n    treeData: any[];\n    items: SearchModel[];\n    loading: boolean;\n    searchText: string;\n    article: ArticleModel | undefined;\n    articleFound: boolean;\n}\n\nexport const TreeContent = (props: TreeContentProps) => {\n    const [loading, SetLoading] = useState(false);\n\n\n    const [selectedNavItem, setSelectedNavItem] = useState<string>('');\n\n    const [navItemClicked, setNavItemClicked] = useState<boolean>(false);\n\n    const [navMenuClicked, setNavMenuClicked] = useState<boolean>(false);\n\n    const [subcategoryArticles, setSubcategoryArticles] = useState<ArticleModel[]>([]);\n\n    const [articleFound, setArticleFound] = useState<boolean>(false);\n\n\n    const [articleLoading, setArticleLoading] = useState<boolean>(false);\n\n    const [articleId, setArticleId] = useState<number>(1);\n\n    const [articleInfo, setArticleInfo] = useState<ArticleModel>();\n\n    const [articlePath, setArticlePath] = useState<string>(\"\");\n\n\n    const [searchText, setSearchText] = useState('');\n\n    const [articleClicked, setArticleClicked] = useState(false);\n\n    const onSelect = (selectedKeys: any, info: any) => {\n        let index = selectedKeys.toString().lastIndexOf(\"/\") + 1\n        let navItem = selectedKeys.toString().slice(index, selectedKeys.toString().length);\n        setSelectedNavItem(navItem)\n        setNavItemClicked(true);\n        setArticleClicked(false);\n        articlesBySubcategory(navItem);\n        setArticleFound(false);\n        // если длина равна 3, то была выбрана категория\n        // если длина равна 4, то была выбрана подкатегория\n        let navDeep = info.node.pos.split('-').length\n        console.log(navDeep)\n        if (navDeep === 2) {\n            articlesByEntity(navItem)\n        } else if (navDeep === 3) {\n            articlesByCategory(navItem)\n        } else if (navDeep === 4) {\n            articlesBySubcategory(navItem)\n        }\n\n    };\n\n    const onArticleClick = (article_id: number) => {\n        console.log(\"article click\", article_id);\n        subcategoryArticles.map(s => {\n            if (s.id == article_id) {\n                setArticleId(s.id)\n                setArticlePath(s.path)\n            }\n        })\n        setArticleClicked(true);\n        setNavItemClicked(false);\n    }\n\n    useEffect(() => {\n        // setItems(props.items);\n        if (props.articleFound) {\n            setArticleFound(true)\n        } else {\n            setArticleFound(false);\n        }\n        setArticleLoading(true);\n    }, [props.articleFound])\n\n\n    const articlesBySubcategory = async (subcategory_title: string) => {\n        let response = await GetArticlesBySubcategory(\"\", subcategory_title);\n        if (!response.status) {\n            setSubcategoryArticles([])\n        } else {\n            setSubcategoryArticles(response.result.articles)\n        }\n        setArticleLoading(false);\n    }\n\n    const articlesByCategory = async (category_title: string) => {\n        console.log(\"category title\", category_title)\n        let response = await GetArticlesByCategory(\"\", category_title)\n        if (!response.status) {\n            setSubcategoryArticles([])\n        } else {\n            setSubcategoryArticles(response.result.articles)\n        }\n        setArticleLoading(false);\n    }\n\n    const articlesByEntity = async (entity_title: string) => {\n        let response = await GetArticlesByEntity(\"\", entity_title)\n        if (!response.status) {\n            setSubcategoryArticles([])\n        } else {\n            setSubcategoryArticles(response.result.articles)\n        }\n        setArticleLoading(false);\n    }\n\n\n    return (\n        <>\n            <Layout>\n                <Sider theme='light' width={300} style={{ borderTopLeftRadius: '24px', paddingTop: '20px' }}>\n                    <span style={{ fontFamily: 'Roboto', fontSize: \"16px\", lineHeight: '20px !important', letterSpacing: \"-0.4px/\" }}>\n                        {/* <ArrowLeftOutlined style={{ paddingLeft: '5px', marginRight: '10px' }} /> */}\n                        <img src={ArrowLeft} style={{ paddingLeft: '5px', width: 18, height: 12 }} />\n                        <span style={{ paddingLeft: '5px' }}>\n                            <a href=\"/\">\n                                Вернуться на главную\n                            </a>\n                        </span>\n                    </span>\n                    <div style={{ paddingTop: '15px' }}>\n                        {props.loading ? 'loading' : (\n                            <TreeView loading={props.loading} onSelect={onSelect} treeData={props.treeData} token=\"\" items={props.treeData} />\n                        )}\n                    </div>\n                </Sider>\n                <Divider type=\"vertical\" style={{ height: \"100%\", margin: \"0 0px\" }} />\n                <Content style={{ padding: '0 24px', minHeight: 700, backgroundColor: 'white', borderTopRightRadius: '24px' }} >\n                    {articleFound ? (\n                        <Article article_id={props.article!.id} path={articlePath} />\n                    ) : ''\n                    }\n\n                    {articleClicked ? (\n                        <Article article_id={articleId} path={articlePath} />\n                    ) : (\n                            !articleFound ? (\n                                <>\n                                    <Typography>\n                                        {(props.items.length === 0 && !navItemClicked) === true ? (\n                                            props.searchText === \"empty\" && !navItemClicked ? '' : (\n                                                <span className=\"title\">\n                                                    В Базе знаний нет статьи по запросу \"{props.searchText}\"\n                                             </span>\n                                            )\n                                        ) : ''}\n\n                                        <div className=\"nav-title\">\n                                            <span>\n                                                {selectedNavItem}\n                                            </span>\n                                        </div>\n\n                                        {(subcategoryArticles.length == 1) ? (\n                                            <>\n                                                <Text strong={true} style={{ backgroundColor: \"rgb(249,250,250)\", color: \"black !important\" }}>\n                                                    найдена: 1 статья\n                                            </Text>\n                                            </>\n                                        ) : (\n                                                props.items.length == 0 ? (\n                                                    <Text strong={true} style={{ backgroundColor: \"rgb(249,250,250)\", color: \"black !important\" }}>\n                                                        найдено: 0 статей\n                                             </Text>\n                                                ) : (\n                                                        <Text strong={true} style={{ backgroundColor: \"rgb(249,250,250)\", color: \"black !important\" }}>\n                                                            найдено: {subcategoryArticles.length} статьи\n                                                </Text>\n                                                    )\n                                            )}\n                                    </Typography>\n                                    <Divider type=\"horizontal\" />\n\n                                    <ItemList isLoading={articleLoading} items={subcategoryArticles} onClick={onArticleClick} navItemClicked={navItemClicked} />\n                                </>\n                            ) : ''\n                         \n                )}\n\n                </Content>\n        </Layout>\n        </>\n    )\n}\n\n\n","/Users/aslan/halyk/solution/src/components/item-list/ItemList.tsx",["500","501","502","503","504","505","506","507","508","509"],"import React, { useState } from 'react';\n\nimport { SearchTop } from '../search/Search';\nimport { Category } from '../category/Category';\n\nimport { Typography, Breadcrumb, List, Pagination } from 'antd';\nimport Title from 'antd/lib/typography/Title';\nimport { SearchModel, SubcategoryArticles, Article as ArticleModel } from '../../models/search/Search';\nimport NotFound from './not_found.png';\nimport './styles.css';\nconst listData: any[] = [];\nfor (let i = 0; i < 23; i++) {\n    listData.push({\n        // href: 'https://ant.design',\n        title: `Заголовок 1 ${i}`,\n        description:\n            'Ant Design, a design language for background applications, is refined by Ant UED Team.',\n        content:\n            'Разнообразный и богатый опыт укрепление и развитие структуры способствует подготовки и реализации соответст...',\n    });\n\n}\n\ninterface ItemProps {\n    items: ArticleModel[];\n    onClick: (article_id: number) => void;\n    navItemClicked: boolean;\n    isLoading: boolean;\n}\n\nexport const ItemList = (props: ItemProps) => {\n    return (\n        <>\n         {\n                props.items !== null  && !props.navItemClicked ? (\n                    <>\n                        <div>\n                            <img src={NotFound} />\n                            <span className=\"text\" style={{ paddingLeft: 20 }}>\n                                Попробуйте еще раз! Либо найдите нужную статью в категории\n                        </span>\n                        </div>\n                    </>\n                ) : ''\n                }  \n            {props.isLoading ? '' : (\n                    <>                \n                        <List\n                            itemLayout=\"vertical\"\n                            size=\"small\"\n                            pagination={\n                                {\n                                    onChange: page => {\n                                        console.log(page);\n                                    },\n    \n                                    pageSize: 3,\n                                }\n                            }\n                            dataSource={props.items}\n                            locale={{emptyText: \"В данной категории отсутствуют статьи\"}}\n                            renderItem={item => (\n                                <List.Item\n                                    key={item.title}\n                                    style={{ paddingLeft: '0' }}\n                                >\n                                    <List.Item.Meta\n                                        title={<a style={{ color: 'rgb(0,128,96)' }} onClick={() => props.onClick(item.id)}>{item.title}</a>}\n                                        description={<>\n                                            <Breadcrumb>\n                                                <Breadcrumb.Item> {item.path} </Breadcrumb.Item>\n                                                {/* <Breadcrumb.Item>\n                                                    <a href=\"\"> {item.category_name}  </a>\n                                                </Breadcrumb.Item>\n                                                <Breadcrumb.Item>\n                                                    <a href=\"\"> {item.subcategory_name} </a>\n                                                </Breadcrumb.Item> */}\n                                            </Breadcrumb>\n                                        </>}\n                                    />\n                                    {item.title}\n                                </List.Item>\n                            )} />\n\n                            </>\n                    \n            )}\n            \n\n        </>\n\n    )\n}\n\n","/Users/aslan/halyk/solution/src/components/search-dropdown/SearchDrodown.tsx",["510","511","512","513"],"import React, { useState } from 'react';\nimport './search-dropdown.css';\nimport ArrowIcon from './arrow-icon.png'\nimport { SearchModel } from '../../models/search/Search';\nimport { getByDisplayValue } from '@testing-library/react';\n\n\ninterface SearchDropdownProps {\n    items: SearchModel[];\n    onClick: (title: string) => void;\n}\n\nexport const SearchDropdown = (props: SearchDropdownProps) => {\n\n    const getValue = (title: string) => {\n        console.log(\"LI VALUE\", title);\n    }\n\n    const listItems = props.items.map((item) =>\n        <li value={item.title} onClick={() => props.onClick(item.title)}>\n            <i>\n                <img src={ArrowIcon} />\n            </i>\n            <span style={{ paddingLeft: '20px', fontWeight: 500, fontSize: 16, color: '#171717' }}>\n                {item.title}\n            </span>\n        </li>\n    );\n\n    return (\n        <>\n            <div style={{ paddingTop: props.items.length > 0 ? '80px' : '0px', width: '100%' }}>\n                <div className=\"on-hover\" style={{ paddingLeft: '35px', paddingBottom: '15px' }}>\n                    <ul style={{ listStyleType: 'none', margin: 0, padding: 0 }} >\n                        {listItems}\n                    </ul>\n                </div>\n            </div>\n\n        </>\n    )\n}\n\n","/Users/aslan/halyk/solution/src/components/article/Article.tsx",["514","515","516","517","518","519","520","521"],"import React, { useState, useEffect } from 'react';\n\nimport { SearchTop } from '../search/Search';\nimport { Category } from '../category/Category';\n\nimport { Typography, Breadcrumb, List, Pagination } from 'antd';\nimport Title from 'antd/lib/typography/Title';\nimport './article.css';\nimport { Conditions } from '../conditions/Conditions';\nimport { Process } from '../process/Process';\nimport { GetArticleInfo } from '../backend-api/api';\nimport { Article as ArticleModel } from '../../models/search/Search';\n\nconst listData: any[] = [];\nfor (let i = 0; i < 23; i++) {\n    listData.push({\n        // href: 'https://ant.design',\n        title: `Заголовок 1 ${i}`,\n        description:\n            'Ant Design, a design language for background applications, is refined by Ant UED Team.',\n        content:\n            'Разнообразный и богатый опыт укрепление и развитие структуры способствует подготовки и реализации соответст...',\n    });\n\n}\n\ninterface ArticleProps {\n    article_id: number;\n    path: string;\n}\n\nexport const Article = (props: ArticleProps) => {\n\n    const [conditionClicked, setConditionClicked] = useState(false);\n    const [processClicked, setProcessClicked] = useState(false);\n\n    const [articleLoadind, setArticleLoading] = useState(true);\n\n    const [articleInfo, setArticleInfo] = useState<ArticleModel>();\n\n\n    const getArticleInfo = async () => {\n        let response = await GetArticleInfo(\"\", props.article_id);\n        setArticleInfo(response.result);\n        setArticleLoading(false)\n\n    }\n    useEffect(() => {\n        getArticleInfo();\n    }, [])\n\n    return (\n        <>\n            {articleLoadind ? 'loading' : (\n                <>\n                    <div className=\"title\">\n                        <span>\n                            {articleInfo?.title}\n                        </span>\n                        <div className=\"breadcumb\">\n                            {props.path}\n                        </div>\n                    </div>\n\n                    <div className=\"short-description\">\n                        <span>\n                            {articleInfo?.description}\n                        </span>\n                    </div>\n\n                    <div className=\"button-group\">\n                        <button className={conditionClicked ? \"button-clicked\" : \"button\"} onClick={() => {\n                            setProcessClicked(false);\n                            setConditionClicked(true);\n                        }}>\n                            Условия\n                </button>\n\n                        <button className={processClicked ? \"button-clicked\" : \"button\"} style={{ marginLeft: 20 }} onClick={() => {\n                            setConditionClicked(false);\n                            setProcessClicked(true);\n                        }}>\n                            Процессы\n                </button>\n                    </div>\n\n                    {conditionClicked ? (\n                        <Conditions data={articleInfo?.conditions} />\n                    ) : (<Process data={articleInfo?.processes} />)}\n                </>\n\n            )}\n\n\n\n        </>\n\n    )\n}\n\n","/Users/aslan/halyk/solution/src/components/conditions/Conditions.tsx",["522","523"],"import React, { useState } from 'react';\nimport './conditions.css';\nimport { ConditionModel } from '../../models/search/Search';\n\ninterface ConditionProps {\n    data?: ConditionModel[];\n}\n\nexport const Conditions = (props: ConditionProps) => {\n\n    return (\n        <>\n            {props.data === null ? '' : (\n                props.data!.map(i => (\n                    <>\n                        {i.files.map(j => (\n                            <img src={\"http://halyk-wiki.cfp.corp.p-s.kz/file-server/\" + j.full_directory} style={{ maxWidth: '100%' }} />\n                        ))}\n\n                        <div className=\"long-description\">\n                            {i.short_description}\n                        </div>\n                    </>\n                ))\n            )}\n\n\n        </>\n\n    )\n}\n\n","/Users/aslan/halyk/solution/src/components/process/Process.tsx",["524","525","526"],"import React, { useState } from 'react';\nimport { Tabs } from 'antd';\nimport ClientIcon from './client-icon.png';\nimport OperatorIcon from './operator-icon.png'\nimport { StepsComponent } from '../steps/Steps';\nimport './process.css';\nimport { ProcessModel } from '../../models/search/Search';\nconst { TabPane } = Tabs;\n\n\ninterface ProcessProps {\n    data?: ProcessModel[];\n}\n\nexport const Process = (props: ProcessProps) => {\n\n    return (\n        <>\n            <Tabs defaultActiveKey=\"1\" tabBarStyle={{}}>\n                <TabPane\n                    tab={\n                        <span>\n                            <img src={ClientIcon} style={{ marginRight: 10 }} />\n                            Клиентская\n                         </span>\n                    }\n                    key=\"1\"\n                >\n\n                    {props.data !== null ? (\n                        <StepsComponent data={props.data!} />\n                    ) : ''}\n                </TabPane>\n                <TabPane\n                    tab={\n                        <span>\n                            <img src={OperatorIcon} style={{ marginRight: 10 }} />\n                            Операторская\n                        </span>\n                    }\n                    key=\"2\"\n                >\n                    {props.data !== null ? (\n                        <StepsComponent data={props.data!} />\n                    ) : ''}\n                </TabPane>\n            </Tabs>\n        </>\n\n    )\n}\n\n","/Users/aslan/halyk/solution/src/components/steps/Steps.tsx",["527","528","529","530","531","532"],"import React, { useState } from 'react';\nimport { Tabs, Steps, List, Image } from 'antd';\nimport ClientIcon from './client-icon.png';\nimport OperatorIcon from './operator-icon.png'\nimport StepIcon from './step-icon.png';\nimport './steps.css'\nimport { ProcessModel } from '../../models/search/Search';\nconst { TabPane } = Tabs;\nconst { Step } = Steps;\n\n\ninterface StepsProps {\n    data: ProcessModel[];\n}\n\nexport const StepsComponent = (props: StepsProps) => {\n\n    return (\n        <>\n            <List\n                itemLayout=\"horizontal\"\n                dataSource={props.data}\n                renderItem={(item, index) => (\n                    <>\n                        <List.Item>\n                            <List.Item.Meta\n                                avatar={(\n                                    <div className=\"icon\">\n                                        {/* <img src={StepIcon}  /> */}\n                                        <div className=\"icon-text\">\n                                            {index + 1}\n                                        </div>\n                                    </div>\n\n                                )}\n                                // description=\"Выберите страну и введите номер телефона. Нажмите «У меня нет мобильного телефона», если у вас его нет, и укажите резервную почту. \"\n                                description={(\n                                    <>\n                                        <span className=\"primary-text\">\n                                            {item.description}\n\n                                        </span>\n                                        <br />\n                                        {item.files.map(f => (\n\n                                            <>\n                                                <div style={{ display: 'inline-block' }}>\n\n                                                    <div className=\"img-border\">\n                                                        <Image\n                                                            width={36}\n                                                            className=\"img-style\"\n                                                            src={\"http://halyk-wiki.cfp.corp.p-s.kz/file-server/\" + f.full_directory}\n                                                        />\n                                                        <span className=\"img-title\"> {f.name} </span>\n                                                    </div>\n\n                                                </div>\n                                            </>\n                                        ))}\n                                    </>\n                                )}\n                            />\n                        </List.Item>\n                    </>\n                )}\n            />\n        </>\n\n    )\n}\n\n","/Users/aslan/halyk/solution/src/components/departments/Department.tsx",[],"/Users/aslan/halyk/solution/src/components/modals/DepartmentModal.tsx",["533","534"],"import React, { useState, useEffect } from 'react';\nimport { Modal } from 'antd';\nimport YandexMap  from '../departments/Department';\nimport SearchIcon from './search-icon-2.png';\nimport './style.css';\n\ninterface ModalProps {\n    isVisible: boolean;\n    onOk: () => void;\n    onCancel: () => void;\n    title: string;\n}\n\nexport const DepartmentModal = (props: ModalProps) => {\n    const [searchValue, setSearchValue] = useState<string>('');\n\n\n\n    return (\n        <>\n            <Modal title={props.title} visible={props.isVisible} onOk={props.onOk} onCancel={props.onCancel} footer={null} style={{minHeight: 620}}>\n                <div className=\"search-input-modal\" >\n                    <i className=\"search-icon-modal\">\n                        <img src={SearchIcon} />\n                    </i>\n                    <input className=\"search-input-field-modal\" placeholder=\"Введите адрес\" value={searchValue} onChange={(event) => {\n                        setSearchValue(event.target.value);\n                    }}\n                    />\n                </div>\n                <div style={{marginTop: 48, height: '100%'}}>\n                    <YandexMap />\n                </div>\n\n            </Modal>\n        </>\n    )\n}","/Users/aslan/halyk/solution/src/components/articlePage.tsx/ArticlePage.tsx",["535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555"],{"ruleId":"556","replacedBy":"557"},{"ruleId":"558","replacedBy":"559"},{"ruleId":"560","severity":1,"message":"561","line":2,"column":8,"nodeType":"562","messageId":"563","endLine":2,"endColumn":12},{"ruleId":"560","severity":1,"message":"564","line":10,"column":3,"nodeType":"562","messageId":"563","endLine":10,"endColumn":7},{"ruleId":"560","severity":1,"message":"565","line":3,"column":8,"nodeType":"562","messageId":"563","endLine":3,"endColumn":12},{"ruleId":"560","severity":1,"message":"566","line":5,"column":3,"nodeType":"562","messageId":"563","endLine":5,"endColumn":22},{"ruleId":"560","severity":1,"message":"567","line":2,"column":17,"nodeType":"562","messageId":"563","endLine":2,"endColumn":20},{"ruleId":"560","severity":1,"message":"568","line":2,"column":22,"nodeType":"562","messageId":"563","endLine":2,"endColumn":27},{"ruleId":"560","severity":1,"message":"569","line":8,"column":8,"nodeType":"562","messageId":"563","endLine":8,"endColumn":21},{"ruleId":"560","severity":1,"message":"570","line":8,"column":25,"nodeType":"562","messageId":"563","endLine":8,"endColumn":39},{"ruleId":"560","severity":1,"message":"571","line":8,"column":41,"nodeType":"562","messageId":"563","endLine":8,"endColumn":60},{"ruleId":"560","severity":1,"message":"572","line":8,"column":62,"nodeType":"562","messageId":"563","endLine":8,"endColumn":79},{"ruleId":"560","severity":1,"message":"573","line":8,"column":81,"nodeType":"562","messageId":"563","endLine":8,"endColumn":99},{"ruleId":"560","severity":1,"message":"574","line":48,"column":9,"nodeType":"562","messageId":"563","endLine":48,"endColumn":17},{"ruleId":"575","severity":1,"message":"576","line":100,"column":8,"nodeType":"577","endLine":100,"endColumn":10,"suggestions":"578"},{"ruleId":"560","severity":1,"message":"579","line":4,"column":10,"nodeType":"562","messageId":"563","endLine":4,"endColumn":25},{"ruleId":"560","severity":1,"message":"580","line":206,"column":10,"nodeType":"562","messageId":"563","endLine":206,"endColumn":14},{"ruleId":"560","severity":1,"message":"581","line":2,"column":10,"nodeType":"562","messageId":"563","endLine":2,"endColumn":16},{"ruleId":"560","severity":1,"message":"582","line":2,"column":38,"nodeType":"562","messageId":"563","endLine":2,"endColumn":43},{"ruleId":"560","severity":1,"message":"583","line":3,"column":10,"nodeType":"562","messageId":"563","endLine":3,"endColumn":18},{"ruleId":"560","severity":1,"message":"584","line":7,"column":9,"nodeType":"562","messageId":"563","endLine":7,"endColumn":15},{"ruleId":"560","severity":1,"message":"585","line":10,"column":11,"nodeType":"562","messageId":"563","endLine":10,"endColumn":17},{"ruleId":"560","severity":1,"message":"586","line":39,"column":14,"nodeType":"562","messageId":"563","endLine":39,"endColumn":26},{"ruleId":"560","severity":1,"message":"587","line":44,"column":14,"nodeType":"562","messageId":"563","endLine":44,"endColumn":25},{"ruleId":"560","severity":1,"message":"588","line":48,"column":14,"nodeType":"562","messageId":"563","endLine":48,"endColumn":26},{"ruleId":"560","severity":1,"message":"589","line":52,"column":12,"nodeType":"562","messageId":"563","endLine":52,"endColumn":18},{"ruleId":"560","severity":1,"message":"590","line":53,"column":12,"nodeType":"562","messageId":"563","endLine":53,"endColumn":17},{"ruleId":"560","severity":1,"message":"567","line":2,"column":17,"nodeType":"562","messageId":"563","endLine":2,"endColumn":20},{"ruleId":"560","severity":1,"message":"568","line":2,"column":22,"nodeType":"562","messageId":"563","endLine":2,"endColumn":27},{"ruleId":"560","severity":1,"message":"591","line":4,"column":10,"nodeType":"562","messageId":"563","endLine":4,"endColumn":21},{"ruleId":"560","severity":1,"message":"592","line":4,"column":23,"nodeType":"562","messageId":"563","endLine":4,"endColumn":37},{"ruleId":"560","severity":1,"message":"593","line":4,"column":39,"nodeType":"562","messageId":"563","endLine":4,"endColumn":51},{"ruleId":"560","severity":1,"message":"594","line":5,"column":10,"nodeType":"562","messageId":"563","endLine":5,"endColumn":23},{"ruleId":"560","severity":1,"message":"579","line":5,"column":25,"nodeType":"562","messageId":"563","endLine":5,"endColumn":40},{"ruleId":"560","severity":1,"message":"595","line":6,"column":10,"nodeType":"562","messageId":"563","endLine":6,"endColumn":21},{"ruleId":"560","severity":1,"message":"596","line":8,"column":17,"nodeType":"562","messageId":"563","endLine":8,"endColumn":28},{"ruleId":"560","severity":1,"message":"597","line":8,"column":30,"nodeType":"562","messageId":"563","endLine":8,"endColumn":40},{"ruleId":"560","severity":1,"message":"598","line":8,"column":48,"nodeType":"562","messageId":"563","endLine":8,"endColumn":58},{"ruleId":"560","severity":1,"message":"599","line":10,"column":10,"nodeType":"562","messageId":"563","endLine":10,"endColumn":23},{"ruleId":"560","severity":1,"message":"600","line":29,"column":12,"nodeType":"562","messageId":"563","endLine":29,"endColumn":19},{"ruleId":"560","severity":1,"message":"601","line":29,"column":21,"nodeType":"562","messageId":"563","endLine":29,"endColumn":31},{"ruleId":"560","severity":1,"message":"602","line":30,"column":12,"nodeType":"562","messageId":"563","endLine":30,"endColumn":21},{"ruleId":"560","severity":1,"message":"603","line":33,"column":12,"nodeType":"562","messageId":"563","endLine":33,"endColumn":18},{"ruleId":"560","severity":1,"message":"604","line":36,"column":12,"nodeType":"562","messageId":"563","endLine":36,"endColumn":22},{"ruleId":"560","severity":1,"message":"574","line":44,"column":9,"nodeType":"562","messageId":"563","endLine":44,"endColumn":17},{"ruleId":"575","severity":1,"message":"576","line":69,"column":8,"nodeType":"577","endLine":69,"endColumn":10,"suggestions":"605"},{"ruleId":"560","severity":1,"message":"588","line":72,"column":14,"nodeType":"562","messageId":"563","endLine":72,"endColumn":26},{"ruleId":"606","severity":1,"message":"607","line":84,"column":19,"nodeType":"608","messageId":"609","endLine":84,"endColumn":21},{"ruleId":"606","severity":1,"message":"610","line":122,"column":27,"nodeType":"608","messageId":"609","endLine":122,"endColumn":29},{"ruleId":"560","severity":1,"message":"581","line":2,"column":10,"nodeType":"562","messageId":"563","endLine":2,"endColumn":16},{"ruleId":"560","severity":1,"message":"582","line":2,"column":38,"nodeType":"562","messageId":"563","endLine":2,"endColumn":43},{"ruleId":"560","severity":1,"message":"568","line":3,"column":22,"nodeType":"562","messageId":"563","endLine":3,"endColumn":27},{"ruleId":"560","severity":1,"message":"585","line":17,"column":11,"nodeType":"562","messageId":"563","endLine":17,"endColumn":17},{"ruleId":"560","severity":1,"message":"586","line":48,"column":14,"nodeType":"562","messageId":"563","endLine":48,"endColumn":26},{"ruleId":"560","severity":1,"message":"587","line":53,"column":14,"nodeType":"562","messageId":"563","endLine":53,"endColumn":25},{"ruleId":"560","severity":1,"message":"589","line":61,"column":12,"nodeType":"562","messageId":"563","endLine":61,"endColumn":18},{"ruleId":"560","severity":1,"message":"590","line":62,"column":12,"nodeType":"562","messageId":"563","endLine":62,"endColumn":17},{"ruleId":"560","severity":1,"message":"611","line":65,"column":12,"nodeType":"562","messageId":"563","endLine":65,"endColumn":21},{"ruleId":"560","severity":1,"message":"612","line":65,"column":23,"nodeType":"562","messageId":"563","endLine":65,"endColumn":35},{"ruleId":"556","replacedBy":"613"},{"ruleId":"558","replacedBy":"614"},{"ruleId":"560","severity":1,"message":"567","line":2,"column":17,"nodeType":"562","messageId":"563","endLine":2,"endColumn":20},{"ruleId":"560","severity":1,"message":"568","line":2,"column":22,"nodeType":"562","messageId":"563","endLine":2,"endColumn":27},{"ruleId":"560","severity":1,"message":"615","line":2,"column":29,"nodeType":"562","messageId":"563","endLine":2,"endColumn":33},{"ruleId":"560","severity":1,"message":"569","line":4,"column":8,"nodeType":"562","messageId":"563","endLine":4,"endColumn":21},{"ruleId":"560","severity":1,"message":"570","line":4,"column":25,"nodeType":"562","messageId":"563","endLine":4,"endColumn":39},{"ruleId":"560","severity":1,"message":"571","line":4,"column":41,"nodeType":"562","messageId":"563","endLine":4,"endColumn":60},{"ruleId":"560","severity":1,"message":"572","line":4,"column":62,"nodeType":"562","messageId":"563","endLine":4,"endColumn":79},{"ruleId":"560","severity":1,"message":"573","line":4,"column":81,"nodeType":"562","messageId":"563","endLine":4,"endColumn":99},{"ruleId":"560","severity":1,"message":"604","line":64,"column":12,"nodeType":"562","messageId":"563","endLine":64,"endColumn":22},{"ruleId":"560","severity":1,"message":"574","line":68,"column":9,"nodeType":"562","messageId":"563","endLine":68,"endColumn":17},{"ruleId":"606","severity":1,"message":"607","line":73,"column":19,"nodeType":"608","messageId":"609","endLine":73,"endColumn":21},{"ruleId":"606","severity":1,"message":"607","line":87,"column":25,"nodeType":"608","messageId":"609","endLine":87,"endColumn":27},{"ruleId":"606","severity":1,"message":"607","line":95,"column":24,"nodeType":"608","messageId":"609","endLine":95,"endColumn":26},{"ruleId":"575","severity":1,"message":"576","line":151,"column":8,"nodeType":"577","endLine":151,"endColumn":10,"suggestions":"616"},{"ruleId":"560","severity":1,"message":"581","line":2,"column":10,"nodeType":"562","messageId":"563","endLine":2,"endColumn":16},{"ruleId":"560","severity":1,"message":"582","line":2,"column":38,"nodeType":"562","messageId":"563","endLine":2,"endColumn":43},{"ruleId":"560","severity":1,"message":"583","line":3,"column":10,"nodeType":"562","messageId":"563","endLine":3,"endColumn":18},{"ruleId":"560","severity":1,"message":"585","line":11,"column":11,"nodeType":"562","messageId":"563","endLine":11,"endColumn":17},{"ruleId":"556","replacedBy":"617"},{"ruleId":"558","replacedBy":"618"},{"ruleId":"560","severity":1,"message":"567","line":2,"column":17,"nodeType":"562","messageId":"563","endLine":2,"endColumn":20},{"ruleId":"560","severity":1,"message":"568","line":2,"column":22,"nodeType":"562","messageId":"563","endLine":2,"endColumn":27},{"ruleId":"560","severity":1,"message":"591","line":4,"column":10,"nodeType":"562","messageId":"563","endLine":4,"endColumn":21},{"ruleId":"560","severity":1,"message":"592","line":4,"column":23,"nodeType":"562","messageId":"563","endLine":4,"endColumn":37},{"ruleId":"560","severity":1,"message":"593","line":4,"column":39,"nodeType":"562","messageId":"563","endLine":4,"endColumn":51},{"ruleId":"560","severity":1,"message":"594","line":5,"column":10,"nodeType":"562","messageId":"563","endLine":5,"endColumn":23},{"ruleId":"560","severity":1,"message":"579","line":5,"column":25,"nodeType":"562","messageId":"563","endLine":5,"endColumn":40},{"ruleId":"560","severity":1,"message":"619","line":5,"column":42,"nodeType":"562","messageId":"563","endLine":5,"endColumn":59},{"ruleId":"560","severity":1,"message":"595","line":6,"column":10,"nodeType":"562","messageId":"563","endLine":6,"endColumn":21},{"ruleId":"560","severity":1,"message":"596","line":8,"column":17,"nodeType":"562","messageId":"563","endLine":8,"endColumn":28},{"ruleId":"560","severity":1,"message":"597","line":8,"column":30,"nodeType":"562","messageId":"563","endLine":8,"endColumn":40},{"ruleId":"560","severity":1,"message":"598","line":8,"column":48,"nodeType":"562","messageId":"563","endLine":8,"endColumn":58},{"ruleId":"560","severity":1,"message":"599","line":10,"column":10,"nodeType":"562","messageId":"563","endLine":10,"endColumn":23},{"ruleId":"560","severity":1,"message":"600","line":29,"column":12,"nodeType":"562","messageId":"563","endLine":29,"endColumn":19},{"ruleId":"560","severity":1,"message":"601","line":29,"column":21,"nodeType":"562","messageId":"563","endLine":29,"endColumn":31},{"ruleId":"560","severity":1,"message":"602","line":30,"column":12,"nodeType":"562","messageId":"563","endLine":30,"endColumn":21},{"ruleId":"560","severity":1,"message":"603","line":33,"column":12,"nodeType":"562","messageId":"563","endLine":33,"endColumn":18},{"ruleId":"560","severity":1,"message":"604","line":36,"column":12,"nodeType":"562","messageId":"563","endLine":36,"endColumn":22},{"ruleId":"560","severity":1,"message":"574","line":44,"column":9,"nodeType":"562","messageId":"563","endLine":44,"endColumn":17},{"ruleId":"575","severity":1,"message":"576","line":71,"column":8,"nodeType":"577","endLine":71,"endColumn":10,"suggestions":"620"},{"ruleId":"560","severity":1,"message":"588","line":74,"column":14,"nodeType":"562","messageId":"563","endLine":74,"endColumn":26},{"ruleId":"606","severity":1,"message":"610","line":111,"column":27,"nodeType":"608","messageId":"609","endLine":111,"endColumn":29},{"ruleId":"606","severity":1,"message":"607","line":137,"column":19,"nodeType":"608","messageId":"609","endLine":137,"endColumn":21},{"ruleId":"560","severity":1,"message":"621","line":32,"column":13,"nodeType":"562","messageId":"563","endLine":32,"endColumn":36},{"ruleId":"622","severity":1,"message":"623","line":72,"column":18,"nodeType":"624","endLine":72,"endColumn":30},{"ruleId":"560","severity":1,"message":"567","line":2,"column":17,"nodeType":"562","messageId":"563","endLine":2,"endColumn":20},{"ruleId":"560","severity":1,"message":"568","line":2,"column":22,"nodeType":"562","messageId":"563","endLine":2,"endColumn":27},{"ruleId":"560","severity":1,"message":"625","line":6,"column":10,"nodeType":"562","messageId":"563","endLine":6,"endColumn":25},{"ruleId":"560","severity":1,"message":"574","line":41,"column":9,"nodeType":"562","messageId":"563","endLine":41,"endColumn":17},{"ruleId":"560","severity":1,"message":"626","line":48,"column":13,"nodeType":"562","messageId":"563","endLine":48,"endColumn":23},{"ruleId":"575","severity":1,"message":"576","line":92,"column":8,"nodeType":"577","endLine":92,"endColumn":10,"suggestions":"627"},{"ruleId":"560","severity":1,"message":"628","line":1,"column":17,"nodeType":"562","messageId":"563","endLine":1,"endColumn":25},{"ruleId":"560","severity":1,"message":"581","line":2,"column":10,"nodeType":"562","messageId":"563","endLine":2,"endColumn":16},{"ruleId":"560","severity":1,"message":"582","line":2,"column":38,"nodeType":"562","messageId":"563","endLine":2,"endColumn":43},{"ruleId":"560","severity":1,"message":"583","line":3,"column":10,"nodeType":"562","messageId":"563","endLine":3,"endColumn":18},{"ruleId":"560","severity":1,"message":"584","line":7,"column":9,"nodeType":"562","messageId":"563","endLine":7,"endColumn":15},{"ruleId":"560","severity":1,"message":"585","line":10,"column":11,"nodeType":"562","messageId":"563","endLine":10,"endColumn":17},{"ruleId":"560","severity":1,"message":"588","line":39,"column":14,"nodeType":"562","messageId":"563","endLine":39,"endColumn":26},{"ruleId":"560","severity":1,"message":"567","line":2,"column":17,"nodeType":"562","messageId":"563","endLine":2,"endColumn":20},{"ruleId":"560","severity":1,"message":"568","line":2,"column":22,"nodeType":"562","messageId":"563","endLine":2,"endColumn":27},{"ruleId":"560","severity":1,"message":"581","line":3,"column":10,"nodeType":"562","messageId":"563","endLine":3,"endColumn":16},{"ruleId":"560","severity":1,"message":"569","line":4,"column":8,"nodeType":"562","messageId":"563","endLine":4,"endColumn":21},{"ruleId":"560","severity":1,"message":"570","line":4,"column":25,"nodeType":"562","messageId":"563","endLine":4,"endColumn":39},{"ruleId":"560","severity":1,"message":"571","line":4,"column":41,"nodeType":"562","messageId":"563","endLine":4,"endColumn":60},{"ruleId":"560","severity":1,"message":"572","line":4,"column":62,"nodeType":"562","messageId":"563","endLine":4,"endColumn":79},{"ruleId":"560","severity":1,"message":"573","line":4,"column":81,"nodeType":"562","messageId":"563","endLine":4,"endColumn":99},{"ruleId":"560","severity":1,"message":"629","line":5,"column":10,"nodeType":"562","messageId":"563","endLine":5,"endColumn":24},{"ruleId":"560","severity":1,"message":"630","line":5,"column":26,"nodeType":"562","messageId":"563","endLine":5,"endColumn":43},{"ruleId":"560","severity":1,"message":"579","line":5,"column":45,"nodeType":"562","messageId":"563","endLine":5,"endColumn":60},{"ruleId":"560","severity":1,"message":"631","line":6,"column":10,"nodeType":"562","messageId":"563","endLine":6,"endColumn":23},{"ruleId":"560","severity":1,"message":"591","line":7,"column":10,"nodeType":"562","messageId":"563","endLine":7,"endColumn":21},{"ruleId":"560","severity":1,"message":"592","line":7,"column":23,"nodeType":"562","messageId":"563","endLine":7,"endColumn":37},{"ruleId":"560","severity":1,"message":"593","line":7,"column":39,"nodeType":"562","messageId":"563","endLine":7,"endColumn":51},{"ruleId":"560","severity":1,"message":"632","line":8,"column":10,"nodeType":"562","messageId":"563","endLine":8,"endColumn":26},{"ruleId":"560","severity":1,"message":"633","line":10,"column":10,"nodeType":"562","messageId":"563","endLine":10,"endColumn":21},{"ruleId":"560","severity":1,"message":"634","line":15,"column":9,"nodeType":"562","messageId":"563","endLine":15,"endColumn":13},{"ruleId":"560","severity":1,"message":"635","line":20,"column":10,"nodeType":"562","messageId":"563","endLine":20,"endColumn":21},{"ruleId":"560","severity":1,"message":"600","line":74,"column":12,"nodeType":"562","messageId":"563","endLine":74,"endColumn":19},{"ruleId":"560","severity":1,"message":"601","line":74,"column":21,"nodeType":"562","messageId":"563","endLine":74,"endColumn":31},{"ruleId":"560","severity":1,"message":"604","line":80,"column":12,"nodeType":"562","messageId":"563","endLine":80,"endColumn":22},{"ruleId":"575","severity":1,"message":"576","line":120,"column":8,"nodeType":"577","endLine":120,"endColumn":10,"suggestions":"636"},{"ruleId":"560","severity":1,"message":"567","line":2,"column":17,"nodeType":"562","messageId":"563","endLine":2,"endColumn":20},{"ruleId":"560","severity":1,"message":"568","line":2,"column":22,"nodeType":"562","messageId":"563","endLine":2,"endColumn":27},{"ruleId":"560","severity":1,"message":"591","line":4,"column":10,"nodeType":"562","messageId":"563","endLine":4,"endColumn":21},{"ruleId":"560","severity":1,"message":"592","line":4,"column":23,"nodeType":"562","messageId":"563","endLine":4,"endColumn":37},{"ruleId":"560","severity":1,"message":"593","line":4,"column":39,"nodeType":"562","messageId":"563","endLine":4,"endColumn":51},{"ruleId":"560","severity":1,"message":"594","line":5,"column":10,"nodeType":"562","messageId":"563","endLine":5,"endColumn":23},{"ruleId":"560","severity":1,"message":"579","line":5,"column":25,"nodeType":"562","messageId":"563","endLine":5,"endColumn":40},{"ruleId":"560","severity":1,"message":"595","line":6,"column":10,"nodeType":"562","messageId":"563","endLine":6,"endColumn":21},{"ruleId":"560","severity":1,"message":"596","line":8,"column":17,"nodeType":"562","messageId":"563","endLine":8,"endColumn":28},{"ruleId":"560","severity":1,"message":"597","line":8,"column":30,"nodeType":"562","messageId":"563","endLine":8,"endColumn":40},{"ruleId":"560","severity":1,"message":"598","line":8,"column":48,"nodeType":"562","messageId":"563","endLine":8,"endColumn":58},{"ruleId":"560","severity":1,"message":"599","line":10,"column":10,"nodeType":"562","messageId":"563","endLine":10,"endColumn":23},{"ruleId":"560","severity":1,"message":"637","line":14,"column":10,"nodeType":"562","messageId":"563","endLine":14,"endColumn":20},{"ruleId":"560","severity":1,"message":"638","line":15,"column":8,"nodeType":"562","messageId":"563","endLine":15,"endColumn":14},{"ruleId":"560","severity":1,"message":"639","line":23,"column":7,"nodeType":"562","messageId":"563","endLine":23,"endColumn":17},{"ruleId":"560","severity":1,"message":"600","line":34,"column":12,"nodeType":"562","messageId":"563","endLine":34,"endColumn":19},{"ruleId":"560","severity":1,"message":"601","line":34,"column":21,"nodeType":"562","messageId":"563","endLine":34,"endColumn":31},{"ruleId":"560","severity":1,"message":"602","line":35,"column":12,"nodeType":"562","messageId":"563","endLine":35,"endColumn":21},{"ruleId":"560","severity":1,"message":"603","line":38,"column":12,"nodeType":"562","messageId":"563","endLine":38,"endColumn":18},{"ruleId":"560","severity":1,"message":"604","line":41,"column":12,"nodeType":"562","messageId":"563","endLine":41,"endColumn":22},{"ruleId":"560","severity":1,"message":"574","line":49,"column":9,"nodeType":"562","messageId":"563","endLine":49,"endColumn":17},{"ruleId":"575","severity":1,"message":"576","line":74,"column":8,"nodeType":"577","endLine":74,"endColumn":10,"suggestions":"640"},{"ruleId":"560","severity":1,"message":"588","line":77,"column":14,"nodeType":"562","messageId":"563","endLine":77,"endColumn":26},{"ruleId":"606","severity":1,"message":"607","line":89,"column":19,"nodeType":"608","messageId":"609","endLine":89,"endColumn":21},{"ruleId":"606","severity":1,"message":"610","line":127,"column":27,"nodeType":"608","messageId":"609","endLine":127,"endColumn":29},{"ruleId":"560","severity":1,"message":"641","line":150,"column":14,"nodeType":"562","messageId":"563","endLine":150,"endColumn":22},{"ruleId":"556","replacedBy":"642"},{"ruleId":"558","replacedBy":"643"},{"ruleId":"560","severity":1,"message":"561","line":2,"column":8,"nodeType":"562","messageId":"563","endLine":2,"endColumn":12},{"ruleId":"560","severity":1,"message":"564","line":8,"column":3,"nodeType":"562","messageId":"563","endLine":8,"endColumn":7},{"ruleId":"560","severity":1,"message":"644","line":12,"column":8,"nodeType":"562","messageId":"563","endLine":12,"endColumn":14},{"ruleId":"560","severity":1,"message":"645","line":15,"column":8,"nodeType":"562","messageId":"563","endLine":15,"endColumn":18},{"ruleId":"560","severity":1,"message":"646","line":16,"column":10,"nodeType":"562","messageId":"563","endLine":16,"endColumn":18},{"ruleId":"560","severity":1,"message":"647","line":17,"column":10,"nodeType":"562","messageId":"563","endLine":17,"endColumn":21},{"ruleId":"560","severity":1,"message":"648","line":3,"column":8,"nodeType":"562","messageId":"563","endLine":3,"endColumn":17},{"ruleId":"560","severity":1,"message":"649","line":4,"column":10,"nodeType":"562","messageId":"563","endLine":4,"endColumn":18},{"ruleId":"560","severity":1,"message":"650","line":13,"column":11,"nodeType":"562","messageId":"563","endLine":13,"endColumn":17},{"ruleId":"560","severity":1,"message":"651","line":14,"column":12,"nodeType":"562","messageId":"563","endLine":14,"endColumn":24},{"ruleId":"560","severity":1,"message":"652","line":14,"column":26,"nodeType":"562","messageId":"563","endLine":14,"endColumn":41},{"ruleId":"575","severity":1,"message":"653","line":28,"column":8,"nodeType":"577","endLine":28,"endColumn":10,"suggestions":"654"},{"ruleId":"556","replacedBy":"655"},{"ruleId":"558","replacedBy":"656"},{"ruleId":"560","severity":1,"message":"657","line":4,"column":22,"nodeType":"562","messageId":"563","endLine":4,"endColumn":28},{"ruleId":"560","severity":1,"message":"658","line":6,"column":5,"nodeType":"562","messageId":"563","endLine":6,"endColumn":10},{"ruleId":"560","severity":1,"message":"659","line":7,"column":5,"nodeType":"562","messageId":"563","endLine":7,"endColumn":11},{"ruleId":"560","severity":1,"message":"600","line":18,"column":12,"nodeType":"562","messageId":"563","endLine":18,"endColumn":19},{"ruleId":"560","severity":1,"message":"660","line":23,"column":15,"nodeType":"562","messageId":"563","endLine":23,"endColumn":21},{"ruleId":"622","severity":1,"message":"661","line":52,"column":21,"nodeType":"624","endLine":52,"endColumn":48},{"ruleId":"575","severity":1,"message":"662","line":35,"column":8,"nodeType":"577","endLine":35,"endColumn":10,"suggestions":"663"},{"ruleId":"560","severity":1,"message":"664","line":3,"column":16,"nodeType":"562","messageId":"563","endLine":3,"endColumn":21},{"ruleId":"560","severity":1,"message":"665","line":3,"column":31,"nodeType":"562","messageId":"563","endLine":3,"endColumn":43},{"ruleId":"560","severity":1,"message":"568","line":3,"column":45,"nodeType":"562","messageId":"563","endLine":3,"endColumn":50},{"ruleId":"560","severity":1,"message":"666","line":4,"column":10,"nodeType":"562","messageId":"563","endLine":4,"endColumn":22},{"ruleId":"560","severity":1,"message":"667","line":4,"column":24,"nodeType":"562","messageId":"563","endLine":4,"endColumn":36},{"ruleId":"560","severity":1,"message":"645","line":8,"column":8,"nodeType":"562","messageId":"563","endLine":8,"endColumn":18},{"ruleId":"560","severity":1,"message":"668","line":12,"column":18,"nodeType":"562","messageId":"563","endLine":12,"endColumn":22},{"ruleId":"560","severity":1,"message":"669","line":12,"column":24,"nodeType":"562","messageId":"563","endLine":12,"endColumn":34},{"ruleId":"560","severity":1,"message":"670","line":13,"column":8,"nodeType":"562","messageId":"563","endLine":13,"endColumn":13},{"ruleId":"560","severity":1,"message":"646","line":15,"column":10,"nodeType":"562","messageId":"563","endLine":15,"endColumn":18},{"ruleId":"560","severity":1,"message":"671","line":17,"column":10,"nodeType":"562","messageId":"563","endLine":17,"endColumn":15},{"ruleId":"560","severity":1,"message":"672","line":18,"column":8,"nodeType":"562","messageId":"563","endLine":18,"endColumn":17},{"ruleId":"560","severity":1,"message":"673","line":20,"column":10,"nodeType":"562","messageId":"563","endLine":20,"endColumn":17},{"ruleId":"560","severity":1,"message":"674","line":22,"column":7,"nodeType":"562","messageId":"563","endLine":22,"endColumn":18},{"ruleId":"560","severity":1,"message":"675","line":24,"column":26,"nodeType":"562","messageId":"563","endLine":24,"endColumn":32},{"ruleId":"560","severity":1,"message":"676","line":25,"column":15,"nodeType":"562","messageId":"563","endLine":25,"endColumn":19},{"ruleId":"560","severity":1,"message":"677","line":28,"column":7,"nodeType":"562","messageId":"563","endLine":28,"endColumn":14},{"ruleId":"560","severity":1,"message":"678","line":40,"column":9,"nodeType":"562","messageId":"563","endLine":40,"endColumn":16},{"ruleId":"560","severity":1,"message":"679","line":45,"column":10,"nodeType":"562","messageId":"563","endLine":45,"endColumn":20},{"ruleId":"560","severity":1,"message":"680","line":47,"column":9,"nodeType":"562","messageId":"563","endLine":47,"endColumn":14},{"ruleId":"560","severity":1,"message":"681","line":52,"column":12,"nodeType":"562","messageId":"563","endLine":52,"endColumn":16},{"ruleId":"560","severity":1,"message":"682","line":54,"column":12,"nodeType":"562","messageId":"563","endLine":54,"endColumn":17},{"ruleId":"560","severity":1,"message":"683","line":54,"column":19,"nodeType":"562","messageId":"563","endLine":54,"endColumn":27},{"ruleId":"560","severity":1,"message":"684","line":55,"column":12,"nodeType":"562","messageId":"563","endLine":55,"endColumn":19},{"ruleId":"560","severity":1,"message":"685","line":55,"column":21,"nodeType":"562","messageId":"563","endLine":55,"endColumn":31},{"ruleId":"560","severity":1,"message":"686","line":59,"column":12,"nodeType":"562","messageId":"563","endLine":59,"endColumn":21},{"ruleId":"606","severity":1,"message":"610","line":96,"column":31,"nodeType":"608","messageId":"609","endLine":96,"endColumn":33},{"ruleId":"606","severity":1,"message":"610","line":96,"column":47,"nodeType":"608","messageId":"609","endLine":96,"endColumn":49},{"ruleId":"575","severity":1,"message":"687","line":103,"column":8,"nodeType":"577","endLine":103,"endColumn":10,"suggestions":"688"},{"ruleId":"606","severity":1,"message":"607","line":150,"column":48,"nodeType":"608","messageId":"609","endLine":150,"endColumn":50},{"ruleId":"560","severity":1,"message":"628","line":1,"column":17,"nodeType":"562","messageId":"563","endLine":1,"endColumn":25},{"ruleId":"560","severity":1,"message":"689","line":1,"column":27,"nodeType":"562","messageId":"563","endLine":1,"endColumn":36},{"ruleId":"560","severity":1,"message":"649","line":3,"column":10,"nodeType":"562","messageId":"563","endLine":3,"endColumn":18},{"ruleId":"622","severity":1,"message":"661","line":15,"column":17,"nodeType":"624","endLine":15,"endColumn":44},{"ruleId":"556","replacedBy":"690"},{"ruleId":"558","replacedBy":"691"},{"ruleId":"560","severity":1,"message":"689","line":1,"column":27,"nodeType":"562","messageId":"563","endLine":1,"endColumn":36},{"ruleId":"560","severity":1,"message":"665","line":3,"column":10,"nodeType":"562","messageId":"563","endLine":3,"endColumn":22},{"ruleId":"560","severity":1,"message":"692","line":3,"column":30,"nodeType":"562","messageId":"563","endLine":3,"endColumn":36},{"ruleId":"560","severity":1,"message":"666","line":4,"column":10,"nodeType":"562","messageId":"563","endLine":4,"endColumn":22},{"ruleId":"560","severity":1,"message":"667","line":4,"column":24,"nodeType":"562","messageId":"563","endLine":4,"endColumn":36},{"ruleId":"560","severity":1,"message":"693","line":4,"column":38,"nodeType":"562","messageId":"563","endLine":4,"endColumn":60},{"ruleId":"560","severity":1,"message":"645","line":7,"column":8,"nodeType":"562","messageId":"563","endLine":7,"endColumn":18},{"ruleId":"560","severity":1,"message":"677","line":13,"column":7,"nodeType":"562","messageId":"563","endLine":13,"endColumn":14},{"ruleId":"560","severity":1,"message":"694","line":22,"column":7,"nodeType":"562","messageId":"563","endLine":22,"endColumn":19},{"ruleId":"560","severity":1,"message":"681","line":46,"column":12,"nodeType":"562","messageId":"563","endLine":46,"endColumn":16},{"ruleId":"560","severity":1,"message":"695","line":48,"column":12,"nodeType":"562","messageId":"563","endLine":48,"endColumn":22},{"ruleId":"560","severity":1,"message":"696","line":48,"column":24,"nodeType":"562","messageId":"563","endLine":48,"endColumn":37},{"ruleId":"697","severity":1,"message":"698","line":96,"column":21,"nodeType":"624","endLine":96,"endColumn":45},{"ruleId":"606","severity":1,"message":"607","line":99,"column":44,"nodeType":"608","messageId":"609","endLine":99,"endColumn":46},{"ruleId":"560","severity":1,"message":"628","line":1,"column":17,"nodeType":"562","messageId":"563","endLine":1,"endColumn":25},{"ruleId":"560","severity":1,"message":"615","line":3,"column":10,"nodeType":"562","messageId":"563","endLine":3,"endColumn":14},{"ruleId":"560","severity":1,"message":"664","line":3,"column":16,"nodeType":"562","messageId":"563","endLine":3,"endColumn":21},{"ruleId":"560","severity":1,"message":"581","line":3,"column":23,"nodeType":"562","messageId":"563","endLine":3,"endColumn":29},{"ruleId":"560","severity":1,"message":"665","line":3,"column":31,"nodeType":"562","messageId":"563","endLine":3,"endColumn":43},{"ruleId":"560","severity":1,"message":"699","line":3,"column":45,"nodeType":"562","messageId":"563","endLine":3,"endColumn":51},{"ruleId":"560","severity":1,"message":"666","line":4,"column":10,"nodeType":"562","messageId":"563","endLine":4,"endColumn":22},{"ruleId":"560","severity":1,"message":"667","line":4,"column":24,"nodeType":"562","messageId":"563","endLine":4,"endColumn":36},{"ruleId":"560","severity":1,"message":"700","line":5,"column":10,"nodeType":"562","messageId":"563","endLine":5,"endColumn":16},{"ruleId":"560","severity":1,"message":"701","line":6,"column":10,"nodeType":"562","messageId":"563","endLine":6,"endColumn":27},{"ruleId":"560","severity":1,"message":"645","line":7,"column":8,"nodeType":"562","messageId":"563","endLine":7,"endColumn":18},{"ruleId":"560","severity":1,"message":"568","line":8,"column":26,"nodeType":"562","messageId":"563","endLine":8,"endColumn":31},{"ruleId":"560","severity":1,"message":"702","line":2,"column":17,"nodeType":"562","messageId":"563","endLine":2,"endColumn":26},{"ruleId":"560","severity":1,"message":"703","line":3,"column":16,"nodeType":"562","messageId":"563","endLine":3,"endColumn":23},{"ruleId":"560","severity":1,"message":"704","line":3,"column":25,"nodeType":"562","messageId":"563","endLine":3,"endColumn":32},{"ruleId":"560","severity":1,"message":"705","line":3,"column":34,"nodeType":"562","messageId":"563","endLine":3,"endColumn":40},{"ruleId":"560","severity":1,"message":"706","line":4,"column":10,"nodeType":"562","messageId":"563","endLine":4,"endColumn":18},{"ruleId":"560","severity":1,"message":"707","line":190,"column":7,"nodeType":"562","messageId":"563","endLine":190,"endColumn":15},{"ruleId":"560","severity":1,"message":"708","line":270,"column":18,"nodeType":"562","messageId":"563","endLine":270,"endColumn":33},{"ruleId":"560","severity":1,"message":"709","line":277,"column":12,"nodeType":"562","messageId":"563","endLine":277,"endColumn":15},{"ruleId":"560","severity":1,"message":"710","line":280,"column":14,"nodeType":"562","messageId":"563","endLine":280,"endColumn":24},{"ruleId":"606","severity":1,"message":"607","line":293,"column":38,"nodeType":"608","messageId":"609","endLine":293,"endColumn":40},{"ruleId":"711","severity":1,"message":"712","line":296,"column":49,"nodeType":"713","messageId":"714","endLine":298,"endColumn":26},{"ruleId":"575","severity":1,"message":"715","line":324,"column":8,"nodeType":"577","endLine":324,"endColumn":10,"suggestions":"716"},{"ruleId":"606","severity":1,"message":"607","line":329,"column":18,"nodeType":"608","messageId":"609","endLine":329,"endColumn":20},{"ruleId":"560","severity":1,"message":"670","line":4,"column":8,"nodeType":"562","messageId":"563","endLine":4,"endColumn":13},{"ruleId":"560","severity":1,"message":"717","line":7,"column":10,"nodeType":"562","messageId":"563","endLine":7,"endColumn":27},{"ruleId":"560","severity":1,"message":"718","line":9,"column":23,"nodeType":"562","messageId":"563","endLine":9,"endColumn":42},{"ruleId":"560","severity":1,"message":"719","line":12,"column":36,"nodeType":"562","messageId":"563","endLine":12,"endColumn":50},{"ruleId":"560","severity":1,"message":"720","line":28,"column":12,"nodeType":"562","messageId":"563","endLine":28,"endColumn":19},{"ruleId":"560","severity":1,"message":"721","line":28,"column":21,"nodeType":"562","messageId":"563","endLine":28,"endColumn":31},{"ruleId":"560","severity":1,"message":"722","line":35,"column":12,"nodeType":"562","messageId":"563","endLine":35,"endColumn":26},{"ruleId":"560","severity":1,"message":"723","line":35,"column":28,"nodeType":"562","messageId":"563","endLine":35,"endColumn":45},{"ruleId":"560","severity":1,"message":"724","line":46,"column":12,"nodeType":"562","messageId":"563","endLine":46,"endColumn":23},{"ruleId":"560","severity":1,"message":"725","line":46,"column":25,"nodeType":"562","messageId":"563","endLine":46,"endColumn":39},{"ruleId":"560","severity":1,"message":"695","line":51,"column":12,"nodeType":"562","messageId":"563","endLine":51,"endColumn":22},{"ruleId":"560","severity":1,"message":"696","line":51,"column":24,"nodeType":"562","messageId":"563","endLine":51,"endColumn":37},{"ruleId":"726","severity":1,"message":"727","line":79,"column":35,"nodeType":"713","messageId":"728","endLine":79,"endColumn":37},{"ruleId":"606","severity":1,"message":"607","line":80,"column":22,"nodeType":"608","messageId":"609","endLine":80,"endColumn":24},{"ruleId":"697","severity":1,"message":"698","line":138,"column":25,"nodeType":"624","endLine":138,"endColumn":102},{"ruleId":"606","severity":1,"message":"607","line":178,"column":70,"nodeType":"608","messageId":"609","endLine":178,"endColumn":72},{"ruleId":"606","severity":1,"message":"607","line":185,"column":68,"nodeType":"608","messageId":"609","endLine":185,"endColumn":70},{"ruleId":"560","severity":1,"message":"628","line":1,"column":17,"nodeType":"562","messageId":"563","endLine":1,"endColumn":25},{"ruleId":"560","severity":1,"message":"729","line":3,"column":10,"nodeType":"562","messageId":"563","endLine":3,"endColumn":19},{"ruleId":"560","severity":1,"message":"730","line":4,"column":10,"nodeType":"562","messageId":"563","endLine":4,"endColumn":18},{"ruleId":"560","severity":1,"message":"598","line":6,"column":10,"nodeType":"562","messageId":"563","endLine":6,"endColumn":20},{"ruleId":"560","severity":1,"message":"731","line":6,"column":40,"nodeType":"562","messageId":"563","endLine":6,"endColumn":50},{"ruleId":"560","severity":1,"message":"670","line":7,"column":8,"nodeType":"562","messageId":"563","endLine":7,"endColumn":13},{"ruleId":"560","severity":1,"message":"732","line":8,"column":10,"nodeType":"562","messageId":"563","endLine":8,"endColumn":21},{"ruleId":"560","severity":1,"message":"718","line":8,"column":23,"nodeType":"562","messageId":"563","endLine":8,"endColumn":42},{"ruleId":"697","severity":1,"message":"698","line":38,"column":29,"nodeType":"624","endLine":38,"endColumn":51},{"ruleId":"622","severity":1,"message":"661","line":68,"column":48,"nodeType":"624","endLine":68,"endColumn":125},{"ruleId":"560","severity":1,"message":"628","line":1,"column":17,"nodeType":"562","messageId":"563","endLine":1,"endColumn":25},{"ruleId":"560","severity":1,"message":"733","line":5,"column":10,"nodeType":"562","messageId":"563","endLine":5,"endColumn":27},{"ruleId":"560","severity":1,"message":"734","line":15,"column":11,"nodeType":"562","messageId":"563","endLine":15,"endColumn":19},{"ruleId":"697","severity":1,"message":"698","line":22,"column":17,"nodeType":"624","endLine":22,"endColumn":40},{"ruleId":"560","severity":1,"message":"729","line":3,"column":10,"nodeType":"562","messageId":"563","endLine":3,"endColumn":19},{"ruleId":"560","severity":1,"message":"730","line":4,"column":10,"nodeType":"562","messageId":"563","endLine":4,"endColumn":18},{"ruleId":"560","severity":1,"message":"598","line":6,"column":10,"nodeType":"562","messageId":"563","endLine":6,"endColumn":20},{"ruleId":"560","severity":1,"message":"669","line":6,"column":22,"nodeType":"562","messageId":"563","endLine":6,"endColumn":32},{"ruleId":"560","severity":1,"message":"735","line":6,"column":34,"nodeType":"562","messageId":"563","endLine":6,"endColumn":38},{"ruleId":"560","severity":1,"message":"731","line":6,"column":40,"nodeType":"562","messageId":"563","endLine":6,"endColumn":50},{"ruleId":"560","severity":1,"message":"670","line":7,"column":8,"nodeType":"562","messageId":"563","endLine":7,"endColumn":13},{"ruleId":"575","severity":1,"message":"736","line":50,"column":8,"nodeType":"577","endLine":50,"endColumn":10,"suggestions":"737"},{"ruleId":"560","severity":1,"message":"628","line":1,"column":17,"nodeType":"562","messageId":"563","endLine":1,"endColumn":25},{"ruleId":"697","severity":1,"message":"698","line":17,"column":29,"nodeType":"624","endLine":17,"endColumn":139},{"ruleId":"560","severity":1,"message":"628","line":1,"column":17,"nodeType":"562","messageId":"563","endLine":1,"endColumn":25},{"ruleId":"697","severity":1,"message":"698","line":23,"column":29,"nodeType":"624","endLine":23,"endColumn":81},{"ruleId":"697","severity":1,"message":"698","line":37,"column":29,"nodeType":"624","endLine":37,"endColumn":83},{"ruleId":"560","severity":1,"message":"628","line":1,"column":17,"nodeType":"562","messageId":"563","endLine":1,"endColumn":25},{"ruleId":"560","severity":1,"message":"738","line":3,"column":8,"nodeType":"562","messageId":"563","endLine":3,"endColumn":18},{"ruleId":"560","severity":1,"message":"739","line":4,"column":8,"nodeType":"562","messageId":"563","endLine":4,"endColumn":20},{"ruleId":"560","severity":1,"message":"740","line":5,"column":8,"nodeType":"562","messageId":"563","endLine":5,"endColumn":16},{"ruleId":"560","severity":1,"message":"741","line":8,"column":9,"nodeType":"562","messageId":"563","endLine":8,"endColumn":16},{"ruleId":"560","severity":1,"message":"742","line":9,"column":9,"nodeType":"562","messageId":"563","endLine":9,"endColumn":13},{"ruleId":"560","severity":1,"message":"689","line":1,"column":27,"nodeType":"562","messageId":"563","endLine":1,"endColumn":36},{"ruleId":"697","severity":1,"message":"698","line":24,"column":25,"nodeType":"624","endLine":24,"endColumn":49},{"ruleId":"560","severity":1,"message":"729","line":8,"column":10,"nodeType":"562","messageId":"563","endLine":8,"endColumn":19},{"ruleId":"560","severity":1,"message":"730","line":9,"column":10,"nodeType":"562","messageId":"563","endLine":9,"endColumn":18},{"ruleId":"560","severity":1,"message":"743","line":13,"column":10,"nodeType":"562","messageId":"563","endLine":13,"endColumn":21},{"ruleId":"560","severity":1,"message":"677","line":20,"column":7,"nodeType":"562","messageId":"563","endLine":20,"endColumn":14},{"ruleId":"560","severity":1,"message":"678","line":32,"column":9,"nodeType":"562","messageId":"563","endLine":32,"endColumn":16},{"ruleId":"560","severity":1,"message":"679","line":37,"column":10,"nodeType":"562","messageId":"563","endLine":37,"endColumn":20},{"ruleId":"560","severity":1,"message":"680","line":39,"column":9,"nodeType":"562","messageId":"563","endLine":39,"endColumn":14},{"ruleId":"560","severity":1,"message":"744","line":41,"column":12,"nodeType":"562","messageId":"563","endLine":41,"endColumn":20},{"ruleId":"560","severity":1,"message":"681","line":44,"column":12,"nodeType":"562","messageId":"563","endLine":44,"endColumn":16},{"ruleId":"560","severity":1,"message":"682","line":46,"column":12,"nodeType":"562","messageId":"563","endLine":46,"endColumn":17},{"ruleId":"560","severity":1,"message":"684","line":47,"column":12,"nodeType":"562","messageId":"563","endLine":47,"endColumn":19},{"ruleId":"560","severity":1,"message":"685","line":47,"column":21,"nodeType":"562","messageId":"563","endLine":47,"endColumn":31},{"ruleId":"560","severity":1,"message":"745","line":49,"column":12,"nodeType":"562","messageId":"563","endLine":49,"endColumn":19},{"ruleId":"560","severity":1,"message":"746","line":51,"column":12,"nodeType":"562","messageId":"563","endLine":51,"endColumn":26},{"ruleId":"560","severity":1,"message":"747","line":53,"column":11,"nodeType":"562","messageId":"563","endLine":53,"endColumn":20},{"ruleId":"560","severity":1,"message":"748","line":57,"column":11,"nodeType":"562","messageId":"563","endLine":57,"endColumn":19},{"ruleId":"560","severity":1,"message":"749","line":61,"column":11,"nodeType":"562","messageId":"563","endLine":61,"endColumn":23},{"ruleId":"560","severity":1,"message":"750","line":65,"column":11,"nodeType":"562","messageId":"563","endLine":65,"endColumn":19},{"ruleId":"560","severity":1,"message":"751","line":69,"column":11,"nodeType":"562","messageId":"563","endLine":69,"endColumn":21},{"ruleId":"606","severity":1,"message":"610","line":99,"column":31,"nodeType":"608","messageId":"609","endLine":99,"endColumn":33},{"ruleId":"575","severity":1,"message":"752","line":106,"column":8,"nodeType":"577","endLine":106,"endColumn":10,"suggestions":"753"},"no-native-reassign",["754"],"no-negated-in-lhs",["755"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Icon' is defined but never used.","'VideoCameraOutlined' is defined but never used.","'Tag' is defined but never used.","'Space' is defined but never used.","'CheckOutlined' is defined but never used.","'DeleteOutlined' is defined but never used.","'CheckCircleOutlined' is defined but never used.","'DownCircleTwoTone' is defined but never used.","'CloseCircleTwoTone' is defined but never used.","'location' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'user?.token'. Either include them or remove the dependency array.","ArrayExpression",["756"],"'GetProductsList' is defined but never used.","'user' is assigned a value but never used.","'Button' is defined but never used.","'Radio' is defined but never used.","'Checkbox' is defined but never used.","'Option' is assigned a value but never used.","'Values' is defined but never used.","'onChangeAqua' is defined but never used.","'onChangeEat' is defined but never used.","'handleChange' is defined but never used.","'isAqua' is assigned a value but never used.","'isEat' is assigned a value but never used.","'infoMessage' is defined but never used.","'successMessage' is defined but never used.","'errorMessage' is defined but never used.","'CreateProduct' is defined but never used.","'IncomeModal' is defined but never used.","'InputNumber' is defined but never used.","'Popconfirm' is defined but never used.","'Typography' is defined but never used.","'ProductEntity' is defined but never used.","'visible' is assigned a value but never used.","'setVisible' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'income' is assigned a value but never used.","'objectName' is assigned a value but never used.",["757"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'productId' is assigned a value but never used.","'setProductid' is assigned a value but never used.",["754"],["755"],"'Form' is defined but never used.",["758"],["754"],["755"],"'CreateIncomeArray' is defined but never used.",["759"],"'userStorage' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'CreateObjectDTO' is defined but never used.","'product_id' is defined but never used.",["760"],"'useState' is defined but never used.","'GetStorageList' is defined but never used.","'CreateStorageItem' is defined but never used.","'StorageEntity' is defined but never used.","'StorageFormModal' is defined but never used.","'useLocation' is defined but never used.","'Text' is assigned a value but never used.","'formatMoney' is defined but never used.",["761"],"'DatePicker' is defined but never used.","'locale' is defined but never used.","'dateFormat' is assigned a value but never used.",["762"],"'onChange' is defined but never used.",["754"],["755"],"'Header' is defined but never used.","'HeaderTemp' is defined but never used.","'TreeView' is defined but never used.","'ArticlePage' is defined but never used.","'HalykLogo' is defined but never used.","'MainPage' is defined but never used.","'signal' is assigned a value but never used.","'announcement' is assigned a value but never used.","'setAnnouncement' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'abortCtrl' and 'props.cityId'. Either include them or remove the dependency array. If 'setCityId' needs the current value of 'props.cityId', you can also switch to useReducer instead of useState and read 'props.cityId' in the reducer.",["763"],["754"],["755"],"'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'_query' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'handleClickOutside'. Either include it or remove the dependency array.",["764"],"'Input' is defined but never used.","'AutoComplete' is defined but never used.","'UserOutlined' is defined but never used.","'LockOutlined' is defined but never used.","'Menu' is defined but never used.","'Breadcrumb' is defined but never used.","'Title' is defined but never used.","'Modal' is defined but never used.","'YandexMap' is defined but never used.","'Article' is defined but never used.","'queryString' is assigned a value but never used.","'Footer' is assigned a value but never used.","'Link' is assigned a value but never used.","'mockVal' is assigned a value but never used.","'history' is assigned a value but never used.","'queryParam' is assigned a value but never used.","'query' is assigned a value but never used.","'form' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'options' is assigned a value but never used.","'setOptions' is assigned a value but never used.","'articleId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetch' and 'location.pathname'. Either include them or remove the dependency array.",["765"],"'useEffect' is defined but never used.",["754"],["755"],"'Select' is defined but never used.","'PropertySafetyOutlined' is defined but never used.","'items' is assigned a value but never used.","'searchText' is assigned a value but never used.","'setSearchText' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Avatar' is defined but never used.","'Search' is defined but never used.","'SearchResponseDTO' is defined but never used.","'Component' is defined but never used.","'Popover' is defined but never used.","'Tooltip' is defined but never used.","'Layout' is defined but never used.","'DataNode' is defined but never used.","'treeDate' is assigned a value but never used.","'renderTreeNodes' is assigned a value but never used.","'int' is assigned a value but never used.","'onLoadData' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'i'.","ArrowFunctionExpression","unsafeRefs","React Hook useEffect has missing dependencies: 'fetch' and 'treeData'. Either include them or remove the dependency array.",["766"],"'ArrowLeftOutlined' is defined but never used.","'SubcategoryArticles' is defined but never used.","'GetArticleInfo' is defined but never used.","'loading' is assigned a value but never used.","'SetLoading' is assigned a value but never used.","'navMenuClicked' is assigned a value but never used.","'setNavMenuClicked' is assigned a value but never used.","'articleInfo' is assigned a value but never used.","'setArticleInfo' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'SearchTop' is defined but never used.","'Category' is defined but never used.","'Pagination' is defined but never used.","'SearchModel' is defined but never used.","'getByDisplayValue' is defined but never used.","'getValue' is assigned a value but never used.","'List' is defined but never used.","React Hook useEffect has a missing dependency: 'getArticleInfo'. Either include it or remove the dependency array.",["767"],"'ClientIcon' is defined but never used.","'OperatorIcon' is defined but never used.","'StepIcon' is defined but never used.","'TabPane' is assigned a value but never used.","'Step' is assigned a value but never used.","'TreeContent' is defined but never used.","'treeData' is assigned a value but never used.","'suggest' is assigned a value but never used.","'isModalVisible' is assigned a value but never used.","'showModal' is assigned a value but never used.","'handleOk' is assigned a value but never used.","'handleCancel' is assigned a value but never used.","'onChange' is assigned a value but never used.","'renderItem' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetch' and 'location'. Either include them or remove the dependency array.",["768"],"no-global-assign","no-unsafe-negation",{"desc":"769","fix":"770"},{"desc":"769","fix":"771"},{"desc":"769","fix":"772"},{"desc":"769","fix":"773"},{"desc":"769","fix":"774"},{"desc":"769","fix":"775"},{"desc":"769","fix":"776"},{"desc":"777","fix":"778"},{"desc":"779","fix":"780"},{"desc":"781","fix":"782"},{"desc":"783","fix":"784"},{"desc":"785","fix":"786"},{"desc":"787","fix":"788"},"Update the dependencies array to be: [history, user?.token]",{"range":"789","text":"790"},{"range":"791","text":"790"},{"range":"792","text":"790"},{"range":"793","text":"790"},{"range":"794","text":"790"},{"range":"795","text":"790"},{"range":"796","text":"790"},"Update the dependencies array to be: [abortCtrl, props.cityId]",{"range":"797","text":"798"},"Update the dependencies array to be: [handleClickOutside]",{"range":"799","text":"800"},"Update the dependencies array to be: [fetch, location.pathname]",{"range":"801","text":"802"},"Update the dependencies array to be: [fetch, treeData]",{"range":"803","text":"804"},"Update the dependencies array to be: [getArticleInfo]",{"range":"805","text":"806"},"Update the dependencies array to be: [fetch, location]",{"range":"807","text":"808"},[2855,2857],"[history, user?.token]",[2300,2302],[4564,4566],[2362,2364],[2440,2442],[3191,3193],[2408,2410],[846,848],"[abortCtrl, props.cityId]",[1088,1090],"[handleClickOutside]",[3181,3183],"[fetch, location.pathname]",[13142,13144],"[fetch, treeData]",[1576,1578],"[getArticleInfo]",[2867,2869],"[fetch, location]"]