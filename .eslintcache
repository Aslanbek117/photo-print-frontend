[{"/Users/aslan/solution/src/reportWebVitals.js":"1","/Users/aslan/solution/src/index.tsx":"2","/Users/aslan/solution/src/serviceWorker.ts":"3","/Users/aslan/solution/src/App.tsx":"4","/Users/aslan/solution/src/components/sidebar/Sidebar.tsx":"5","/Users/aslan/solution/src/components/sidebar/product/Product.tsx":"6","/Users/aslan/solution/src/components/menu/Wrapper.tsx":"7","/Users/aslan/solution/src/actions/get.tsx":"8","/Users/aslan/solution/src/utils/Notifications.tsx":"9","/Users/aslan/solution/src/components/modsls/ProductModal.tsx":"10","/Users/aslan/solution/src/http/http.ts":"11","/Users/aslan/solution/src/components/income/Income.tsx":"12","/Users/aslan/solution/src/components/modsls/IncomeModal.tsx":"13"},{"size":362,"mtime":1610017410515,"results":"14","hashOfConfig":"15"},{"size":503,"mtime":1610018387026,"results":"16","hashOfConfig":"15"},{"size":5295,"mtime":1610018344520,"results":"17","hashOfConfig":"15"},{"size":517,"mtime":1610018841735,"results":"18","hashOfConfig":"15"},{"size":2220,"mtime":1610064190716,"results":"19","hashOfConfig":"15"},{"size":4162,"mtime":1610031573100,"results":"20","hashOfConfig":"15"},{"size":626,"mtime":1610060325154,"results":"21","hashOfConfig":"15"},{"size":1233,"mtime":1610029342200,"results":"22","hashOfConfig":"15"},{"size":742,"mtime":1610023684045,"results":"23","hashOfConfig":"15"},{"size":3437,"mtime":1610032580553,"results":"24","hashOfConfig":"15"},{"size":241,"mtime":1610023976760,"results":"25","hashOfConfig":"15"},{"size":8313,"mtime":1610114391209,"results":"26","hashOfConfig":"15"},{"size":3332,"mtime":1610064937702,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ksrdtt",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},"/Users/aslan/solution/src/reportWebVitals.js",[],"/Users/aslan/solution/src/index.tsx",[],["62","63"],"/Users/aslan/solution/src/serviceWorker.ts",[],"/Users/aslan/solution/src/App.tsx",["64"],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {Sidebar } from './components/sidebar/Sidebar';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport \"antd/dist/antd.css\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div>\n        \n        <div>\n          <div className=\"wrapper\">\n            <Route path=\"/\"  >\n                <Sidebar />\n              </Route>\n\n          </div>\n        </div>\n      </div>\n    </BrowserRouter>\n\n  );\n}\n\nexport default App;\n","/Users/aslan/solution/src/components/sidebar/Sidebar.tsx",["65","66","67","68","69","70","71","72"],"import React from 'react'\nimport { Layout, Menu } from 'antd';\nimport {\n  AppstoreOutlined,\n  BarChartOutlined,\n  CloudOutlined,\n  ShopOutlined,\n  TeamOutlined,\n  UserOutlined,\n  UploadOutlined,\n  VideoCameraOutlined,\n} from '@ant-design/icons';\nimport { Product } from './product/Product';\nimport WrapperStatistic from 'antd/lib/statistic/Statistic';\nimport { Wrapper } from '../menu/Wrapper';\nconst { Header, Content, Footer, Sider } = Layout;\n\ninterface MenuState {\n  title: string;\n  state: number;\n}\n\n\nexport class Sidebar extends React.Component<{}, MenuState> {\n\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n        title: \"\", \n        state: 0,\n    }\n\n    this.handleMenuClick = this.handleMenuClick.bind(this);\n}\n\n\ncomponentDidMount() {\n  this.setState({\n      title: \"Товары\",\n      state: 1,\n  });\n}\n\nhandleMenuClick(event: any) {\n  console.log(event)\n  this.setState({\n    title: event.key,\n    state: parseInt(event.key, 10)\n  })\n\n  console.log(this.state);\n}\n\n\n  render() {\n    return (\n<Layout>\n    <Sider\n      style={{\n        overflow: 'auto',\n        height: '100vh',\n        position: 'fixed',\n        left: 0,\n      }}\n    >\n      <div className=\"logo\" />\n      <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['4']}   onClick={this.handleMenuClick}>\n        <Menu.Item key=\"1\" icon={<UserOutlined />}>\n          Товары\n        </Menu.Item>\n        <Menu.Item key=\"2\" icon={<VideoCameraOutlined />}>\n          Приход\n        </Menu.Item>\n        <Menu.Item key=\"3\" icon={<VideoCameraOutlined />}>\n          Расход\n        </Menu.Item>\n      </Menu>\n    </Sider>\n    <Layout className=\"site-layout\" style={{ marginLeft: 200 }}>\n      <Header className=\"site-layout-background\" style={{ padding: 0 }} >\n        \n      </Header>\n      <Content style={{ margin: '24px 16px 0', overflow: 'initial' }}>\n        <div className=\"site-layout-background\" style={{ padding: 24 }}>\n          {/* <Product> \n\n          </Product> */}\n\n          <Wrapper state={this.state.state} title={this.state.title}/>              \n        </div>\n      </Content>\n      <Footer style={{ textAlign: 'center' }}>Villa ©2021 </Footer>\n    </Layout>\n  </Layout>\n    );\n  }\n}\n\n","/Users/aslan/solution/src/components/sidebar/product/Product.tsx",["73","74","75","76","77"],"import React, { FunctionComponent, useState, useEffect } from 'react'\nimport { Table, Tag, Space } from 'antd';\nimport { Button } from 'antd';\nimport { infoMessage, successMessage, errorMessage } from '../../../utils/Notifications';\nimport { CreateProduct, GetProductsList } from '../../../actions/get';\nimport { ProductFormModal } from '../../modsls/ProductModal';\nimport { CreateProductDTO } from '../../../dto/CreateProductDTO';\nimport CheckOutlined, { DeleteOutlined, CheckCircleOutlined, DownCircleTwoTone, CloseCircleTwoTone } from '@ant-design/icons';\n\n\nconst columns = [\n    {\n        title: 'Наименование',\n        dataIndex: 'title',\n        key: 'title',\n    },\n    {\n        title: 'Жидкость',\n        dataIndex: 'isAqua',\n        key: 'isAqua',\n        render: res => (\n            <>  \n            \n                {res === true ? (\n                    <div>\n                        \n                        <DownCircleTwoTone style={{ fontSize: '24px', color: '#08c' }} />\n                                            </div>\n                ) : <div> \n                    <CloseCircleTwoTone style={{ fontSize: '24px', color: '#08c' }}/>\n                     </div>} \n            </>\n          )\n    },\n    {\n        title: 'Пища',\n        dataIndex: 'isEat',\n        key: 'isEat',\n        render: res => (\n            <>  \n                {res === true ? (\n                    <div>\n                        \n                        <DownCircleTwoTone style={{ fontSize: '24px', color: '#08c' }} />\n                                            </div>\n                ) : <div> \n                    <CloseCircleTwoTone style={{ fontSize: '24px', color: '#08c' }} />\n                </div>} \n            </>\n          )\n    },\n    {\n        title: 'Ед. измерения',\n        dataIndex: 'unit',\n        key: 'unit',\n    },\n];\n\n\n\ninterface ProductProps {\n    isModalVisible: boolean;\n}\n\n\nexport const Product: FunctionComponent<ProductProps> = (data: ProductProps) => {\n    const [visible, setVisible] = useState(false);\n    const [isLoading, setisLoading] = useState(true);\n    const [response, setResponse] = useState<any>(null)\n\n\n\n    const createNewProduct = async (productTitle: string, isAqua: boolean, isEat: boolean, unit: string) => {\n        setVisible(false);\n        infoMessage(\"Отправлен запрос на создании позиции\", \"\");\n        let response;\n\n        let createProductDTO: CreateProductDTO = {\n            title: productTitle,\n            isAqua: isAqua,\n            isEat: isEat,\n            unit: unit,\n        };\n\n        let body = {\n            \"product\": {\n                \"title\": createProductDTO.title,\n                \"isAqua\": createProductDTO.isAqua,\n                \"isEat\": createProductDTO.isEat,\n                \"unit\": createProductDTO.unit\n            }\n        };\n\n        console.log(\"[CreateProductDTO] \", body)\n\n        response = await CreateProduct(body);\n\n        if (response) {\n            successMessage(\"Позиция успешно создана\", \"\");\n            // await this.getDirsList();\n        } else {\n            errorMessage(\"Произошла ошибка при создании позиции\", response.message);\n        }\n    }\n\n    useEffect(() => {\n        setisLoading(true);\n        async function fetchMyAPI() {\n            let resp = await GetProductsList();\n            setResponse(resp)\n            setisLoading(false);\n        }\n\n        fetchMyAPI()\n    \n    }, [])\n\n    return (\n\n        <div>\n            {isLoading ? \"loading\" : (\n                <div>\n\n                    <Button type=\"primary\" onClick={() => setVisible(true)}> Добавить позицию</Button>\n                    <ProductFormModal visible={visible} inputPlaceHolder=\"Кола\" onConfirm={(a, b, c, d) => createNewProduct(a, b, c, d)} onCancel={() => setVisible(false)} title=\"Создание позиции\" okText={\"Создать\"} />\n\n                    <div>\n                        <Table dataSource={response} columns={columns} />;\n                    </div>\n                </div>\n            )}\n\n        </div>\n    );\n}\n\n","/Users/aslan/solution/src/components/menu/Wrapper.tsx",["78"],"import React, { FunctionComponent } from 'react'\nimport { Product } from '../sidebar/product/Product';\nimport { GetProductsList } from '../../actions/get';\nimport { Income } from '../income/Income';\n\n\ninterface ContentProps {\n    state: number;\n    title: string;\n}\n\n\n\nexport const Wrapper: FunctionComponent<ContentProps> = (props: ContentProps) => {\n    let toDisplay;\n    if (props.state === 1) {\n        toDisplay = <Product isModalVisible={false}  />\n\n    } else if (props.state === 2) {\n        toDisplay = <Income isModalVisible={false} />\n    }\n    return (\n        <div>\n            {toDisplay}\n        </div>\n    )\n}","/Users/aslan/solution/src/actions/get.tsx",["79","80","81"],"import { httpClient } from \"../http/http\";\nimport { CreateProductDTO, CreateProductModel } from \"../dto/CreateProductDTO\";\nimport { Product } from \"../components/sidebar/product/Product\";\n\n\n\n\n\n//Products List\nexport const GetProductsList = async (): Promise<any> =>  {\n    try {\n        const response = await (await httpClient()).get(\"product/list\")\n        return response.data;\n    } catch (err) {\n        return {} as any;\n    }\n}\n\n\nexport const CreateProduct = async(body: any): Promise<any> => {\n    console.log(\"HERE\");\n    try {\n\n        // let body: CreateProductModel = {\n        //     product: createProductDTO\n        // }\n\n        // console.log(JSON.stringify(body));\n        // let body = {\n        //     \"product\": {\n        //         \"title\": createProductDTO.title,\n        //         \"isAqua\": createProductDTO.isAqua,\n        //         \"isEat\": createProductDTO.isEat,\n        //         \"unit\": createProductDTO.unit\n        //     }\n        // };\n        \n        console.log(\"sending\", JSON.stringify(body))\n        const response = await (await (await httpClient()).post(\"product/create\", body))\n        return response.data;\n    } catch (err) {\n        console.log(err)\n        return {} as any;\n    }\n}\n","/Users/aslan/solution/src/utils/Notifications.tsx",[],"/Users/aslan/solution/src/components/modsls/ProductModal.tsx",["82","83","84"],"import React, { useState } from 'react';\nimport { Button, Modal, Form, Input, Radio } from 'antd';\nimport { Checkbox } from 'antd';\n\nimport { Select } from 'antd';\n\nconst { Option } = Select;\n\n\ninterface Values {\n    title: string;\n    description: string;\n    modifier: string;\n}\n\ninterface ProductFormModalProps {\n    visible: boolean;\n    title: string;\n    // isAqua: boolean;\n    // isEat: boolean;\n    // unit: string;\n    inputPlaceHolder: string;\n    okText: string;\n    //   onConfirm: (values: Values) => void;\n    onConfirm: (productTitle: string, isAqua: boolean, isEat: boolean, unit: string) => void;\n    onCancel: () => void;\n}\n\nexport const ProductFormModal: React.FC<ProductFormModalProps> = ({\n    visible,\n    onConfirm,\n    onCancel,\n    title,\n    inputPlaceHolder,\n    okText\n}) => {\n    const [form] = Form.useForm();\n\n    function onChangeAqua(e) {\n        setIsAqua(e.target.checked);\n        \n    }\n\n    function onChangeEat(e) {\n        setIsEat(e.target.checked);\n    }\n\n    function handleChange(value) {\n        \n    }\n\n    const [isAqua, setIsAqua] = useState(false);\n    const [isEat, setIsEat] = useState(false);\n\n    return (\n        <Modal\n            visible={visible}\n            title={title}\n            okText={okText}\n            cancelText=\"Отменить\"\n            onCancel={onCancel}\n            onOk={() => {\n                \n                form\n                    .validateFields()\n                    .then((values) => {\n                        form.resetFields();\n                        console.log(values);\n                        onConfirm(values.title, isAqua, isEat, values.unit);\n                    })\n                    .catch(info => {\n                    });\n            }}\n        >\n            <Form\n                form={form}\n                layout=\"vertical\"\n                name=\"form_in_modal\"\n                initialValues={{ modifier: 'public' }}\n            >\n                <Form.Item\n                    name=\"title\"\n                    label=\"Название\"\n\n                    rules={[\n                        { required: true, type: 'string', pattern: new RegExp(/^[0-9a-zA-Z ]+$/), message: \"Должно содержать только цифры и/или буквы английского алфавита\" }]}\n                >\n                    <Input placeholder={inputPlaceHolder} />\n                </Form.Item>\n\n\n                <Form.Item\n                    name=\"isAqua\"\n                >\n                <Checkbox onChange={onChangeAqua}>Жидкость</Checkbox>\n\n                </Form.Item>\n\n                <Form.Item\n                    name=\"isEat\"\n                >       \n                <Checkbox onChange={onChangeEat}>Пища</Checkbox>\n\n                </Form.Item>\n\n                <Form.Item\n                    name=\"unit\"\n                    label=\"Единица измерения\"\n                >\n                      <Select  style={{ width: 120 }} onChange={handleChange}>\n                    <Option value=\"шт\">Шт.</Option>\n                    <Option value=\"кг\">Килограмм</Option>\n                    <Option value=\"гр\">Грамм</Option>\n                    <Option value=\"л\">Литры</Option>\n                    <Option value=\"мл\">Миллилитры</Option>\n                </Select>\n                </Form.Item>\n\n              \n            </Form>\n\n\n        </Modal>\n    );\n};","/Users/aslan/solution/src/http/http.ts",[],"/Users/aslan/solution/src/components/income/Income.tsx",["85","86","87","88","89","90","91","92","93","94","95","96"],"/Users/aslan/solution/src/components/modsls/IncomeModal.tsx",["97","98","99","100","101","102","103","104","105","106"],"import React, { useState } from 'react';\nimport { Button, Modal, Form, Input, Radio } from 'antd';\nimport { DatePicker, Space } from 'antd';\n\n// import 'moment/locale/ru';\nimport locale from 'antd/es/date-picker/locale/ru_RU';\nimport moment from 'moment';\n\nimport { Select } from 'antd';\n\nconst { Option } = Select;\n\nconst dateFormat = 'YYYY/MM/DD';\n\n\n\ninterface Values {\n    title: string;\n    description: string;\n    modifier: string;\n}\n\ninterface IncomeFormModalProps {\n    visible: boolean;\n    title: string;\n    // isAqua: boolean;\n    // isEat: boolean;\n    // unit: string;\n    inputPlaceHolder: string;\n    okText: string;\n    products: any;\n    //   onConfirm: (values: Values) => void;\n    onConfirm: (product_title: string, amount: number) => void;\n    onCancel: () => void;\n}\n\nexport const IncomeModal: React.FC<IncomeFormModalProps> = ({\n    visible,\n    onConfirm,\n    onCancel,\n    title,\n    inputPlaceHolder,\n    okText, \n    products\n}) => {\n    const [form] = Form.useForm();\n\n    function onChangeAqua(e) {\n        setIsAqua(e.target.checked);\n        \n    }\n\n    function onChangeEat(e) {\n        setIsEat(e.target.checked);\n    }\n\n    function handleChange(value) {\n        setProductTitle(value);\n    }\n\n    const [isAqua, setIsAqua] = useState(false);\n    const [isEat, setIsEat] = useState(false);\n\n    const [productTitle, setProductTitle] = useState(\"\");\n    const [productId, setProductid] = useState(0);\n\n    function onChange(date, dateString) {\n        console.log(date, dateString);\n      }\n\n    return (\n        <Modal\n            visible={visible}\n            title={title}\n            okText={okText}\n            cancelText=\"Отменить\"\n            onCancel={onCancel}\n            onOk={() => {\n                \n                form\n                    .validateFields()\n                    .then((values) => {\n                        form.resetFields();\n                        console.log(values);\n                        onConfirm(productTitle, values.amount);\n                    })\n                    .catch(info => {\n                    });\n            }}\n        >\n            <Form\n                form={form}\n                layout=\"vertical\"\n                name=\"form_in_modal\"\n                initialValues={{ modifier: 'public' }}\n            >\n                <Form.Item\n                    name=\"product\"\n                    label=\"Продукт\"\n                >\n                     <Select style={{ width: 120 }} onChange={handleChange}>\n                        {products.map(p => (\n                            <Option value={p.title} > {p.title} </Option>\n                        ))}\n                    </Select>\n                </Form.Item>\n\n                <Form.Item\n                    name=\"amount\"\n                    label=\"Количество\"\n                >\n                    <Input placeholder={inputPlaceHolder} />\n\n                </Form.Item>\n\n                <Form.Item \n                name=\"date\"\n                label=\"Дата\"\n                \n                >\n                <DatePicker \n                 defaultValue={moment('2015/01/01')} format={dateFormat}\n                onChange={onChange} picker=\"week\" locale={locale} size={'middle'}/>\n                </Form.Item>\n\n              \n            </Form>\n\n\n        </Modal>\n    );\n};",{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":2,"column":8,"nodeType":"113","messageId":"114","endLine":2,"endColumn":12},{"ruleId":"111","severity":1,"message":"115","line":4,"column":3,"nodeType":"113","messageId":"114","endLine":4,"endColumn":19},{"ruleId":"111","severity":1,"message":"116","line":5,"column":3,"nodeType":"113","messageId":"114","endLine":5,"endColumn":19},{"ruleId":"111","severity":1,"message":"117","line":6,"column":3,"nodeType":"113","messageId":"114","endLine":6,"endColumn":16},{"ruleId":"111","severity":1,"message":"118","line":7,"column":3,"nodeType":"113","messageId":"114","endLine":7,"endColumn":15},{"ruleId":"111","severity":1,"message":"119","line":8,"column":3,"nodeType":"113","messageId":"114","endLine":8,"endColumn":15},{"ruleId":"111","severity":1,"message":"120","line":10,"column":3,"nodeType":"113","messageId":"114","endLine":10,"endColumn":17},{"ruleId":"111","severity":1,"message":"121","line":13,"column":10,"nodeType":"113","messageId":"114","endLine":13,"endColumn":17},{"ruleId":"111","severity":1,"message":"122","line":14,"column":8,"nodeType":"113","messageId":"114","endLine":14,"endColumn":24},{"ruleId":"111","severity":1,"message":"123","line":2,"column":17,"nodeType":"113","messageId":"114","endLine":2,"endColumn":20},{"ruleId":"111","severity":1,"message":"124","line":2,"column":22,"nodeType":"113","messageId":"114","endLine":2,"endColumn":27},{"ruleId":"111","severity":1,"message":"125","line":8,"column":8,"nodeType":"113","messageId":"114","endLine":8,"endColumn":21},{"ruleId":"111","severity":1,"message":"126","line":8,"column":25,"nodeType":"113","messageId":"114","endLine":8,"endColumn":39},{"ruleId":"111","severity":1,"message":"127","line":8,"column":41,"nodeType":"113","messageId":"114","endLine":8,"endColumn":60},{"ruleId":"111","severity":1,"message":"128","line":3,"column":10,"nodeType":"113","messageId":"114","endLine":3,"endColumn":25},{"ruleId":"111","severity":1,"message":"129","line":2,"column":10,"nodeType":"113","messageId":"114","endLine":2,"endColumn":26},{"ruleId":"111","severity":1,"message":"130","line":2,"column":28,"nodeType":"113","messageId":"114","endLine":2,"endColumn":46},{"ruleId":"111","severity":1,"message":"121","line":3,"column":10,"nodeType":"113","messageId":"114","endLine":3,"endColumn":17},{"ruleId":"111","severity":1,"message":"131","line":2,"column":10,"nodeType":"113","messageId":"114","endLine":2,"endColumn":16},{"ruleId":"111","severity":1,"message":"132","line":2,"column":38,"nodeType":"113","messageId":"114","endLine":2,"endColumn":43},{"ruleId":"111","severity":1,"message":"133","line":10,"column":11,"nodeType":"113","messageId":"114","endLine":10,"endColumn":17},{"ruleId":"111","severity":1,"message":"123","line":2,"column":17,"nodeType":"113","messageId":"114","endLine":2,"endColumn":20},{"ruleId":"111","severity":1,"message":"124","line":2,"column":22,"nodeType":"113","messageId":"114","endLine":2,"endColumn":27},{"ruleId":"111","severity":1,"message":"134","line":4,"column":10,"nodeType":"113","messageId":"114","endLine":4,"endColumn":21},{"ruleId":"111","severity":1,"message":"135","line":4,"column":23,"nodeType":"113","messageId":"114","endLine":4,"endColumn":37},{"ruleId":"111","severity":1,"message":"136","line":4,"column":39,"nodeType":"113","messageId":"114","endLine":4,"endColumn":51},{"ruleId":"111","severity":1,"message":"137","line":5,"column":10,"nodeType":"113","messageId":"114","endLine":5,"endColumn":23},{"ruleId":"111","severity":1,"message":"138","line":9,"column":9,"nodeType":"113","messageId":"114","endLine":9,"endColumn":15},{"ruleId":"139","severity":1,"message":"140","line":141,"column":15,"nodeType":"141","endLine":141,"endColumn":98},{"ruleId":"142","severity":1,"message":"143","line":141,"column":23,"nodeType":"144","messageId":"145","endLine":141,"endColumn":37},{"ruleId":"139","severity":1,"message":"146","line":145,"column":17,"nodeType":"141","endLine":145,"endColumn":20},{"ruleId":"147","severity":1,"message":"148","line":279,"column":24,"nodeType":"149","messageId":"150","endLine":279,"endColumn":26},{"ruleId":"147","severity":1,"message":"148","line":281,"column":26,"nodeType":"149","messageId":"150","endLine":281,"endColumn":28},{"ruleId":"111","severity":1,"message":"131","line":2,"column":10,"nodeType":"113","messageId":"114","endLine":2,"endColumn":16},{"ruleId":"111","severity":1,"message":"132","line":2,"column":38,"nodeType":"113","messageId":"114","endLine":2,"endColumn":43},{"ruleId":"111","severity":1,"message":"124","line":3,"column":22,"nodeType":"113","messageId":"114","endLine":3,"endColumn":27},{"ruleId":"111","severity":1,"message":"133","line":17,"column":11,"nodeType":"113","messageId":"114","endLine":17,"endColumn":17},{"ruleId":"111","severity":1,"message":"151","line":48,"column":14,"nodeType":"113","messageId":"114","endLine":48,"endColumn":26},{"ruleId":"111","severity":1,"message":"152","line":53,"column":14,"nodeType":"113","messageId":"114","endLine":53,"endColumn":25},{"ruleId":"111","severity":1,"message":"153","line":61,"column":12,"nodeType":"113","messageId":"114","endLine":61,"endColumn":18},{"ruleId":"111","severity":1,"message":"154","line":62,"column":12,"nodeType":"113","messageId":"114","endLine":62,"endColumn":17},{"ruleId":"111","severity":1,"message":"155","line":65,"column":12,"nodeType":"113","messageId":"114","endLine":65,"endColumn":21},{"ruleId":"111","severity":1,"message":"156","line":65,"column":23,"nodeType":"113","messageId":"114","endLine":65,"endColumn":35},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'AppstoreOutlined' is defined but never used.","'BarChartOutlined' is defined but never used.","'CloudOutlined' is defined but never used.","'ShopOutlined' is defined but never used.","'TeamOutlined' is defined but never used.","'UploadOutlined' is defined but never used.","'Product' is defined but never used.","'WrapperStatistic' is defined but never used.","'Tag' is defined but never used.","'Space' is defined but never used.","'CheckOutlined' is defined but never used.","'DeleteOutlined' is defined but never used.","'CheckCircleOutlined' is defined but never used.","'GetProductsList' is defined but never used.","'CreateProductDTO' is defined but never used.","'CreateProductModel' is defined but never used.","'Button' is defined but never used.","'Radio' is defined but never used.","'Values' is defined but never used.","'infoMessage' is defined but never used.","'successMessage' is defined but never used.","'errorMessage' is defined but never used.","'CreateProduct' is defined but never used.","'Option' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'onChangeAqua' is defined but never used.","'onChangeEat' is defined but never used.","'isAqua' is assigned a value but never used.","'isEat' is assigned a value but never used.","'productId' is assigned a value but never used.","'setProductid' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]